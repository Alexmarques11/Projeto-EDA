{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Documenta\'E7\'E3o-Projeto-EDA  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.0 \par
}}Documenta\'E7\'E3o-Projeto-EDA}
{\comment Gerado por doxygen 1.9.7.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Documenta\'E7\'E3o-Projeto-EDA}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Vers\'E3o 1.0\par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \'CDndice\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos componentes\par \pard\plain 
{\tc \v \'CDndice dos componentes}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de componentes\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Lista de classes, estruturas, uni\'F5es e interfaces com uma breve descri\'E7\'E3o:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b Adjacencia} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b AdjacenciaParaFicheiro} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Aluguer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b AluguerLista} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Clientes} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ClientesLista} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Gestores} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b GestoresLista} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MeiosMobilidade} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAII \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MeiosMobilidadeLista} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Vertice} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b VerticeParaFicheiro} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos ficheiros\par \pard\plain 
{\tc \v \'CDndice dos ficheiros}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de ficheiros\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Lista de todos os ficheiros com uma breve descri\'E7\'E3o:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b EDA-Projeto/{\b Aluguer.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ficheiro header dos alugueres })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b EDA-Projeto/{\b Clientes.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ficheiro header dos clientes })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b EDA-Projeto/{\b FAluguer.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b EDA-Projeto/{\b FClientes.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'F5es clientes })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b EDA-Projeto/{\b FGestores.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desenvolvimento das fun\'E7\'F5es dos gestores })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b EDA-Projeto/{\b FMeiosMobilidade.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desenvolvimento das fun\'E7\'F5es dos meios de mobilidade })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b EDA-Projeto/{\b Gestores.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ficheiro header dos gestores })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b EDA-Projeto/{\b Grafos.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desenvolvimento do grafo })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b EDA-Projeto/{\b Grafos.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ficheiro header para a estrutura de dados grafos })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b EDA-Projeto/{\b main.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b EDA-Projeto/{\b MeiosMobilidade.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ficheiro header dos meios de mobilidade })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Documenta\'E7\'E3o da classe{\tc \v Documenta\'E7\'E3o da classe}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 estrutura Adjacencia\par \pard\plain 
{\tc\tcl2 \v Adjacencia}
{\xe \v Adjacencia}
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
\par
{
{\f2 #include <Grafos.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b cidade} [{\b M}]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dist}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Adj} * {\b next}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos dados membro\par
\pard\plain 
{\xe \v cidade\:Adjacencia}
{\xe \v Adjacencia\:cidade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char Adjacencia::cidade[{\b M}]}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dist\:Adjacencia}
{\xe \v Adjacencia\:dist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Adjacencia::dist}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v id\:Adjacencia}
{\xe \v Adjacencia\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Adjacencia::id}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v next\:Adjacencia}
{\xe \v Adjacencia\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b Adj}* Adjacencia::next}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta estrutura foi gerada a partir do seguinte ficheiro:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EDA-Projeto/{\b Grafos.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 estrutura AdjacenciaParaFicheiro\par \pard\plain 
{\tc\tcl2 \v AdjacenciaParaFicheiro}
{\xe \v AdjacenciaParaFicheiro}
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
\par
{
{\f2 #include <Grafos.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b codOrigem}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b codDestino}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dist}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos dados membro\par
\pard\plain 
{\xe \v codDestino\:AdjacenciaParaFicheiro}
{\xe \v AdjacenciaParaFicheiro\:codDestino}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int AdjacenciaParaFicheiro::codDestino}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v codOrigem\:AdjacenciaParaFicheiro}
{\xe \v AdjacenciaParaFicheiro\:codOrigem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int AdjacenciaParaFicheiro::codOrigem}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dist\:AdjacenciaParaFicheiro}
{\xe \v AdjacenciaParaFicheiro\:dist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int AdjacenciaParaFicheiro::dist}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta estrutura foi gerada a partir do seguinte ficheiro:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EDA-Projeto/{\b Grafos.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 estrutura Aluguer\par \pard\plain 
{\tc\tcl2 \v Aluguer}
{\xe \v Aluguer}
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
\par
{
{\f2 #include <Aluguer.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b nif} [{\b N}]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b idMeio}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b data} [{\b A}]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b idDestino}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b km}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b preco}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos dados membro\par
\pard\plain 
{\xe \v data\:Aluguer}
{\xe \v Aluguer\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char Aluguer::data[{\b A}]}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v id\:Aluguer}
{\xe \v Aluguer\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Aluguer::id}}
\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v idDestino\:Aluguer}
{\xe \v Aluguer\:idDestino}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Aluguer::idDestino}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v idMeio\:Aluguer}
{\xe \v Aluguer\:idMeio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Aluguer::idMeio}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v km\:Aluguer}
{\xe \v Aluguer\:km}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Aluguer::km}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v nif\:Aluguer}
{\xe \v Aluguer\:nif}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char Aluguer::nif[{\b N}]}}
\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v preco\:Aluguer}
{\xe \v Aluguer\:preco}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Aluguer::preco}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta estrutura foi gerada a partir do seguinte ficheiro:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EDA-Projeto/{\b Aluguer.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 estrutura AluguerLista\par \pard\plain 
{\tc\tcl2 \v AluguerLista}
{\xe \v AluguerLista}
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
\par
{
{\f2 #include <Aluguer.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Aluguer} {\b a}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b AluguerLista} * {\b next}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos dados membro\par
\pard\plain 
{\xe \v a\:AluguerLista}
{\xe \v AluguerLista\:a}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Aluguer} AluguerLista::a}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v next\:AluguerLista}
{\xe \v AluguerLista\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b AluguerLista}* AluguerLista::next}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta estrutura foi gerada a partir do seguinte ficheiro:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EDA-Projeto/{\b Aluguer.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 estrutura Clientes\par \pard\plain 
{\tc\tcl2 \v Clientes}
{\xe \v Clientes}
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
\par
{
{\f2 #include <Clientes.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b nome} [{\b N}]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b nif} [{\b A}]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b morada} [{\b N}]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b saldo}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos dados membro\par
\pard\plain 
{\xe \v morada\:Clientes}
{\xe \v Clientes\:morada}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char Clientes::morada[{\b N}]}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v nif\:Clientes}
{\xe \v Clientes\:nif}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char Clientes::nif[{\b A}]}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v nome\:Clientes}
{\xe \v Clientes\:nome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char Clientes::nome[{\b N}]}}
\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v saldo\:Clientes}
{\xe \v Clientes\:saldo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Clientes::saldo}}
\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta estrutura foi gerada a partir do seguinte ficheiro:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EDA-Projeto/{\b Clientes.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 estrutura ClientesLista\par \pard\plain 
{\tc\tcl2 \v ClientesLista}
{\xe \v ClientesLista}
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
\par
{
{\f2 #include <Clientes.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Clientes} {\b c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ClientesLista} * {\b next}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos dados membro\par
\pard\plain 
{\xe \v c\:ClientesLista}
{\xe \v ClientesLista\:c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Clientes} ClientesLista::c}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v next\:ClientesLista}
{\xe \v ClientesLista\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b ClientesLista}* ClientesLista::next}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta estrutura foi gerada a partir do seguinte ficheiro:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EDA-Projeto/{\b Clientes.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 estrutura Gestores\par \pard\plain 
{\tc\tcl2 \v Gestores}
{\xe \v Gestores}
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
\par
{
{\f2 #include <Gestores.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b nome} [20]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b email} [50]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b password} [15]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos dados membro\par
\pard\plain 
{\xe \v email\:Gestores}
{\xe \v Gestores\:email}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char Gestores::email[50]}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v id\:Gestores}
{\xe \v Gestores\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Gestores::id}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v nome\:Gestores}
{\xe \v Gestores\:nome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char Gestores::nome[20]}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v password\:Gestores}
{\xe \v Gestores\:password}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char Gestores::password[15]}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta estrutura foi gerada a partir do seguinte ficheiro:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EDA-Projeto/{\b Gestores.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 estrutura GestoresLista\par \pard\plain 
{\tc\tcl2 \v GestoresLista}
{\xe \v GestoresLista}
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
\par
{
{\f2 #include <Gestores.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gestores} {\b g}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b GestoresLista} * {\b next}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos dados membro\par
\pard\plain 
{\xe \v g\:GestoresLista}
{\xe \v GestoresLista\:g}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gestores} GestoresLista::g}}
\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v next\:GestoresLista}
{\xe \v GestoresLista\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b GestoresLista}* GestoresLista::next}}
\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta estrutura foi gerada a partir do seguinte ficheiro:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EDA-Projeto/{\b Gestores.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 estrutura MeiosMobilidade\par \pard\plain 
{\tc\tcl2 \v MeiosMobilidade}
{\xe \v MeiosMobilidade}
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
\par
{
{\f2 #include <MeiosMobilidade.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b TipoMeio} {\b tipo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b localizacao} [{\b L}]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b bateria}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b status}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b autonomia}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos dados membro\par
\pard\plain 
{\xe \v autonomia\:MeiosMobilidade}
{\xe \v MeiosMobilidade\:autonomia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MeiosMobilidade::autonomia}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bateria\:MeiosMobilidade}
{\xe \v MeiosMobilidade\:bateria}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MeiosMobilidade::bateria}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v id\:MeiosMobilidade}
{\xe \v MeiosMobilidade\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MeiosMobilidade::id}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v localizacao\:MeiosMobilidade}
{\xe \v MeiosMobilidade\:localizacao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char MeiosMobilidade::localizacao[{\b L}]}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v status\:MeiosMobilidade}
{\xe \v MeiosMobilidade\:status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MeiosMobilidade::status}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tipo\:MeiosMobilidade}
{\xe \v MeiosMobilidade\:tipo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b TipoMeio} MeiosMobilidade::tipo}}
\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta estrutura foi gerada a partir do seguinte ficheiro:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EDA-Projeto/{\b MeiosMobilidade.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 estrutura MeiosMobilidadeLista\par \pard\plain 
{\tc\tcl2 \v MeiosMobilidadeLista}
{\xe \v MeiosMobilidadeLista}
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
\par
{
{\f2 #include <MeiosMobilidade.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Meios} {\b m}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b MeiosMobilidadeLista} * {\b next}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos dados membro\par
\pard\plain 
{\xe \v m\:MeiosMobilidadeLista}
{\xe \v MeiosMobilidadeLista\:m}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Meios} MeiosMobilidadeLista::m}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v next\:MeiosMobilidadeLista}
{\xe \v MeiosMobilidadeLista\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b MeiosMobilidadeLista}* MeiosMobilidadeLista::next}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta estrutura foi gerada a partir do seguinte ficheiro:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EDA-Projeto/{\b MeiosMobilidade.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 estrutura Vertice\par \pard\plain 
{\tc\tcl2 \v Vertice}
{\xe \v Vertice}
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
\par
{
{\f2 #include <Grafos.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b cidade} [{\b M}]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visitado}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Vertice} * {\b next}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Adj} * {\b adjacentes}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos dados membro\par
\pard\plain 
{\xe \v adjacentes\:Vertice}
{\xe \v Vertice\:adjacentes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b Adj}* Vertice::adjacentes}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cidade\:Vertice}
{\xe \v Vertice\:cidade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char Vertice::cidade[{\b M}]}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v id\:Vertice}
{\xe \v Vertice\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Vertice::id}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v next\:Vertice}
{\xe \v Vertice\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b Vertice}* Vertice::next}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v visitado\:Vertice}
{\xe \v Vertice\:visitado}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Vertice::visitado}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta estrutura foi gerada a partir do seguinte ficheiro:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EDA-Projeto/{\b Grafos.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia \'E0 estrutura VerticeParaFicheiro\par \pard\plain 
{\tc\tcl2 \v VerticeParaFicheiro}
{\xe \v VerticeParaFicheiro}
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
\par
{
{\f2 #include <Grafos.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b cidade} [{\b M}]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos dados membro\par
\pard\plain 
{\xe \v cidade\:VerticeParaFicheiro}
{\xe \v VerticeParaFicheiro\:cidade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char VerticeParaFicheiro::cidade[{\b M}]}}
\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v id\:VerticeParaFicheiro}
{\xe \v VerticeParaFicheiro\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int VerticeParaFicheiro::id}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta estrutura foi gerada a partir do seguinte ficheiro:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EDA-Projeto/{\b Grafos.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Documenta\'E7\'E3o do ficheiro{\tc \v Documenta\'E7\'E3o do ficheiro}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro EDA-Projeto/Aluguer.h\par \pard\plain 
{\tc\tcl2 \v EDA-Projeto/Aluguer.h}
{\xe \v EDA-Projeto/Aluguer.h}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ficheiro header dos alugueres. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdbool.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include "Clientes.h"}\par
{\f2 #include "MeiosMobilidade.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Aluguer}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b AluguerLista}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es de tipos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Aluguer} {\b Aluguer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b AluguerLista} {\b AluguerLista}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lerAluguerestxt} ({\b AluguerLista} **listaAlugueres, char *filename, {\b Vertice} *g, {\b MeiosLista} *mlista)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AluguerLista} * {\b adicionarAluguerLista} ({\b AluguerLista} *lista, {\b Aluguer} a)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b existeAluguer} ({\b AluguerLista} *lista, {\b Aluguer} a)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b CalcularKm} ({\b Vertice} *g, {\b MeiosLista} *mlista, int idMeio, {\b Aluguer} a)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b CalcularPreco} ({\b MeiosLista} *mlista, int idMeio, {\b Aluguer} a)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b guardarAlugueresBinario} ({\b AluguerLista} *listaAlugueres, char *nomeArquivo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b carregarAlugueresBinario} ({\b AluguerLista} **listaAlugueres, char *nomeArquivo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b destruirAluguerLista} ({\b AluguerLista} *listaAlugueres)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b imprimirAluguerLista} ({\b AluguerLista} *lista)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ficheiro header dos alugueres. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Utilizador Alexandre Marques \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
April 2023 \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos tipos\par
\pard\plain 
{\xe \v Aluguer\:Aluguer.h}
{\xe \v Aluguer.h\:Aluguer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Aluguer} {\b Aluguer}}}
\par
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AluguerLista\:Aluguer.h}
{\xe \v Aluguer.h\:AluguerLista}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b AluguerLista} {\b AluguerLista}}}
\par
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v adicionarAluguerLista\:Aluguer.h}
{\xe \v Aluguer.h\:adicionarAluguerLista}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AluguerLista} * adicionarAluguerLista ({\b AluguerLista} *  {\i lista}, {\b Aluguer}  {\i a})}}
\par
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o adiciona um aluguer \'E0 lista encadeada 1\'BA Aloca mem\'F3ria para o novo aluguer 2\'BA Verifica se a lista est\'E1 vazia ou se o novo aluguer tem o menor ID 3\'BA Encontra a posi\'E7\'E3o correta para inserir o novo aluguer na lista ordenada 4\'BA Retorna a lista com o novo aluguer\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lista} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i a} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 113                                                                     \{\par
114     AluguerLista* novo = (AluguerLista*)malloc({\cf17 sizeof}(AluguerLista));\par
115     {\cf19 if} (novo == NULL) {\cf19 return} NULL;\par
116     novo->a = a;\par
117     novo->next = NULL;\par
118 \par
119     {\cf19 if} (existeAluguer(lista, a)) {\cf19 return} lista;\par
120 \par
121 \par
122     {\cf20 // Verifica se a lista est\'E1 vazia ou se o novo aluguer tem o menor ID}\par
123     {\cf19 if} (lista == NULL || a.id < lista->a.id) \{\par
124         novo->next = lista;\par
125         {\cf19 return} novo;\par
126     \}\par
127 \par
128     {\cf20 // Encontra a posi\'E7\'E3o correta para inserir o novo aluguer na lista ordenada}\par
129     AluguerLista* anterior = lista;\par
130     AluguerLista* atual = lista->next;\par
131     {\cf19 while} (atual != NULL && atual->a.id < a.id) \{\par
132         anterior = atual;\par
133         atual = atual->next;\par
134     \}\par
135 \par
136     novo->next = atual;\par
137     anterior->next = novo;\par
138 \par
139     {\cf19 return} lista;\par
140 \}\par
}
}
{\xe \v CalcularKm\:Aluguer.h}
{\xe \v Aluguer.h\:CalcularKm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CalcularKm ({\b Vertice} *  {\i g}, {\b MeiosLista} *  {\i mlista}, int  {\i idMeio}, {\b Aluguer}  {\i a})}}
\par
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o serve para calcular os km de um aluguer 1\'BA Procura o meio de transporte pelo ID 2\'BA Converte o nome da localiza\'E7\'E3o para ID 3\'BA Calcula a dist\'E2ncia entre a localiza\'E7\'E3o do meio de transporte e o destino do aluguer 4\'BA Retorna a dist\'E2ncia\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i g} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mlista} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i idMeio} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i a} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 56                                                                       \{\par
57 \par
58     Meios* m = procurarMeioPorId(mlista, idMeio);\par
59 \par
60     {\cf18 int} i = ConverterNomeParaID(g, m->localizacao);\par
61 \par
62 \par
63     {\cf19 return} CalculaDistancia(g, i, a.idDestino);\par
64 \par
65 \}\par
}
}
{\xe \v CalcularPreco\:Aluguer.h}
{\xe \v Aluguer.h\:CalcularPreco}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float CalcularPreco ({\b MeiosLista} *  {\i mlista}, int  {\i idMeio}, {\b Aluguer}  {\i a})}}
\par
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o calcula o pre\'E7o de um aluguer 1\'BA Procura o meio de transporte pelo ID 2\'BA Verifica o tipo de meio de transporte 3\'BA Calcula o pre\'E7o por km\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mlista} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i idMeio} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i a} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 79                                                                \{\par
80     Meios* m = procurarMeioPorId(mlista, idMeio);\par
81 \par
82     {\cf19 if} (a.km == 0) \{\par
83         {\cf19 return} 1;\par
84     \}\par
85 \par
86     {\cf20 // Verifica o tipo de meio de transporte}\par
87     {\cf19 switch} (m->tipo) \{\par
88     {\cf19 case} Bicicleta:\par
89         {\cf19 return} a.km * 0.1; {\cf20 // Pre\'E7o por km para bicicleta: 0.1}\par
90     {\cf19 case} Carro:\par
91         {\cf19 return} a.km * 0.5; {\cf20 // Pre\'E7o por km para carro: 0.5}\par
92     {\cf19 case} Trotinete:\par
93         {\cf19 return} a.km * 0.2; {\cf20 // Pre\'E7o por km para trotinete: 0.2}\par
94     {\cf19 case} Autocarro:\par
95         {\cf19 return} a.km * 0.3; {\cf20 // Pre\'E7o por km para autocarro: 0.3}\par
96     {\cf19 default}:\par
97         {\cf19 return} a.km * 0.4; {\cf20 // Pre\'E7o por km para outros meios de transporte: 0.4}\par
98     \}\par
99 \}\par
}
}
{\xe \v carregarAlugueresBinario\:Aluguer.h}
{\xe \v Aluguer.h\:carregarAlugueresBinario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int carregarAlugueresBinario ({\b AluguerLista} **  {\i listaAlugueres}, char *  {\i nomeArquivo})}}
\par
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o carrega os alugueres de um ficheiro bin\'E1rio para uma lista encadeada 1\'BA Abre o ficheiro bin\'E1rio 2\'BA L\'EA os alugueres do ficheiro e adiciona-os \'E0 lista encadeada 3\'BA Retorna -1 se o ficheiro foi carregado com sucesso e -1 se n\'E3o foi carregado com sucesso 4\'BA Fecha o ficheiro\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaAlugueres} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nomeArquivo} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 203                                                                                \{\par
204     FILE* arquivo = fopen(nomeArquivo, {\cf22 "rb"});\par
205     {\cf19 if} (arquivo == NULL) \{\par
206         {\cf19 return} -1;\par
207     \}\par
208     Aluguer a;\par
209     {\cf19 while} (fread(&a, {\cf17 sizeof}(Aluguer), 1, arquivo) == 1) \{\par
210         *listaAlugueres = adicionarAluguerLista(*listaAlugueres, a);\par
211         \}\par
212         fclose(arquivo);\par
213         {\cf19 return} 1;\par
214 \}\par
}
}
{\xe \v destruirAluguerLista\:Aluguer.h}
{\xe \v Aluguer.h\:destruirAluguerLista}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void destruirAluguerLista ({\b AluguerLista} *  {\i listaAlugueres})}}
\par
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o serve para destruir uma lista encadeada 1\'BA Percorre a lista encadeada e liberta a mem\'F3ria alocada para cada aluguer 2\'BA Libertar a mem\'F3ria alocada para a lista\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaAlugueres} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 224                                                         \{\par
225     AluguerLista* atual = listaAlugueres;\par
226     {\cf19 while} (atual != NULL) \{\par
227         AluguerLista* proximo = atual->next;\par
228         free(atual);\par
229         atual = proximo;\par
230     \}\par
231 \}\par
}
}
{\xe \v existeAluguer\:Aluguer.h}
{\xe \v Aluguer.h\:existeAluguer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool existeAluguer ({\b AluguerLista} *  {\i lista}, {\b Aluguer}  {\i a})}}
\par
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o verifica se um aluguer existe na lista encadeada 1\'BA Percorre a lista encadeada e verifica se o ID do aluguer \'E9 igual ao ID do aluguer da lista 2\'BA Retorna true se o aluguer existe na lista e false se n\'E3o existe\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lista} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i a} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 152                                                    \{\par
153     AluguerLista* atual = lista;\par
154     {\cf19 while} (atual != NULL) \{\par
155         {\cf19 if} (atual->a.id == a.id) \{\par
156             {\cf19 return} {\cf17 true};\par
157         \}\par
158         atual = atual->next;\par
159     \}\par
160     {\cf19 return} {\cf17 false};\par
161 \}\par
}
}
{\xe \v guardarAlugueresBinario\:Aluguer.h}
{\xe \v Aluguer.h\:guardarAlugueresBinario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int guardarAlugueresBinario ({\b AluguerLista} *  {\i listaAlugueres}, char *  {\i nomeArquivo})}}
\par
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o guarda os alugueres de uma lista encadeada num ficheiro bin\'E1rio 1\'BA Abre o ficheiro bin\'E1rio 2\'BA Percorre a lista encadeada e guarda os alugueres no ficheiro 3\'BA Fecha o ficheiro\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaAlugueres} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nomeArquivo} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 174                                                                              \{\par
175     FILE* arquivo = fopen(nomeArquivo, {\cf22 "wb"});\par
176     {\cf19 if} (arquivo == NULL) \{\par
177         {\cf19 return} -1;\par
178     \}\par
179 \par
180     AluguerLista* atual = listaAlugueres;\par
181     {\cf19 while} (atual != NULL) \{\par
182         {\cf19 if} (fwrite(&(atual->a), {\cf17 sizeof}(Aluguer), 1, arquivo) != 1) \{\par
183             {\cf19 break};\par
184         \}\par
185         atual = atual->next;\par
186     \}\par
187 \par
188     fclose(arquivo);\par
189 \}\par
}
}
{\xe \v imprimirAluguerLista\:Aluguer.h}
{\xe \v Aluguer.h\:imprimirAluguerLista}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void imprimirAluguerLista ({\b AluguerLista} *  {\i lista})}}
\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 236                                                \{\par
237     {\cf19 if} (lista == NULL) \{\par
238         printf({\cf22 "A lista de aluguers esta vazia.\\n"});\par
239         {\cf19 return};\par
240     \}\par
241 \par
242     printf({\cf22 "Lista de Aluguers:\\n"});\par
243     printf({\cf22 "ID |    NIF     | ID Meio | Data       | ID Destino | KM | Preco\\n"});\par
244     printf({\cf22 "-----------------------------------------------------\\n"});\par
245 \par
246     AluguerLista* atual = lista;\par
247     {\cf19 while} (atual != NULL) \{\par
248 \par
249         printf({\cf22 "%-2d | %-10s | %-7d | %-10s | %-11d | %-2d | %.2f\\n"},\par
250             atual->a.id, atual->a.nif, atual->a.idMeio, atual->a.data,\par
251             atual->a.idDestino, atual->a.km, atual->a.preco);\par
252         atual = atual->next;\par
253     \}\par
254 \}\par
}
}
{\xe \v lerAluguerestxt\:Aluguer.h}
{\xe \v Aluguer.h\:lerAluguerestxt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int lerAluguerestxt ({\b AluguerLista} **  {\i listaAlugueres}, char *  {\i filename}, {\b Vertice} *  {\i g}, {\b MeiosLista} *  {\i mlista})}}
\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o l\'EA os alugueres de um ficheiro txt e insere-os numa lista encadeada 1\'BA L\'EA os dados de cada aluguer e envia para a fun\'E7\'E3o adicionarAluguerLista que insere na lista encadeada 2\'BA Retorna 1 se o ficheiro foi lido com sucesso e 0 se n\'E3o foi lido com sucesso\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaAlugueres} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i filename} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 22                                                                                                    \{\par
23     FILE* ficheiro = fopen(filename, {\cf22 "r"});\par
24     {\cf19 if} (ficheiro == NULL) \{\par
25         {\cf19 return} 0;\par
26     \}\par
27 \par
28     {\cf20 // L\'EA os dados de cada aluguer e insere na lista encadeada}\par
29     {\cf18 char} linha[100];\par
30     {\cf19 while} (fgets(linha, 100, ficheiro) != NULL) \{\par
31         Aluguer novoAluguer;\par
32         sscanf(linha, {\cf22 "%d;%[^;];%d;%[^;];%d"}, &novoAluguer.id, novoAluguer.nif, &novoAluguer.idMeio, novoAluguer.data, &novoAluguer.idDestino);\par
33         novoAluguer.km = CalcularKm(g, mlista, novoAluguer.idMeio, novoAluguer);\par
34         novoAluguer.preco = CalcularPreco(mlista, novoAluguer.idMeio, novoAluguer);\par
35         *listaAlugueres = adicionarAluguerLista(*listaAlugueres, novoAluguer);\par
36     \}\par
37 \par
38     fclose(ficheiro);\par
39     {\cf19 return} 1;\par
40 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Aluguer.h\par \pard\plain 
{\tc\tcl2 \v EDA-Projeto/Aluguer.h}
{\xe \v EDA-Projeto/Aluguer.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Ir para a documenta\'E7\'E3o deste ficheiro.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*****************************************************************/}\par
9 {\cf21 #pragma once}\par
10 {\cf21 #pragma warning (disable: 4996)}\par
11 {\cf21 #include <stdio.h>}\par
12 {\cf21 #include <stdbool.h>}\par
13 {\cf21 #include <stdlib.h>}\par
14 {\cf21 #include "Clientes.h"}\par
15 {\cf21 #include "MeiosMobilidade.h"}\par
16 {\cf21 #include "Grafos.h"}\par
17 {\cf21 #define _CTR_SECURE_NO_WARNINGS}\par
18 \par
19 {\cf21 #define A 11}\par
20 {\cf21 #define N 10}\par
21 \par
22 \par
23 {\cf21 #ifndef Aluguerh}\par
24 {\cf21 #define Aluguerh}\par
25 \par
26 {\cf17 typedef} {\cf17 struct }Aluguer \{\par
27     {\cf18 int} id;\par
28     {\cf18 char} nif[N];\par
29     {\cf18 int} idMeio;\par
30     {\cf18 char} data[A];\par
31     {\cf18 int} idDestino;\par
32     {\cf18 int} km;\par
33     {\cf18 float} preco;\par
34 \}Aluguer;\par
35 \par
36 {\cf17 typedef} {\cf17 struct }AluguerLista \{\par
37     Aluguer a;\par
38     {\cf17 struct }AluguerLista* next;\par
39 \}AluguerLista;\par
40 \par
51 {\cf18 int} lerAluguerestxt(AluguerLista** listaAlugueres, {\cf18 char}* filename, Vertice* g, MeiosLista* mlista);\par
52 \par
65 AluguerLista* adicionarAluguerLista(AluguerLista* lista, Aluguer a);\par
66 \par
76 {\cf18 bool} existeAluguer(AluguerLista* lista, Aluguer a);\par
77 \par
92 {\cf18 int} CalcularKm(Vertice* g, MeiosLista* mlista, {\cf18 int} idMeio, Aluguer a);\par
93 \par
106 {\cf18 float} CalcularPreco(MeiosLista* mlista, {\cf18 int} idMeio, Aluguer a);\par
107 \par
108 \par
120 {\cf18 int} guardarAlugueresBinario(AluguerLista* listaAlugueres, {\cf18 char}* nomeArquivo);\par
121 \par
134 {\cf18 int} carregarAlugueresBinario(AluguerLista** listaAlugueres, {\cf18 char}* nomeArquivo);\par
135 \par
144 {\cf18 void} destruirAluguerLista(AluguerLista* listaAlugueres);\par
145 \par
146 {\cf21 #pragma region Ecra}\par
147 \par
148 {\cf18 void} imprimirAluguerLista(AluguerLista* lista);\par
149 \par
150 {\cf21 #pragma endregion}\par
151 \par
152 \par
153 {\cf21 #endif }{\cf20 // !Aluguerh}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro EDA-Projeto/Clientes.h\par \pard\plain 
{\tc\tcl2 \v EDA-Projeto/Clientes.h}
{\xe \v EDA-Projeto/Clientes.h}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ficheiro header dos clientes. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdbool.h>}\par
{\f2 #include <stdlib.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Clientes}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ClientesLista}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b _CTR_SECURE_NO_WARNINGS}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Clientesh}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b N}\~ 35\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b A}\~ 10\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es de tipos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Clientes} {\b Clientes}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b ClientesLista} {\b ClientesLista}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lerClientestxt} ({\b ClientesLista} **listaClientes)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para ler os dados dos clientes do ficheiro txt 1\'BA L\'EA os dados de cada cliente e envia para a fun\'E7\'E3o adicionarClietneLista que insere na lista encadeada 2\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarClientesbin. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ClientesLista} * {\b adicionarClienteLista} ({\b ClientesLista} *lista, {\b Clientes} c)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insere {\b Clientes} no incio de uma lista encadeada 1\'BA Cria um novo n\'F3 com os dados do cliente 2\'BA Insere o novo n\'F3 no inicio da lista 3\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarClientesbin. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b guardarClientesbin} ({\b ClientesLista} *lista)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o guarda a lista de clientes no ficheiro bin\'E1rio 1\'BA Abre o ficheiro bin\'E1rio para escrita 2\'BA Percorre a lista encadeada e guarda os dados de cada cliente no ficheiro 3\'BA Fecha o ficheiro. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removerCliente} ({\b ClientesLista} **listaClientes, char nif[])\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o remove um cliente da lista de clientes 1\'BA Procura pelo cliente com o NIF correspondente na lista encadeada 2\'BA Remove o cliente da lista encadeada 3\'BA Atualiza o arquivo bin\'E1rio com a lista atualizada chamando a fun\'E7\'E3o guardarClientesbin. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b adicionarNovoCliente} ({\b ClientesLista} **listaClientes)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o adiciona um novo cliente \'E0 lista de clientes 1\'BA Cria um novo cliente com os dados inseridos pelo usu\'E1rio 2\'BA Adiciona o novo cliente \'E0 lista chamando a fun\'E7\'E3o adicionarClienteLista 3\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarClientesbin. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ClientesLista} * {\b lerClientesbin} ({\b ClientesLista} **listaClientes, char *filename)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o l\'EA os dados dos clientes do ficheiro bin\'E1rio 1\'BA Abre o ficheiro bin\'E1rio para leitura 2\'BA L\'EA os dados de cada cliente e insere na lista encadeada chamando a fun\'E7\'E3o adicionarClienteLista 3\'BA Fecha o ficheiro. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ModificarCliente} ({\b ClientesLista} *listaClientes, char *nif, int campo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DestruirListaC} ({\b ClientesLista} *lista)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clienteRemovidoEcra} ({\b ClientesLista} **listaClientes)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Clientes} * {\b obterDadosClienteEcra} ({\b Clientes} *c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ModificarDadoCliente} ({\b ClientesLista} *listaClientes, char *nif, int campo)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ficheiro header dos clientes. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
March 2023 \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das macros\par
\pard\plain 
{\xe \v _CTR_SECURE_NO_WARNINGS\:Clientes.h}
{\xe \v Clientes.h\:_CTR_SECURE_NO_WARNINGS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define _CTR_SECURE_NO_WARNINGS}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v A\:Clientes.h}
{\xe \v Clientes.h\:A}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define A\~ 10}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Clientesh\:Clientes.h}
{\xe \v Clientes.h\:Clientesh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Clientesh}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v N\:Clientes.h}
{\xe \v Clientes.h\:N}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define N\~ 35}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos tipos\par
\pard\plain 
{\xe \v Clientes\:Clientes.h}
{\xe \v Clientes.h\:Clientes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Clientes} {\b Clientes}}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ClientesLista\:Clientes.h}
{\xe \v Clientes.h\:ClientesLista}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b ClientesLista} {\b ClientesLista}}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v adicionarClienteLista\:Clientes.h}
{\xe \v Clientes.h\:adicionarClienteLista}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ClientesLista} * adicionarClienteLista ({\b ClientesLista} *  {\i lista}, {\b Clientes}  {\i c})}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insere {\b Clientes} no incio de uma lista encadeada 1\'BA Cria um novo n\'F3 com os dados do cliente 2\'BA Insere o novo n\'F3 no inicio da lista 3\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarClientesbin. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i recebe} \cell }{uma lista e um cliente para o inserir na lista \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques\par
}}Insere {\b Clientes} no incio de uma lista encadeada 1\'BA Cria um novo n\'F3 com os dados do cliente 2\'BA Insere o novo n\'F3 no inicio da lista 3\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarClientesbin.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i recebe} \cell }{uma lista e um cliente para o inserir na lista \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 44                                                                        \{\par
45     ClientesLista* novo = (ClientesLista*)malloc({\cf17 sizeof}(ClientesLista));\par
46     {\cf19 if} (novo == NULL) {\cf19 return} NULL;\par
47     novo->c = c;\par
48     novo->next = NULL;\par
49 \par
50     {\cf20 // Verifica se a lista est\'E1 vazia ou se o novo cliente tem o menor NIF}\par
51     {\cf19 if} (lista == NULL || strcmp(c.nif, lista->c.nif) < 0) \{\par
52         novo->next = lista;\par
53         {\cf19 return} novo;\par
54     \}\par
55 \par
56     {\cf20 // Encontra a posi\'E7\'E3o correta para inserir o novo cliente na lista ordenada}\par
57     ClientesLista* anterior = lista;\par
58     ClientesLista* atual = lista->next;\par
59     {\cf19 while} (atual != NULL && strcmp(c.nif, atual->c.nif) >= 0) \{\par
60         anterior = atual;\par
61         atual = atual->next;\par
62     \}\par
63 \par
64     novo->next = atual;\par
65     anterior->next = novo;\par
66 \par
67     {\cf19 return} lista;\par
68 \}\par
}
}
{\xe \v adicionarNovoCliente\:Clientes.h}
{\xe \v Clientes.h\:adicionarNovoCliente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool adicionarNovoCliente ({\b ClientesLista} **  {\i listaClientes})}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o adiciona um novo cliente \'E0 lista de clientes 1\'BA Cria um novo cliente com os dados inseridos pelo usu\'E1rio 2\'BA Adiciona o novo cliente \'E0 lista chamando a fun\'E7\'E3o adicionarClienteLista 3\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarClientesbin. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaClientes} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques\par
}}Esta fun\'E7\'E3o adiciona um novo cliente \'E0 lista de clientes 1\'BA Cria um novo cliente com os dados inseridos pelo usu\'E1rio 2\'BA Adiciona o novo cliente \'E0 lista chamando a fun\'E7\'E3o adicionarClienteLista 3\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarClientesbin.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaClientes} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 104                                                          \{\par
105     {\cf20 // Cria um novo cliente com os dados inseridos pelo usu\'E1rio}\par
106     Clientes novoCliente;\par
107     obterDadosClienteEcra(&novoCliente);\par
108 \par
109     {\cf20 // Adiciona o novo cliente \'E0 lista}\par
110     *listaClientes = adicionarClienteLista(*listaClientes, novoCliente);\par
111 \par
112 \par
113     {\cf19 return} {\cf17 true};\par
114 \}\par
}
}
{\xe \v clienteRemovidoEcra\:Clientes.h}
{\xe \v Clientes.h\:clienteRemovidoEcra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void clienteRemovidoEcra ({\b ClientesLista} **  {\i listaClientes})}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 264                                                         \{\par
265     {\cf18 char} nif[10];\par
266     printf({\cf22 "NIF do cliente a remover: "});\par
267     scanf({\cf22 "%s"}, nif);\par
268     removerCliente(&listaClientes, nif);\par
269 \par
270 \}\par
}
}
{\xe \v DestruirListaC\:Clientes.h}
{\xe \v Clientes.h\:DestruirListaC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DestruirListaC ({\b ClientesLista} *  {\i lista})}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o destroi a lista de clientes 1\'BA Percorre a lista encadeada e destroi cada n\'F3 2\'BA Liberta a mem\'F3ria alocada para a lista\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lista} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 228                                           \{\par
229     ClientesLista* atual = lista;\par
230     {\cf19 while} (atual != NULL) \{\par
231         ClientesLista* proximo = atual->next;\par
232         free(atual);\par
233         atual = proximo;\par
234     \}\par
235 \}\par
}
}
{\xe \v guardarClientesbin\:Clientes.h}
{\xe \v Clientes.h\:guardarClientesbin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool guardarClientesbin ({\b ClientesLista} *  {\i lista})}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o guarda a lista de clientes no ficheiro bin\'E1rio 1\'BA Abre o ficheiro bin\'E1rio para escrita 2\'BA Percorre a lista encadeada e guarda os dados de cada cliente no ficheiro 3\'BA Fecha o ficheiro. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lista} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 79                                               \{\par
80     FILE* ficheiro = fopen({\cf22 "Clientes.bin"}, {\cf22 "wb"});\par
81     {\cf19 if} (ficheiro == NULL) \{\par
82         {\cf19 return} {\cf17 false};\par
83     \}\par
84 \par
85     {\cf19 while} (lista != NULL) \{\par
86         fwrite(&lista->c, {\cf17 sizeof}(Clientes), 1, ficheiro);\par
87         lista = lista->next;\par
88     \}\par
89 \par
90     fclose(ficheiro);\par
91     {\cf19 return} {\cf17 true};\par
92 \}\par
}
}
{\xe \v lerClientesbin\:Clientes.h}
{\xe \v Clientes.h\:lerClientesbin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ClientesLista} * lerClientesbin ({\b ClientesLista} **  {\i listaClientes}, char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o l\'EA os dados dos clientes do ficheiro bin\'E1rio 1\'BA Abre o ficheiro bin\'E1rio para leitura 2\'BA L\'EA os dados de cada cliente e insere na lista encadeada chamando a fun\'E7\'E3o adicionarClienteLista 3\'BA Fecha o ficheiro. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaClientes} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaClientes} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 126                                                                              \{\par
127     FILE* ficheiro = fopen(fileName, {\cf22 "rb"});\par
128     {\cf19 if} (ficheiro == NULL) \{\par
129         {\cf19 return} 0;\par
130     \}\par
131     {\cf20 // L\'EA os dados de cada cliente e insere na lista encadeada}\par
132     Clientes novoCliente;\par
133     {\cf19 while} (fread(&novoCliente, {\cf17 sizeof}(Clientes), 1, ficheiro) != 0) \{\par
134         *listaClientes = adicionarClienteLista(*listaClientes, novoCliente);\par
135         \}\par
136             fclose(ficheiro);\par
137             {\cf19 return} listaClientes;\par
138 \}\par
}
}
{\xe \v lerClientestxt\:Clientes.h}
{\xe \v Clientes.h\:lerClientestxt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int lerClientestxt ({\b ClientesLista} **  {\i listaClientes})}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para ler os dados dos clientes do ficheiro txt 1\'BA L\'EA os dados de cada cliente e envia para a fun\'E7\'E3o adicionarClietneLista que insere na lista encadeada 2\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarClientesbin. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaClientes} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques\par
}}Fun\'E7\'E3o para ler os dados dos clientes do ficheiro txt 1\'BA L\'EA os dados de cada cliente e envia para a fun\'E7\'E3o adicionarClietneLista que insere na lista encadeada 2\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarClientesbin.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaClientes} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 18                                                   \{\par
19     FILE* ficheiro = fopen({\cf22 "Clientes.txt"}, {\cf22 "r"});\par
20     {\cf19 if} (ficheiro == NULL) \{\par
21         {\cf19 return} 0;\par
22     \}\par
23 \par
24     {\cf20 // L\'EA os dados de cada cliente e insere na lista encadeada}\par
25     {\cf18 char} linha[100];\par
26     {\cf19 while} (fgets(linha, 100, ficheiro) != NULL) \{\par
27         Clientes novoCliente;\par
28         sscanf(linha, {\cf22 "%[^;];%[^;];%[^;];%f"}, novoCliente.nome, novoCliente.nif, novoCliente.morada, &novoCliente.saldo);\par
29         *listaClientes = adicionarClienteLista(*listaClientes, novoCliente);\par
30     \}\par
31 \par
32     fclose(ficheiro);\par
33     {\cf19 return} 1;\par
34 \}\par
}
}
{\xe \v ModificarCliente\:Clientes.h}
{\xe \v Clientes.h\:ModificarCliente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ModificarCliente ({\b ClientesLista} *  {\i listaClientes}, char *  {\i nif}, int  {\i campo})}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o modifica um dado de um cliente 1\'BA Procura pelo cliente com o NIF correspondente na lista encadeada 2\'BA Modifica o dado do cliente\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaClientes} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nif} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i campo} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 213                                                                           \{\par
214     {\cf18 bool} sucesso = {\cf17 false};\par
215 \par
216     sucesso = ModificarDadoCliente(listaClientes, nif, campo);\par
217 \par
218     {\cf19 return} sucesso;\par
219 \}\par
}
}
{\xe \v ModificarDadoCliente\:Clientes.h}
{\xe \v Clientes.h\:ModificarDadoCliente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ModificarDadoCliente ({\b ClientesLista} *  {\i listaClientes}, char *  {\i nif}, int  {\i campo})}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 272                                                                               \{\par
273     ClientesLista* cliente = procurarClientePorNIF(listaClientes, nif);\par
274 \par
275     {\cf19 if} (cliente == NULL) \{\par
276         {\cf19 return} {\cf17 false};\par
277     \}\par
278 \par
279     {\cf19 switch} (campo) \{\par
280     {\cf19 case} 1:\par
281         printf({\cf22 "Novo Nome: "});\par
282         scanf({\cf22 "%s"}, cliente->c.nome);\par
283         {\cf19 break};\par
284     {\cf19 case} 2:\par
285         printf({\cf22 "Nova Morada: "});\par
286         scanf({\cf22 "%s"}, cliente->c.morada);\par
287         {\cf19 break};\par
288     {\cf19 case} 3:\par
289         printf({\cf22 "Novo Saldo: "});\par
290         {\cf18 float} novoSaldo;\par
291         scanf({\cf22 "%f"}, &novoSaldo);\par
292         cliente->c.saldo = novoSaldo;\par
293         {\cf19 break};\par
294     {\cf19 default}:\par
295         printf({\cf22 "Campo inv\'E1lido.\\n"});\par
296         {\cf19 break};\par
297     \}\par
298     {\cf19 return} {\cf17 true};\par
299 \}\par
}
}
{\xe \v obterDadosClienteEcra\:Clientes.h}
{\xe \v Clientes.h\:obterDadosClienteEcra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Clientes} * obterDadosClienteEcra ({\b Clientes} *  {\i c})}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 240                                              \{\par
241     printf({\cf22 "Nome: "});\par
242     scanf({\cf22 "%s"}, c->nome);\par
243     printf({\cf22 "NIF: "});\par
244     scanf({\cf22 "%s"}, c->nif);\par
245     printf({\cf22 "Morada: "});\par
246     scanf({\cf22 "%s"}, c->morada);\par
247     printf({\cf22 "Saldo: "});\par
248     scanf({\cf22 "%f"}, &c->saldo);\par
249     {\cf19 return} c;\par
250 \}\par
}
}
{\xe \v removerCliente\:Clientes.h}
{\xe \v Clientes.h\:removerCliente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool removerCliente ({\b ClientesLista} **  {\i listaClientes}, char  {\i nif}[])}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o remove um cliente da lista de clientes 1\'BA Procura pelo cliente com o NIF correspondente na lista encadeada 2\'BA Remove o cliente da lista encadeada 3\'BA Atualiza o arquivo bin\'E1rio com a lista atualizada chamando a fun\'E7\'E3o guardarClientesbin. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaClientes} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nif} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaClientes} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nif} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 151                                                                \{\par
152     ClientesLista* clienteAtual = *listaClientes;\par
153     ClientesLista* clienteAnterior = NULL;\par
154     {\cf18 bool} encontrado = {\cf17 false};\par
155     {\cf20 // Procura pelo cliente com o NIF correspondente na lista encadeada}\par
156     {\cf19 while} (clienteAtual != NULL) \{\par
157         {\cf19 if} (strcmp(clienteAtual->c.nif, nif) == 0) \{\par
158             encontrado = {\cf17 true};\par
159             {\cf19 break};\par
160         \}\par
161         clienteAnterior = clienteAtual;\par
162         clienteAtual = clienteAtual->next;\par
163     \}\par
164     {\cf19 if} (!encontrado) \{\par
165 \par
166         {\cf19 return} {\cf17 false};\par
167     \}\par
168     {\cf20 // Remove o cliente da lista encadeada}\par
169     {\cf19 if} (clienteAnterior == NULL) \{\par
170         *listaClientes = clienteAtual->next;\par
171     \}\par
172     {\cf19 else} \{\par
173         clienteAnterior->next = clienteAtual->next;\par
174     \}\par
175     {\cf20 // Atualiza o arquivo bin\'E1rio com a lista atualizada}\par
176     free(clienteAtual);\par
177 \par
178     {\cf19 return} {\cf17 true};\par
179 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Clientes.h\par \pard\plain 
{\tc\tcl2 \v EDA-Projeto/Clientes.h}
{\xe \v EDA-Projeto/Clientes.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Ir para a documenta\'E7\'E3o deste ficheiro.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*****************************************************************/}\par
9 {\cf21 #pragma once}\par
10 {\cf21 #pragma warning (disable: 4996)}\par
11 {\cf21 #include <stdio.h>}\par
12 {\cf21 #include <stdbool.h>}\par
13 {\cf21 #include <stdlib.h>}\par
14 {\cf21 #define _CTR_SECURE_NO_WARNINGS}\par
15 \par
16 {\cf21 #ifndef Clientesh}\par
17 {\cf21 #define Clientesh}\par
18 {\cf21 #define N 35}\par
19 {\cf21 #define A 10}\par
20 \par
21 {\cf17 typedef} {\cf17 struct }Clientes \{\par
22     {\cf18 char} nome[N];\par
23     {\cf18 char} nif[A];\par
24     {\cf18 char} morada[N];\par
25     {\cf18 float} saldo;\par
26 \}Clientes;\par
27 \par
28 \par
29 {\cf17 typedef} {\cf17 struct }ClientesLista \{\par
30     Clientes c;\par
31     {\cf17 struct }ClientesLista* next;\par
32 \}ClientesLista;\par
33 \par
42 {\cf18 int} lerClientestxt(ClientesLista** listaClientes);\par
43 \par
53 ClientesLista* adicionarClienteLista(ClientesLista* lista, Clientes c);\par
54 \par
64 {\cf18 bool} guardarClientesbin(ClientesLista* lista);\par
65 \par
77 {\cf18 bool} removerCliente(ClientesLista** listaClientes, {\cf18 char} nif[]);\par
78 \par
89 {\cf18 bool} adicionarNovoCliente(ClientesLista** listaClientes);\par
90 \par
102 ClientesLista* lerClientesbin(ClientesLista** listaClientes, {\cf18 char}* filename);\par
103 \par
115 {\cf18 bool} ModificarCliente(ClientesLista* listaClientes, {\cf18 char}* nif, {\cf18 int} campo);\par
116 \par
125 {\cf18 void} DestruirListaC(ClientesLista* lista);\par
126 \par
127 \par
128 {\cf18 void} clienteRemovidoEcra(ClientesLista** listaClientes);\par
129 \par
130 \par
131 Clientes* obterDadosClienteEcra(Clientes* c);\par
132 \par
133 {\cf18 bool} ModificarDadoCliente(ClientesLista* listaClientes, {\cf18 char}* nif, {\cf18 int} campo);\par
134 \par
135 {\cf21 #endif }{\cf20 // !Clientesh}\par
136 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro EDA-Projeto/FAluguer.c\par \pard\plain 
{\tc\tcl2 \v EDA-Projeto/FAluguer.c}
{\xe \v EDA-Projeto/FAluguer.c}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Aluguer.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lerAluguerestxt} ({\b AluguerLista} **listaAlugueres, char *filename, {\b Vertice} *g, {\b MeiosLista} *mlista)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b CalcularKm} ({\b Vertice} *g, {\b MeiosLista} *mlista, int idMeio, {\b Aluguer} a)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b CalcularPreco} ({\b MeiosLista} *mlista, int idMeio, {\b Aluguer} a)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AluguerLista} * {\b adicionarAluguerLista} ({\b AluguerLista} *lista, {\b Aluguer} a)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b existeAluguer} ({\b AluguerLista} *lista, {\b Aluguer} a)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b guardarAlugueresBinario} ({\b AluguerLista} *listaAlugueres, char *nomeArquivo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b carregarAlugueresBinario} ({\b AluguerLista} **listaAlugueres, char *nomeArquivo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b destruirAluguerLista} ({\b AluguerLista} *listaAlugueres)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b imprimirAluguerLista} ({\b AluguerLista} *lista)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v adicionarAluguerLista\:FAluguer.c}
{\xe \v FAluguer.c\:adicionarAluguerLista}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AluguerLista} * adicionarAluguerLista ({\b AluguerLista} *  {\i lista}, {\b Aluguer}  {\i a})}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o adiciona um aluguer \'E0 lista encadeada 1\'BA Aloca mem\'F3ria para o novo aluguer 2\'BA Verifica se a lista est\'E1 vazia ou se o novo aluguer tem o menor ID 3\'BA Encontra a posi\'E7\'E3o correta para inserir o novo aluguer na lista ordenada 4\'BA Retorna a lista com o novo aluguer\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lista} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i a} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 113                                                                     \{\par
114     AluguerLista* novo = (AluguerLista*)malloc({\cf17 sizeof}(AluguerLista));\par
115     {\cf19 if} (novo == NULL) {\cf19 return} NULL;\par
116     novo->a = a;\par
117     novo->next = NULL;\par
118 \par
119     {\cf19 if} (existeAluguer(lista, a)) {\cf19 return} lista;\par
120 \par
121 \par
122     {\cf20 // Verifica se a lista est\'E1 vazia ou se o novo aluguer tem o menor ID}\par
123     {\cf19 if} (lista == NULL || a.id < lista->a.id) \{\par
124         novo->next = lista;\par
125         {\cf19 return} novo;\par
126     \}\par
127 \par
128     {\cf20 // Encontra a posi\'E7\'E3o correta para inserir o novo aluguer na lista ordenada}\par
129     AluguerLista* anterior = lista;\par
130     AluguerLista* atual = lista->next;\par
131     {\cf19 while} (atual != NULL && atual->a.id < a.id) \{\par
132         anterior = atual;\par
133         atual = atual->next;\par
134     \}\par
135 \par
136     novo->next = atual;\par
137     anterior->next = novo;\par
138 \par
139     {\cf19 return} lista;\par
140 \}\par
}
}
{\xe \v CalcularKm\:FAluguer.c}
{\xe \v FAluguer.c\:CalcularKm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CalcularKm ({\b Vertice} *  {\i g}, {\b MeiosLista} *  {\i mlista}, int  {\i idMeio}, {\b Aluguer}  {\i a})}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o serve para calcular os km de um aluguer 1\'BA Procura o meio de transporte pelo ID 2\'BA Converte o nome da localiza\'E7\'E3o para ID 3\'BA Calcula a dist\'E2ncia entre a localiza\'E7\'E3o do meio de transporte e o destino do aluguer 4\'BA Retorna a dist\'E2ncia\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i g} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mlista} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i idMeio} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i a} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 56                                                                       \{\par
57 \par
58     Meios* m = procurarMeioPorId(mlista, idMeio);\par
59 \par
60     {\cf18 int} i = ConverterNomeParaID(g, m->localizacao);\par
61 \par
62 \par
63     {\cf19 return} CalculaDistancia(g, i, a.idDestino);\par
64 \par
65 \}\par
}
}
{\xe \v CalcularPreco\:FAluguer.c}
{\xe \v FAluguer.c\:CalcularPreco}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float CalcularPreco ({\b MeiosLista} *  {\i mlista}, int  {\i idMeio}, {\b Aluguer}  {\i a})}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o calcula o pre\'E7o de um aluguer 1\'BA Procura o meio de transporte pelo ID 2\'BA Verifica o tipo de meio de transporte 3\'BA Calcula o pre\'E7o por km\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mlista} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i idMeio} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i a} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 79                                                                \{\par
80     Meios* m = procurarMeioPorId(mlista, idMeio);\par
81 \par
82     {\cf19 if} (a.km == 0) \{\par
83         {\cf19 return} 1;\par
84     \}\par
85 \par
86     {\cf20 // Verifica o tipo de meio de transporte}\par
87     {\cf19 switch} (m->tipo) \{\par
88     {\cf19 case} Bicicleta:\par
89         {\cf19 return} a.km * 0.1; {\cf20 // Pre\'E7o por km para bicicleta: 0.1}\par
90     {\cf19 case} Carro:\par
91         {\cf19 return} a.km * 0.5; {\cf20 // Pre\'E7o por km para carro: 0.5}\par
92     {\cf19 case} Trotinete:\par
93         {\cf19 return} a.km * 0.2; {\cf20 // Pre\'E7o por km para trotinete: 0.2}\par
94     {\cf19 case} Autocarro:\par
95         {\cf19 return} a.km * 0.3; {\cf20 // Pre\'E7o por km para autocarro: 0.3}\par
96     {\cf19 default}:\par
97         {\cf19 return} a.km * 0.4; {\cf20 // Pre\'E7o por km para outros meios de transporte: 0.4}\par
98     \}\par
99 \}\par
}
}
{\xe \v carregarAlugueresBinario\:FAluguer.c}
{\xe \v FAluguer.c\:carregarAlugueresBinario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int carregarAlugueresBinario ({\b AluguerLista} **  {\i listaAlugueres}, char *  {\i nomeArquivo})}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o carrega os alugueres de um ficheiro bin\'E1rio para uma lista encadeada 1\'BA Abre o ficheiro bin\'E1rio 2\'BA L\'EA os alugueres do ficheiro e adiciona-os \'E0 lista encadeada 3\'BA Retorna -1 se o ficheiro foi carregado com sucesso e -1 se n\'E3o foi carregado com sucesso 4\'BA Fecha o ficheiro\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaAlugueres} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nomeArquivo} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 203                                                                                \{\par
204     FILE* arquivo = fopen(nomeArquivo, {\cf22 "rb"});\par
205     {\cf19 if} (arquivo == NULL) \{\par
206         {\cf19 return} -1;\par
207     \}\par
208     Aluguer a;\par
209     {\cf19 while} (fread(&a, {\cf17 sizeof}(Aluguer), 1, arquivo) == 1) \{\par
210         *listaAlugueres = adicionarAluguerLista(*listaAlugueres, a);\par
211         \}\par
212         fclose(arquivo);\par
213         {\cf19 return} 1;\par
214 \}\par
}
}
{\xe \v destruirAluguerLista\:FAluguer.c}
{\xe \v FAluguer.c\:destruirAluguerLista}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void destruirAluguerLista ({\b AluguerLista} *  {\i listaAlugueres})}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o serve para destruir uma lista encadeada 1\'BA Percorre a lista encadeada e liberta a mem\'F3ria alocada para cada aluguer 2\'BA Libertar a mem\'F3ria alocada para a lista\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaAlugueres} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 224                                                         \{\par
225     AluguerLista* atual = listaAlugueres;\par
226     {\cf19 while} (atual != NULL) \{\par
227         AluguerLista* proximo = atual->next;\par
228         free(atual);\par
229         atual = proximo;\par
230     \}\par
231 \}\par
}
}
{\xe \v existeAluguer\:FAluguer.c}
{\xe \v FAluguer.c\:existeAluguer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool existeAluguer ({\b AluguerLista} *  {\i lista}, {\b Aluguer}  {\i a})}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o verifica se um aluguer existe na lista encadeada 1\'BA Percorre a lista encadeada e verifica se o ID do aluguer \'E9 igual ao ID do aluguer da lista 2\'BA Retorna true se o aluguer existe na lista e false se n\'E3o existe\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lista} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i a} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 152                                                    \{\par
153     AluguerLista* atual = lista;\par
154     {\cf19 while} (atual != NULL) \{\par
155         {\cf19 if} (atual->a.id == a.id) \{\par
156             {\cf19 return} {\cf17 true};\par
157         \}\par
158         atual = atual->next;\par
159     \}\par
160     {\cf19 return} {\cf17 false};\par
161 \}\par
}
}
{\xe \v guardarAlugueresBinario\:FAluguer.c}
{\xe \v FAluguer.c\:guardarAlugueresBinario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int guardarAlugueresBinario ({\b AluguerLista} *  {\i listaAlugueres}, char *  {\i nomeArquivo})}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o guarda os alugueres de uma lista encadeada num ficheiro bin\'E1rio 1\'BA Abre o ficheiro bin\'E1rio 2\'BA Percorre a lista encadeada e guarda os alugueres no ficheiro 3\'BA Fecha o ficheiro\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaAlugueres} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nomeArquivo} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 174                                                                              \{\par
175     FILE* arquivo = fopen(nomeArquivo, {\cf22 "wb"});\par
176     {\cf19 if} (arquivo == NULL) \{\par
177         {\cf19 return} -1;\par
178     \}\par
179 \par
180     AluguerLista* atual = listaAlugueres;\par
181     {\cf19 while} (atual != NULL) \{\par
182         {\cf19 if} (fwrite(&(atual->a), {\cf17 sizeof}(Aluguer), 1, arquivo) != 1) \{\par
183             {\cf19 break};\par
184         \}\par
185         atual = atual->next;\par
186     \}\par
187 \par
188     fclose(arquivo);\par
189 \}\par
}
}
{\xe \v imprimirAluguerLista\:FAluguer.c}
{\xe \v FAluguer.c\:imprimirAluguerLista}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void imprimirAluguerLista ({\b AluguerLista} *  {\i lista})}}
\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 236                                                \{\par
237     {\cf19 if} (lista == NULL) \{\par
238         printf({\cf22 "A lista de aluguers esta vazia.\\n"});\par
239         {\cf19 return};\par
240     \}\par
241 \par
242     printf({\cf22 "Lista de Aluguers:\\n"});\par
243     printf({\cf22 "ID |    NIF     | ID Meio | Data       | ID Destino | KM | Preco\\n"});\par
244     printf({\cf22 "-----------------------------------------------------\\n"});\par
245 \par
246     AluguerLista* atual = lista;\par
247     {\cf19 while} (atual != NULL) \{\par
248 \par
249         printf({\cf22 "%-2d | %-10s | %-7d | %-10s | %-11d | %-2d | %.2f\\n"},\par
250             atual->a.id, atual->a.nif, atual->a.idMeio, atual->a.data,\par
251             atual->a.idDestino, atual->a.km, atual->a.preco);\par
252         atual = atual->next;\par
253     \}\par
254 \}\par
}
}
{\xe \v lerAluguerestxt\:FAluguer.c}
{\xe \v FAluguer.c\:lerAluguerestxt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int lerAluguerestxt ({\b AluguerLista} **  {\i listaAlugueres}, char *  {\i filename}, {\b Vertice} *  {\i g}, {\b MeiosLista} *  {\i mlista})}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o l\'EA os alugueres de um ficheiro txt e insere-os numa lista encadeada 1\'BA L\'EA os dados de cada aluguer e envia para a fun\'E7\'E3o adicionarAluguerLista que insere na lista encadeada 2\'BA Retorna 1 se o ficheiro foi lido com sucesso e 0 se n\'E3o foi lido com sucesso\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaAlugueres} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i filename} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 22                                                                                                    \{\par
23     FILE* ficheiro = fopen(filename, {\cf22 "r"});\par
24     {\cf19 if} (ficheiro == NULL) \{\par
25         {\cf19 return} 0;\par
26     \}\par
27 \par
28     {\cf20 // L\'EA os dados de cada aluguer e insere na lista encadeada}\par
29     {\cf18 char} linha[100];\par
30     {\cf19 while} (fgets(linha, 100, ficheiro) != NULL) \{\par
31         Aluguer novoAluguer;\par
32         sscanf(linha, {\cf22 "%d;%[^;];%d;%[^;];%d"}, &novoAluguer.id, novoAluguer.nif, &novoAluguer.idMeio, novoAluguer.data, &novoAluguer.idDestino);\par
33         novoAluguer.km = CalcularKm(g, mlista, novoAluguer.idMeio, novoAluguer);\par
34         novoAluguer.preco = CalcularPreco(mlista, novoAluguer.idMeio, novoAluguer);\par
35         *listaAlugueres = adicionarAluguerLista(*listaAlugueres, novoAluguer);\par
36     \}\par
37 \par
38     fclose(ficheiro);\par
39     {\cf19 return} 1;\par
40 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro EDA-Projeto/FClientes.c\par \pard\plain 
{\tc\tcl2 \v EDA-Projeto/FClientes.c}
{\xe \v EDA-Projeto/FClientes.c}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'F5es clientes. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Clientes.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lerClientestxt} ({\b ClientesLista} **listaClientes)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para ler os dados dos clientes do ficheiro txt 1\'BA L\'EA os dados de cada cliente e envia para a fun\'E7\'E3o adicionarClietneLista que insere na lista encadeada. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ClientesLista} * {\b adicionarClienteLista} ({\b ClientesLista} *lista, {\b Clientes} c)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insere {\b Clientes} no incio de uma lista encadeada \par
 1\'BA Cria um novo n\'F3 com os dados do cliente 2\'BA Insere o novo n\'F3 no inicio da lista. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b guardarClientesbin} ({\b ClientesLista} *lista)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o guarda a lista de clientes no ficheiro bin\'E1rio 1\'BA Abre o ficheiro bin\'E1rio para escrita 2\'BA Percorre a lista encadeada e guarda os dados de cada cliente no ficheiro 3\'BA Fecha o ficheiro. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b adicionarNovoCliente} ({\b ClientesLista} **listaClientes)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o adiciona um novo cliente \'E0 lista de clientes 1\'BA Cria um novo cliente com os dados inseridos pelo usu\'E1rio 2\'BA Adiciona o novo cliente \'E0 lista chamando a fun\'E7\'E3o adicionarClienteLista. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ClientesLista} * {\b lerClientesbin} ({\b ClientesLista} **listaClientes, char *fileName)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o l\'EA os dados dos clientes do ficheiro bin\'E1rio 1\'BA Abre o ficheiro bin\'E1rio para leitura 2\'BA L\'EA os dados de cada cliente e insere na lista encadeada chamando a fun\'E7\'E3o adicionarClienteLista 3\'BA Fecha o ficheiro. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removerCliente} ({\b ClientesLista} **listaClientes, char nif[])\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o remove um cliente da lista de clientes 1\'BA Procura pelo cliente com o NIF correspondente na lista encadeada 2\'BA Remove o cliente da lista encadeada 3\'BA Atualiza o arquivo bin\'E1rio com a lista atualizada chamando a fun\'E7\'E3o guardarClientesbin. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ClientesLista} * {\b procurarClientePorNIF} ({\b ClientesLista} *listaClientes, const char *nif)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ModificarCliente} ({\b ClientesLista} *listaClientes, char *nif, int campo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DestruirListaC} ({\b ClientesLista} *lista)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Clientes} * {\b obterDadosClienteEcra} ({\b Clientes} *c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mostrarClientes} ({\b ClientesLista} *lista)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clienteRemovidoEcra} ({\b ClientesLista} **listaClientes)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ModificarDadoCliente} ({\b ClientesLista} *listaClientes, char *nif, int campo)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'F5es clientes. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
March 2023 \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v adicionarClienteLista\:FClientes.c}
{\xe \v FClientes.c\:adicionarClienteLista}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ClientesLista} * adicionarClienteLista ({\b ClientesLista} *  {\i lista}, {\b Clientes}  {\i c})}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insere {\b Clientes} no incio de uma lista encadeada \par
 1\'BA Cria um novo n\'F3 com os dados do cliente 2\'BA Insere o novo n\'F3 no inicio da lista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insere {\b Clientes} no incio de uma lista encadeada 1\'BA Cria um novo n\'F3 com os dados do cliente 2\'BA Insere o novo n\'F3 no inicio da lista 3\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarClientesbin.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i recebe} \cell }{uma lista e um cliente para o inserir na lista \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 44                                                                        \{\par
45     ClientesLista* novo = (ClientesLista*)malloc({\cf17 sizeof}(ClientesLista));\par
46     {\cf19 if} (novo == NULL) {\cf19 return} NULL;\par
47     novo->c = c;\par
48     novo->next = NULL;\par
49 \par
50     {\cf20 // Verifica se a lista est\'E1 vazia ou se o novo cliente tem o menor NIF}\par
51     {\cf19 if} (lista == NULL || strcmp(c.nif, lista->c.nif) < 0) \{\par
52         novo->next = lista;\par
53         {\cf19 return} novo;\par
54     \}\par
55 \par
56     {\cf20 // Encontra a posi\'E7\'E3o correta para inserir o novo cliente na lista ordenada}\par
57     ClientesLista* anterior = lista;\par
58     ClientesLista* atual = lista->next;\par
59     {\cf19 while} (atual != NULL && strcmp(c.nif, atual->c.nif) >= 0) \{\par
60         anterior = atual;\par
61         atual = atual->next;\par
62     \}\par
63 \par
64     novo->next = atual;\par
65     anterior->next = novo;\par
66 \par
67     {\cf19 return} lista;\par
68 \}\par
}
}
{\xe \v adicionarNovoCliente\:FClientes.c}
{\xe \v FClientes.c\:adicionarNovoCliente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool adicionarNovoCliente ({\b ClientesLista} **  {\i listaClientes})}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o adiciona um novo cliente \'E0 lista de clientes 1\'BA Cria um novo cliente com os dados inseridos pelo usu\'E1rio 2\'BA Adiciona o novo cliente \'E0 lista chamando a fun\'E7\'E3o adicionarClienteLista. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o adiciona um novo cliente \'E0 lista de clientes 1\'BA Cria um novo cliente com os dados inseridos pelo usu\'E1rio 2\'BA Adiciona o novo cliente \'E0 lista chamando a fun\'E7\'E3o adicionarClienteLista 3\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarClientesbin.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaClientes} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 104                                                          \{\par
105     {\cf20 // Cria um novo cliente com os dados inseridos pelo usu\'E1rio}\par
106     Clientes novoCliente;\par
107     obterDadosClienteEcra(&novoCliente);\par
108 \par
109     {\cf20 // Adiciona o novo cliente \'E0 lista}\par
110     *listaClientes = adicionarClienteLista(*listaClientes, novoCliente);\par
111 \par
112 \par
113     {\cf19 return} {\cf17 true};\par
114 \}\par
}
}
{\xe \v clienteRemovidoEcra\:FClientes.c}
{\xe \v FClientes.c\:clienteRemovidoEcra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void clienteRemovidoEcra ({\b ClientesLista} **  {\i listaClientes})}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 264                                                         \{\par
265     {\cf18 char} nif[10];\par
266     printf({\cf22 "NIF do cliente a remover: "});\par
267     scanf({\cf22 "%s"}, nif);\par
268     removerCliente(&listaClientes, nif);\par
269 \par
270 \}\par
}
}
{\xe \v DestruirListaC\:FClientes.c}
{\xe \v FClientes.c\:DestruirListaC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DestruirListaC ({\b ClientesLista} *  {\i lista})}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o destroi a lista de clientes 1\'BA Percorre a lista encadeada e destroi cada n\'F3 2\'BA Liberta a mem\'F3ria alocada para a lista\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lista} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 228                                           \{\par
229     ClientesLista* atual = lista;\par
230     {\cf19 while} (atual != NULL) \{\par
231         ClientesLista* proximo = atual->next;\par
232         free(atual);\par
233         atual = proximo;\par
234     \}\par
235 \}\par
}
}
{\xe \v guardarClientesbin\:FClientes.c}
{\xe \v FClientes.c\:guardarClientesbin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool guardarClientesbin ({\b ClientesLista} *  {\i lista})}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o guarda a lista de clientes no ficheiro bin\'E1rio 1\'BA Abre o ficheiro bin\'E1rio para escrita 2\'BA Percorre a lista encadeada e guarda os dados de cada cliente no ficheiro 3\'BA Fecha o ficheiro. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lista} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 79                                               \{\par
80     FILE* ficheiro = fopen({\cf22 "Clientes.bin"}, {\cf22 "wb"});\par
81     {\cf19 if} (ficheiro == NULL) \{\par
82         {\cf19 return} {\cf17 false};\par
83     \}\par
84 \par
85     {\cf19 while} (lista != NULL) \{\par
86         fwrite(&lista->c, {\cf17 sizeof}(Clientes), 1, ficheiro);\par
87         lista = lista->next;\par
88     \}\par
89 \par
90     fclose(ficheiro);\par
91     {\cf19 return} {\cf17 true};\par
92 \}\par
}
}
{\xe \v lerClientesbin\:FClientes.c}
{\xe \v FClientes.c\:lerClientesbin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ClientesLista} * lerClientesbin ({\b ClientesLista} **  {\i listaClientes}, char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o l\'EA os dados dos clientes do ficheiro bin\'E1rio 1\'BA Abre o ficheiro bin\'E1rio para leitura 2\'BA L\'EA os dados de cada cliente e insere na lista encadeada chamando a fun\'E7\'E3o adicionarClienteLista 3\'BA Fecha o ficheiro. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaClientes} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 126                                                                              \{\par
127     FILE* ficheiro = fopen(fileName, {\cf22 "rb"});\par
128     {\cf19 if} (ficheiro == NULL) \{\par
129         {\cf19 return} 0;\par
130     \}\par
131     {\cf20 // L\'EA os dados de cada cliente e insere na lista encadeada}\par
132     Clientes novoCliente;\par
133     {\cf19 while} (fread(&novoCliente, {\cf17 sizeof}(Clientes), 1, ficheiro) != 0) \{\par
134         *listaClientes = adicionarClienteLista(*listaClientes, novoCliente);\par
135         \}\par
136             fclose(ficheiro);\par
137             {\cf19 return} listaClientes;\par
138 \}\par
}
}
{\xe \v lerClientestxt\:FClientes.c}
{\xe \v FClientes.c\:lerClientestxt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int lerClientestxt ({\b ClientesLista} **  {\i listaClientes})}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para ler os dados dos clientes do ficheiro txt 1\'BA L\'EA os dados de cada cliente e envia para a fun\'E7\'E3o adicionarClietneLista que insere na lista encadeada. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para ler os dados dos clientes do ficheiro txt 1\'BA L\'EA os dados de cada cliente e envia para a fun\'E7\'E3o adicionarClietneLista que insere na lista encadeada 2\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarClientesbin.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaClientes} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 18                                                   \{\par
19     FILE* ficheiro = fopen({\cf22 "Clientes.txt"}, {\cf22 "r"});\par
20     {\cf19 if} (ficheiro == NULL) \{\par
21         {\cf19 return} 0;\par
22     \}\par
23 \par
24     {\cf20 // L\'EA os dados de cada cliente e insere na lista encadeada}\par
25     {\cf18 char} linha[100];\par
26     {\cf19 while} (fgets(linha, 100, ficheiro) != NULL) \{\par
27         Clientes novoCliente;\par
28         sscanf(linha, {\cf22 "%[^;];%[^;];%[^;];%f"}, novoCliente.nome, novoCliente.nif, novoCliente.morada, &novoCliente.saldo);\par
29         *listaClientes = adicionarClienteLista(*listaClientes, novoCliente);\par
30     \}\par
31 \par
32     fclose(ficheiro);\par
33     {\cf19 return} 1;\par
34 \}\par
}
}
{\xe \v ModificarCliente\:FClientes.c}
{\xe \v FClientes.c\:ModificarCliente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ModificarCliente ({\b ClientesLista} *  {\i listaClientes}, char *  {\i nif}, int  {\i campo})}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o modifica um dado de um cliente 1\'BA Procura pelo cliente com o NIF correspondente na lista encadeada 2\'BA Modifica o dado do cliente\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaClientes} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nif} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i campo} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 213                                                                           \{\par
214     {\cf18 bool} sucesso = {\cf17 false};\par
215 \par
216     sucesso = ModificarDadoCliente(listaClientes, nif, campo);\par
217 \par
218     {\cf19 return} sucesso;\par
219 \}\par
}
}
{\xe \v ModificarDadoCliente\:FClientes.c}
{\xe \v FClientes.c\:ModificarDadoCliente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ModificarDadoCliente ({\b ClientesLista} *  {\i listaClientes}, char *  {\i nif}, int  {\i campo})}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 272                                                                               \{\par
273     ClientesLista* cliente = procurarClientePorNIF(listaClientes, nif);\par
274 \par
275     {\cf19 if} (cliente == NULL) \{\par
276         {\cf19 return} {\cf17 false};\par
277     \}\par
278 \par
279     {\cf19 switch} (campo) \{\par
280     {\cf19 case} 1:\par
281         printf({\cf22 "Novo Nome: "});\par
282         scanf({\cf22 "%s"}, cliente->c.nome);\par
283         {\cf19 break};\par
284     {\cf19 case} 2:\par
285         printf({\cf22 "Nova Morada: "});\par
286         scanf({\cf22 "%s"}, cliente->c.morada);\par
287         {\cf19 break};\par
288     {\cf19 case} 3:\par
289         printf({\cf22 "Novo Saldo: "});\par
290         {\cf18 float} novoSaldo;\par
291         scanf({\cf22 "%f"}, &novoSaldo);\par
292         cliente->c.saldo = novoSaldo;\par
293         {\cf19 break};\par
294     {\cf19 default}:\par
295         printf({\cf22 "Campo inv\'E1lido.\\n"});\par
296         {\cf19 break};\par
297     \}\par
298     {\cf19 return} {\cf17 true};\par
299 \}\par
}
}
{\xe \v mostrarClientes\:FClientes.c}
{\xe \v FClientes.c\:mostrarClientes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mostrarClientes ({\b ClientesLista} *  {\i lista})}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 252                                            \{\par
253     printf({\cf22 "Lista de clientes:\\n\\n"});\par
254     {\cf19 while} (lista != NULL) \{\par
255         printf({\cf22 "Nome: %s\\n"}, lista->c.nome);\par
256         printf({\cf22 "NIF: %s\\n"}, lista->c.nif);\par
257         printf({\cf22 "Morada: %s\\n"}, lista->c.morada);\par
258         printf({\cf22 "Saldo: %.2f\\n"}, lista->c.saldo);\par
259         printf({\cf22 "\\n"});\par
260         lista = lista->next;\par
261     \}\par
262 \}\par
}
}
{\xe \v obterDadosClienteEcra\:FClientes.c}
{\xe \v FClientes.c\:obterDadosClienteEcra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Clientes} * obterDadosClienteEcra ({\b Clientes} *  {\i c})}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 240                                              \{\par
241     printf({\cf22 "Nome: "});\par
242     scanf({\cf22 "%s"}, c->nome);\par
243     printf({\cf22 "NIF: "});\par
244     scanf({\cf22 "%s"}, c->nif);\par
245     printf({\cf22 "Morada: "});\par
246     scanf({\cf22 "%s"}, c->morada);\par
247     printf({\cf22 "Saldo: "});\par
248     scanf({\cf22 "%f"}, &c->saldo);\par
249     {\cf19 return} c;\par
250 \}\par
}
}
{\xe \v procurarClientePorNIF\:FClientes.c}
{\xe \v FClientes.c\:procurarClientePorNIF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ClientesLista} * procurarClientePorNIF ({\b ClientesLista} *  {\i listaClientes}, const char *  {\i nif})}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 181                                                                                     \{\par
182     ClientesLista* atual = listaClientes;\par
183 \par
184     {\cf19 while} (atual != NULL) \{\par
185         {\cf18 int} comparacao = strcmp(atual->c.nif, nif);\par
186         {\cf19 if} (comparacao == 0) \{\par
187             {\cf19 return} atual;\par
188         \}\par
189         {\cf19 else} {\cf19 if} (comparacao > 0) \{\par
190             {\cf20 // O NIF atual \'E9 maior que o NIF procurado,}\par
191             {\cf20 // ent\'E3o n\'E3o h\'E1 necessidade de continuar a busca.}\par
192             {\cf19 return} NULL;\par
193         \}\par
194         atual = atual->next;\par
195     \}\par
196 \par
197     {\cf20 // O cliente com o NIF procurado n\'E3o foi encontrado.}\par
198     {\cf19 return} NULL;\par
199 \}\par
}
}
{\xe \v removerCliente\:FClientes.c}
{\xe \v FClientes.c\:removerCliente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool removerCliente ({\b ClientesLista} **  {\i listaClientes}, char  {\i nif}[])}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o remove um cliente da lista de clientes 1\'BA Procura pelo cliente com o NIF correspondente na lista encadeada 2\'BA Remove o cliente da lista encadeada 3\'BA Atualiza o arquivo bin\'E1rio com a lista atualizada chamando a fun\'E7\'E3o guardarClientesbin. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaClientes} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nif} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 151                                                                \{\par
152     ClientesLista* clienteAtual = *listaClientes;\par
153     ClientesLista* clienteAnterior = NULL;\par
154     {\cf18 bool} encontrado = {\cf17 false};\par
155     {\cf20 // Procura pelo cliente com o NIF correspondente na lista encadeada}\par
156     {\cf19 while} (clienteAtual != NULL) \{\par
157         {\cf19 if} (strcmp(clienteAtual->c.nif, nif) == 0) \{\par
158             encontrado = {\cf17 true};\par
159             {\cf19 break};\par
160         \}\par
161         clienteAnterior = clienteAtual;\par
162         clienteAtual = clienteAtual->next;\par
163     \}\par
164     {\cf19 if} (!encontrado) \{\par
165 \par
166         {\cf19 return} {\cf17 false};\par
167     \}\par
168     {\cf20 // Remove o cliente da lista encadeada}\par
169     {\cf19 if} (clienteAnterior == NULL) \{\par
170         *listaClientes = clienteAtual->next;\par
171     \}\par
172     {\cf19 else} \{\par
173         clienteAnterior->next = clienteAtual->next;\par
174     \}\par
175     {\cf20 // Atualiza o arquivo bin\'E1rio com a lista atualizada}\par
176     free(clienteAtual);\par
177 \par
178     {\cf19 return} {\cf17 true};\par
179 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro EDA-Projeto/FGestores.c\par \pard\plain 
{\tc\tcl2 \v EDA-Projeto/FGestores.c}
{\xe \v EDA-Projeto/FGestores.c}
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desenvolvimento das fun\'E7\'F5es dos gestores. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Gestores.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lerGestorestxt} ({\b GestoresLista} **listaGestores)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para ler os dados dos gestores do ficheiro txt 1\'BA L\'EA os dados de cada gestor e envia para a fun\'E7\'E3o adicionarGestorLista que insere na lista encadeada 2\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarGestoresbin. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GestoresLista} * {\b adicionarGestorLista} ({\b GestoresLista} *lista, {\b Gestores} g)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insere {\b Gestores} no incio de uma lista encadeada 1\'BA Cria um novo n\'F3 com os dados do gestor 2\'BA Insere o novo n\'F3 no inicio da lista 3\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarGestoresbin. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b guardarGestoresbin} ({\b GestoresLista} *lista)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o guarda a lista de gestores no ficheiro bin\'E1rio 1\'BA Abre o ficheiro bin\'E1rio para escrita 2\'BA Percorre a lista encadeada e guarda os dados de cada gestor no ficheiro 3\'BA Fecha o ficheiro. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GestoresLista} * {\b lerGestoresbin} ({\b GestoresLista} **listaGestores)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o l\'EA os dados dos gestores do ficheiro bin\'E1rio 1\'BA Abre o ficheiro bin\'E1rio para leitura 2\'BA Percorre o ficheiro e guarda os dados de cada gestor na lista encadeada 3\'BA Fecha o ficheiro. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b adicionarNovoGestor} ({\b GestoresLista} **listaGestor)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o adiciona um novo gestor \'E0 lista de gestores 1\'BA Cria um novo gestor com os dados inseridos pelo usu\'E1rio 2\'BA Adiciona o novo gestor \'E0 lista chamando a fun\'E7\'E3o adicionarGestorLista 3\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarGestorbin. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b RemoverGestor} ({\b GestoresLista} **listaGestor, int id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GestoresLista} * {\b procurarGestorPorId} ({\b GestoresLista} *listaGestores, int id)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o procura um gestor na lista de gestores 1\'BA Percorre a lista encadeada e procura pelo gestor com o ID correspondente 2\'BA Retorna o gestor encontrado 3\'BA Se n\'E3o encontrar o gestor retorna NULL. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ModificaGestor} ({\b GestoresLista} *listaGestores, int id, int campo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DestruirListaG} ({\b GestoresLista} *lista)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b gestorRemovidoEcra} ({\b GestoresLista} **listaGestor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gestores} * {\b obterDadosGestorEcra} ({\b Gestores} *g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mostrarGestores} ({\b GestoresLista} *lista)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ModificarDadoGestor} ({\b GestoresLista} *listaGestores, int id, int campo)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desenvolvimento das fun\'E7\'F5es dos gestores. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
March 2023 \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v adicionarGestorLista\:FGestores.c}
{\xe \v FGestores.c\:adicionarGestorLista}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GestoresLista} * adicionarGestorLista ({\b GestoresLista} *  {\i lista}, {\b Gestores}  {\i g})}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insere {\b Gestores} no incio de uma lista encadeada 1\'BA Cria um novo n\'F3 com os dados do gestor 2\'BA Insere o novo n\'F3 no inicio da lista 3\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarGestoresbin. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i recebe} \cell }{uma lista e um gestor para o inserir na lista \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
retorna a lista atualizada \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 46                                                                       \{\par
47     GestoresLista* novo = (GestoresLista*)malloc({\cf17 sizeof}(GestoresLista));\par
48     {\cf19 if} (novo == NULL) {\cf19 return} NULL;\par
49     novo->g = g;\par
50     novo->next = NULL;\par
51 \par
52     {\cf20 // Verifica se a lista est\'E1 vazia ou se o novo gestor tem o menor ID}\par
53     {\cf19 if} (lista == NULL || g.id < lista->g.id) \{\par
54         novo->next = lista;\par
55         {\cf19 return} novo;\par
56     \}\par
57 \par
58     {\cf20 // Encontra a posi\'E7\'E3o correta para inserir o novo gestor na lista ordenada}\par
59     GestoresLista* anterior = lista;\par
60     GestoresLista* atual = lista->next;\par
61     {\cf19 while} (atual != NULL && atual->g.id < g.id) \{\par
62         anterior = atual;\par
63         atual = atual->next;\par
64     \}\par
65 \par
66     novo->next = atual;\par
67     anterior->next = novo;\par
68 \par
69     {\cf19 return} lista;\par
70 \}\par
}
}
{\xe \v adicionarNovoGestor\:FGestores.c}
{\xe \v FGestores.c\:adicionarNovoGestor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool adicionarNovoGestor ({\b GestoresLista} **  {\i listaGestor})}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o adiciona um novo gestor \'E0 lista de gestores 1\'BA Cria um novo gestor com os dados inseridos pelo usu\'E1rio 2\'BA Adiciona o novo gestor \'E0 lista chamando a fun\'E7\'E3o adicionarGestorLista 3\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarGestorbin. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i $PARAMS} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 130                                                       \{\par
131     Gestores novoGestor;\par
132     obterDadosGestorEcra(&novoGestor);\par
133 \par
134     *listaGestor = adicionarGestorLista(*listaGestor, novoGestor);\par
135     \par
136     guardarGestoresbin(*listaGestor);\par
137     {\cf19 return} {\cf17 true};\par
138 \}\par
}
}
{\xe \v DestruirListaG\:FGestores.c}
{\xe \v FGestores.c\:DestruirListaG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DestruirListaG ({\b GestoresLista} *  {\i lista})}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o destroi a lista de gestores 1\'BA Percorre a lista encadeada e destroi cada n\'F3 2\'BA Liberta a mem\'F3ria alocada para a lista\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lista} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 242                                           \{\par
243     GestoresLista* atual = lista;\par
244     {\cf19 while} (atual != NULL) \{\par
245         GestoresLista* proximo = atual->next;\par
246         free(atual);\par
247         atual = proximo;\par
248     \}\par
249 \}\par
}
}
{\xe \v gestorRemovidoEcra\:FGestores.c}
{\xe \v FGestores.c\:gestorRemovidoEcra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool gestorRemovidoEcra ({\b GestoresLista} **  {\i listaGestor})}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 255                                                      \{\par
256     {\cf18 int} id;\par
257     printf({\cf22 "ID do gestor a remover: "});\par
258     scanf({\cf22 "%d"}, &{\cf18 id});\par
259     {\cf19 if} (RemoverGestor(listaGestor, {\cf18 id})) \{\par
260         printf({\cf22 "Gestor removido com sucesso.\\n"});\par
261     \}\par
262     {\cf19 else} \{\par
263         printf({\cf22 "N\'E3o foi encontrado nenhum gestor com o ID %d.\\n"}, {\cf18 id});\par
264     \}\par
265 \}\par
}
}
{\xe \v guardarGestoresbin\:FGestores.c}
{\xe \v FGestores.c\:guardarGestoresbin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool guardarGestoresbin ({\b GestoresLista} *  {\i lista})}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o guarda a lista de gestores no ficheiro bin\'E1rio 1\'BA Abre o ficheiro bin\'E1rio para escrita 2\'BA Percorre a lista encadeada e guarda os dados de cada gestor no ficheiro 3\'BA Fecha o ficheiro. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lista} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 82                                               \{\par
83     FILE* ficheiro = fopen({\cf22 "Gestores.bin"},{\cf22 "wb"});\par
84     {\cf19 if} (ficheiro == NULL) \{\par
85         {\cf19 return} {\cf17 false};\par
86     \}\par
87     {\cf19 while} (lista != NULL) \{\par
88         fwrite(&lista->g, {\cf17 sizeof}(Gestores), 1, ficheiro);\par
89         lista = lista->next;\par
90     \}\par
91     fclose(ficheiro);\par
92     {\cf19 return} {\cf17 true};\par
93 \par
94 \}\par
}
}
{\xe \v lerGestoresbin\:FGestores.c}
{\xe \v FGestores.c\:lerGestoresbin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GestoresLista} * lerGestoresbin ({\b GestoresLista} **  {\i listaGestores})}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o l\'EA os dados dos gestores do ficheiro bin\'E1rio 1\'BA Abre o ficheiro bin\'E1rio para leitura 2\'BA Percorre o ficheiro e guarda os dados de cada gestor na lista encadeada 3\'BA Fecha o ficheiro. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lista} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 106                                                              \{\par
107     FILE* ficheiro = fopen({\cf22 "Gestores.bin"}, {\cf22 "rb"});\par
108     {\cf19 if} (ficheiro == NULL) \{\par
109         {\cf19 return} 0;\par
110     \}\par
111     Gestores novoGestor;\par
112     {\cf19 while} (fread(&novoGestor, {\cf17 sizeof}(Gestores), 1, ficheiro) != 0) \{\par
113         *listaGestores = adicionarGestorLista(*listaGestores, novoGestor);\par
114     \}\par
115     fclose(ficheiro);\par
116     {\cf19 return} listaGestores;\par
117 \}\par
}
}
{\xe \v lerGestorestxt\:FGestores.c}
{\xe \v FGestores.c\:lerGestorestxt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int lerGestorestxt ({\b GestoresLista} **  {\i listaGestores})}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para ler os dados dos gestores do ficheiro txt 1\'BA L\'EA os dados de cada gestor e envia para a fun\'E7\'E3o adicionarGestorLista que insere na lista encadeada 2\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarGestoresbin. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaGestores} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 19                                                   \{\par
20     FILE* ficheiro = fopen({\cf22 "Gestores.txt"}, {\cf22 "r"});\par
21     {\cf19 if} (ficheiro == NULL) \{\par
22         {\cf19 return} 0;\par
23     \}\par
24     {\cf20 // L\'EA os dados de cada cliente e insere na lista encadeada}\par
25     {\cf18 char} linha[100];\par
26     {\cf19 while} (fgets(linha, 200, ficheiro) != NULL) \{\par
27         Gestores novoGestor;\par
28         sscanf(linha, {\cf22 "%d;%[^;];%[^;];%[^;]"}, &novoGestor.id, novoGestor.nome, novoGestor.email, novoGestor.password);\par
29         *listaGestores = adicionarGestorLista(*listaGestores, novoGestor);\par
30                 guardarGestoresbin(*listaGestores);\par
31         \}\par
32         fclose(ficheiro);\par
33     {\cf19 return} 1;\par
34 \}\par
}
}
{\xe \v ModificaGestor\:FGestores.c}
{\xe \v FGestores.c\:ModificaGestor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ModificaGestor ({\b GestoresLista} *  {\i listaGestores}, int  {\i id}, int  {\i campo})}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o modifica um dado de um gestor 1\'BA Procura pelo gestor com o ID correspondente na lista encadeada 2\'BA Modifica o dado do gestor\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaGestores} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i id} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i campo} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 224                                                                      \{\par
225     {\cf18 bool} sucesso = {\cf17 false};\par
226 \par
227     sucesso = ModificarDadoGestor(listaGestores, {\cf18 id}, campo);\par
228 \par
229     {\cf19 return} sucesso;\par
230 \}\par
}
}
{\xe \v ModificarDadoGestor\:FGestores.c}
{\xe \v FGestores.c\:ModificarDadoGestor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ModificarDadoGestor ({\b GestoresLista} *  {\i listaGestores}, int  {\i id}, int  {\i campo})}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 292                                                                           \{\par
293     GestoresLista* gestor = procurarGestorPorId(listaGestores, {\cf18 id});\par
294 \par
295     {\cf19 if} (gestor == NULL) \{\par
296         {\cf19 return} {\cf17 false};\par
297     \}\par
298 \par
299     {\cf19 switch} (campo) \{\par
300     {\cf19 case} 1:\par
301         printf({\cf22 "Novo Nome: "});\par
302         scanf({\cf22 "%s"}, gestor->g.nome);\par
303         {\cf19 break};\par
304     {\cf19 case} 2:\par
305         printf({\cf22 "Novo Email: "});\par
306         scanf({\cf22 "%s"}, gestor->g.email);\par
307         {\cf19 break};\par
308     {\cf19 case} 3:\par
309         printf({\cf22 "Nova Senha: "});\par
310         scanf({\cf22 "%s"}, gestor->g.password);\par
311         {\cf19 break};\par
312     {\cf19 default}:\par
313         printf({\cf22 "Campo inv\'E1lido.\\n"});\par
314         {\cf19 break};\par
315     \}\par
316     {\cf19 return} {\cf17 true};\par
317 \}\par
}
}
{\xe \v mostrarGestores\:FGestores.c}
{\xe \v FGestores.c\:mostrarGestores}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mostrarGestores ({\b GestoresLista} *  {\i lista})}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 281                                            \{\par
282     printf({\cf22 "Lista de Gestores:\\n\\n"});\par
283     {\cf19 while} (lista != NULL) \{\par
284         printf({\cf22 "ID: %d\\n"}, lista->g.id);\par
285         printf({\cf22 "Nome: %s\\n"}, lista->g.nome);\par
286         printf({\cf22 "Email: %s\\n"}, lista->g.email);\par
287         printf({\cf22 "\\n"});\par
288         lista = lista->next;\par
289     \}\par
290 \}\par
}
}
{\xe \v obterDadosGestorEcra\:FGestores.c}
{\xe \v FGestores.c\:obterDadosGestorEcra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gestores} * obterDadosGestorEcra ({\b Gestores} *  {\i g})}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 268                                             \{\par
269     printf({\cf22 "ID: "});\par
270     scanf({\cf22 "%d"}, &g->id);\par
271     printf({\cf22 "Nome: "});\par
272     scanf({\cf22 "%s"}, g->nome);\par
273     printf({\cf22 "Email: "});\par
274     scanf({\cf22 "%s"}, g->email);\par
275     printf({\cf22 "Password: "});\par
276     scanf({\cf22 "%s"}, g->password);\par
277     {\cf19 return} g;\par
278 \}\par
}
}
{\xe \v procurarGestorPorId\:FGestores.c}
{\xe \v FGestores.c\:procurarGestorPorId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GestoresLista} * procurarGestorPorId ({\b GestoresLista} *  {\i listaGestores}, int  {\i id})}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o procura um gestor na lista de gestores 1\'BA Percorre a lista encadeada e procura pelo gestor com o ID correspondente 2\'BA Retorna o gestor encontrado 3\'BA Se n\'E3o encontrar o gestor retorna NULL. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaGestores} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i id} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
GestoresLista* ou NULL \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 194                                                                          \{\par
195     GestoresLista* atual = listaGestores;\par
196 \par
197     {\cf19 while} (atual != NULL) \{\par
198         {\cf19 if} (atual->g.id == {\cf18 id}) \{\par
199             {\cf19 return} atual;\par
200         \}\par
201         {\cf19 else} {\cf19 if} (atual->g.id > {\cf18 id}) \{\par
202             {\cf20 // O ID atual \'E9 maior que o ID procurado,}\par
203             {\cf20 // ent\'E3o n\'E3o h\'E1 necessidade de continuar a busca.}\par
204             {\cf19 return} NULL;\par
205         \}\par
206         atual = atual->next;\par
207     \}\par
208 \par
209     {\cf20 // O gestor com o ID procurado n\'E3o foi encontrado.}\par
210     {\cf19 return} NULL;\par
211 \}\par
}
}
{\xe \v RemoverGestor\:FGestores.c}
{\xe \v FGestores.c\:RemoverGestor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool RemoverGestor ({\b GestoresLista} **  {\i listaGestor}, int  {\i id})}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 152                                                         \{\par
153     GestoresLista* gestorAtual = *listaGestor;\par
154     GestoresLista* gestorAnterior = NULL;\par
155     {\cf18 bool} encontrado = {\cf17 false};\par
156     {\cf20 // Procura pelo gestor com o id correspondente na lista encadeada}\par
157     {\cf19 while} (gestorAtual != NULL) \{\par
158         {\cf19 if} (gestorAtual->g.id == {\cf18 id}) \{\par
159             encontrado = {\cf17 true};\par
160             {\cf19 break};\par
161         \}\par
162         gestorAnterior = gestorAtual;\par
163         gestorAtual = gestorAtual->next;\par
164     \}\par
165     {\cf19 if} (encontrado) \{\par
166         {\cf19 if} (gestorAnterior == NULL) \{\par
167             *listaGestor = gestorAtual->next;\par
168         \}\par
169         {\cf19 else} \{\par
170             gestorAnterior->next = gestorAtual->next;\par
171         \}\par
172         free(gestorAtual);\par
173         guardarGestoresbin(*listaGestor);\par
174         {\cf19 return} {\cf17 true};\par
175     \}\par
176     {\cf19 else} \{\par
177         {\cf19 return} {\cf17 false};\par
178     \}\par
179 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro EDA-Projeto/FMeiosMobilidade.c\par \pard\plain 
{\tc\tcl2 \v EDA-Projeto/FMeiosMobilidade.c}
{\xe \v EDA-Projeto/FMeiosMobilidade.c}
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desenvolvimento das fun\'E7\'F5es dos meios de mobilidade. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "MeiosMobilidade.h"}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <stdbool.h>}\par
{\f2 #include <stdlib.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b _CTR_SECURE_NO_WARNINGS}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lerMeiostxt} ({\b MeiosLista} **listaMeiosMobilidade)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para ler os dados dos meios de mobilidade do ficheiro txt 1\'BA L\'EA os dados de cada meio de mobilidade e envia para a fun\'E7\'E3o adicionarMeioMobilidadeLista que insere na lista encadeada 2\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarMeiosMobilidadebin. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MeiosLista} * {\b adicionarMeioListaOrdenado} ({\b MeiosLista} *listaMeiosMobilidade, {\b Meios} novoMeio)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para adicionar um meio de mobilidade \'E0 lista encadeada 1\'BA Cria um novo n\'F3 2\'BA Insere os dados do meio de mobilidade no n\'F3 3\'BA Insere o n\'F3 na lista encadeada 4\'BA Retorna a lista atualizada. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b guardarMeiosMobilidadebin} ({\b MeiosLista} *lista)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o guarda a lista de meios de mobilidade no ficheiro bin\'E1rio 1\'BA Abre o ficheiro bin\'E1rio para escrita 2\'BA Percorre a lista encadeada e guarda os dados de cada meio de mobilidade no ficheiro 3\'BA Fecha o ficheiro. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MeiosLista} * {\b lerMeiosbin} ({\b MeiosLista} **listaMeios)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o l\'EA os dados dos meios de mobilidade do ficheiro bin\'E1rio 1\'BA Abre o ficheiro bin\'E1rio para leitura 2\'BA Percorre o ficheiro e guarda os dados de cada meio na lista encadeada 3\'BA Fecha o ficheiro. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b adicionarNovoMeio} ({\b MeiosLista} **listaMeios)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b RemoverMeio} ({\b MeiosLista} **listaMeios, int id)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o remove um meio da lista de gestores 1\'BA Procura pelo meio com o id correspondente na lista encadeada 2\'BA Remove o meio da lista encadeada 3\'BA Atualiza o arquivo bin\'E1rio com a lista atualizada chamando a fun\'E7\'E3o guardarGestoresbin. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Meios} * {\b procurarMeioPorId} ({\b MeiosLista} *listaMeios, int id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ModificarMeioMobilidade} ({\b MeiosLista} *listaMeios, int id, int campo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DestruirListaM} ({\b MeiosLista} *lista)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b calcularAutonomia} ({\b Meios} *m)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ListarMeiosPorLocalizacao} ({\b MeiosLista} *mlista, char *geocodigo, {\b MeiosLista} **listaMeios)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mostrarMeios} ({\b MeiosLista} *lista)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Meios} * {\b obterDadosMeiosEcra} ({\b Meios} *m)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b MeioRemovidoEcra} ({\b MeiosLista} **listaMeios)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ModificarDadoMeioMobilidade} ({\b MeiosLista} *listaMeios, int id, int campo)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desenvolvimento das fun\'E7\'F5es dos meios de mobilidade. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
March 2023 \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das macros\par
\pard\plain 
{\xe \v _CTR_SECURE_NO_WARNINGS\:FMeiosMobilidade.c}
{\xe \v FMeiosMobilidade.c\:_CTR_SECURE_NO_WARNINGS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define _CTR_SECURE_NO_WARNINGS}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v adicionarMeioListaOrdenado\:FMeiosMobilidade.c}
{\xe \v FMeiosMobilidade.c\:adicionarMeioListaOrdenado}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MeiosLista} * adicionarMeioListaOrdenado ({\b MeiosLista} *  {\i listaMeiosMobilidade}, {\b Meios}  {\i novoMeio})}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para adicionar um meio de mobilidade \'E0 lista encadeada 1\'BA Cria um novo n\'F3 2\'BA Insere os dados do meio de mobilidade no n\'F3 3\'BA Insere o n\'F3 na lista encadeada 4\'BA Retorna a lista atualizada. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insere Meios no incio de uma lista encadeada 1\'BA Cria um novo n\'F3 com os dados do meio de mobilidade 2\'BA Insere o novo n\'F3 no inicio da lista 3\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarMeiosbin.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaMeiosMobilidade} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i novoMeio} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
listaMeiosMobilidade \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 74                                                                                          \{\par
75     MeiosLista* novoNo = (MeiosLista*)malloc({\cf17 sizeof}(MeiosLista));\par
76     novoNo->m = novoMeio;\par
77     novoNo->next = NULL;\par
78 \par
79     {\cf19 if} (listaMeiosMobilidade == NULL) \{\par
80         {\cf19 return} novoNo;\par
81     \}\par
82     {\cf19 else} {\cf19 if} (listaMeiosMobilidade->m.autonomia < novoMeio.autonomia) \{\par
83         novoNo->next = listaMeiosMobilidade;\par
84         {\cf19 return} novoNo;\par
85     \}\par
86     {\cf19 else} \{\par
87         MeiosLista* atual = listaMeiosMobilidade;\par
88         {\cf19 while} (atual->next != NULL && atual->next->m.autonomia > novoMeio.autonomia) \{\par
89             atual = atual->next;\par
90         \}\par
91         novoNo->next = atual->next;\par
92         atual->next = novoNo;\par
93         {\cf19 return} listaMeiosMobilidade;\par
94     \}\par
95 \}\par
}
}
{\xe \v adicionarNovoMeio\:FMeiosMobilidade.c}
{\xe \v FMeiosMobilidade.c\:adicionarNovoMeio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool adicionarNovoMeio ({\b MeiosLista} **  {\i listaMeios})}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 152                                                 \{\par
153     {\cf20 // Cria um novo meio com os dados inseridos pelo usu\'E1rio}\par
154     Meios novoMeio;\par
155     obterDadosMeiosEcra(&novoMeio);\par
156     {\cf20 // Adiciona o novo meio \'E0 lista}\par
157     *listaMeios = adicionarMeioListaOrdenado(*listaMeios, novoMeio);\par
158     \par
159     {\cf19 return} {\cf17 true};\par
160 \}\par
}
}
{\xe \v calcularAutonomia\:FMeiosMobilidade.c}
{\xe \v FMeiosMobilidade.c\:calcularAutonomia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int calcularAutonomia ({\b Meios} *  {\i m})}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o calcula a autonomia de um meio de mobilidade 1\'BA Calcula a autonomia de acordo com o tipo de meio de mobilidade 2\'BA Retorna a autonomia\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i meio} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 270                                 \{\par
271     {\cf19 switch} (m->tipo) \{\par
272     {\cf19 case} Bicicleta:\par
273         m->autonomia = m->bateria / 6;\par
274         {\cf19 break};\par
275     {\cf19 case} Carro:\par
276         m->autonomia = m->bateria / 3;\par
277         {\cf19 break};\par
278     {\cf19 case} Trotinete:\par
279         m->autonomia = m->bateria / 5;\par
280         {\cf19 break};\par
281     {\cf19 case} Autocarro:\par
282         m->autonomia = m->bateria / 4;\par
283         {\cf19 break};\par
284     {\cf19 default}:\par
285         {\cf20 // Defina um valor de autonomia padr\'E3o para outros tipos de meios de mobilidade, se necess\'E1rio}\par
286         {\cf19 break};\par
287     \}\par
288 \par
289     {\cf19 return} m->autonomia;\par
290 \}\par
}
}
{\xe \v DestruirListaM\:FMeiosMobilidade.c}
{\xe \v FMeiosMobilidade.c\:DestruirListaM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DestruirListaM ({\b MeiosLista} *  {\i lista})}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o destroi a lista de meios de mobilidade 1\'BA Percorre a lista encadeada e destroi cada n\'F3 2\'BA Atribui NULL \'E0 lista\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lista} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 252                                        \{\par
253     MeiosLista* atual = lista;\par
254     {\cf19 while} (atual != NULL) \{\par
255         MeiosLista* proximo = atual->next;\par
256         free(atual);\par
257         atual = proximo;\par
258     \}\par
259 \}\par
}
}
{\xe \v guardarMeiosMobilidadebin\:FMeiosMobilidade.c}
{\xe \v FMeiosMobilidade.c\:guardarMeiosMobilidadebin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool guardarMeiosMobilidadebin ({\b MeiosLista} *  {\i lista})}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o guarda a lista de meios de mobilidade no ficheiro bin\'E1rio 1\'BA Abre o ficheiro bin\'E1rio para escrita 2\'BA Percorre a lista encadeada e guarda os dados de cada meio de mobilidade no ficheiro 3\'BA Fecha o ficheiro. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lista} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 107                                                   \{\par
108     FILE* ficheiro = fopen({\cf22 "MeiosMobilidade.bin"}, {\cf22 "wb"});\par
109     {\cf19 if} (ficheiro == NULL) \{\par
110         {\cf19 return} {\cf17 false};\par
111     \}\par
112     {\cf19 while} (lista != NULL) \{\par
113         fwrite(&lista->m, {\cf17 sizeof}(Meios), 1, ficheiro);\par
114         lista = lista->next;\par
115     \}\par
116     fclose(ficheiro);\par
117     {\cf19 return} {\cf17 true};\par
118 \}\par
}
}
{\xe \v lerMeiosbin\:FMeiosMobilidade.c}
{\xe \v FMeiosMobilidade.c\:lerMeiosbin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MeiosLista} * lerMeiosbin ({\b MeiosLista} **  {\i listaMeios})}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o l\'EA os dados dos meios de mobilidade do ficheiro bin\'E1rio 1\'BA Abre o ficheiro bin\'E1rio para leitura 2\'BA Percorre o ficheiro e guarda os dados de cada meio na lista encadeada 3\'BA Fecha o ficheiro. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o l\'EA os dados dos meios de mobilidade do ficheiro bin\'E1rio 1\'BA Abre o ficheiro bin\'E1rio para leitura 2\'BA Percorre o ficheiro e guarda os dados de cada meio de mobilidade na lista encadeada 3\'BA Fecha o ficheiro.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lista} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 129                                                  \{\par
130     FILE* ficheiro = fopen({\cf22 "MeiosMobilidade.bin"}, {\cf22 "rb"});\par
131     {\cf19 if} (ficheiro == NULL) \{\par
132         {\cf19 return} 0;\par
133     \}\par
134     Meios novoMeio;\par
135     {\cf19 while} (fread(&novoMeio, {\cf17 sizeof}(Meios), 1, ficheiro) != 0) \{\par
136         *listaMeios = adicionarMeioListaOrdenado(*listaMeios, novoMeio);\par
137         \}\par
138     fclose(ficheiro);\par
139     {\cf19 return} listaMeios;\par
140 \}\par
}
}
{\xe \v lerMeiostxt\:FMeiosMobilidade.c}
{\xe \v FMeiosMobilidade.c\:lerMeiostxt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int lerMeiostxt ({\b MeiosLista} **  {\i listaMeiosMobilidade})}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para ler os dados dos meios de mobilidade do ficheiro txt 1\'BA L\'EA os dados de cada meio de mobilidade e envia para a fun\'E7\'E3o adicionarMeioMobilidadeLista que insere na lista encadeada 2\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarMeiosMobilidadebin. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para ler os dados dos meios de mobilidade do ficheiro txt 1\'BA L\'EA os dados de cada meio de mobilidade e envia para a fun\'E7\'E3o adicionarMeioLista que insere na lista encadeada 2\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarMeiosbin.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaMeiosMobilidade} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 25                                                    \{\par
26     FILE* ficheiro = fopen({\cf22 "MeiosMobilidade.txt"}, {\cf22 "r"});\par
27     {\cf19 if} (ficheiro == NULL) \{\par
28         {\cf19 return} 0;\par
29     \}\par
30     {\cf20 // L\'EA os dados de cada cliente e insere na lista encadeada}\par
31     {\cf18 char} linha[200];\par
32     {\cf19 while} (fgets(linha, 200, ficheiro) != NULL) \{\par
33         Meios novoMeio;\par
34         {\cf18 char} tipoMeio[20];\par
35         sscanf(linha, {\cf22 "%d;%[^;];%[^;];%d;%d"}, &novoMeio.id, tipoMeio, novoMeio.localizacao, &novoMeio.bateria, &novoMeio.status);\par
36 \par
37         {\cf19 if} (strcmp(tipoMeio, {\cf22 "Bicicleta"}) == 0) \{\par
38             novoMeio.tipo = Bicicleta;\par
39         \}\par
40         {\cf19 else} {\cf19 if} (strcmp(tipoMeio, {\cf22 "Carro"}) == 0) \{\par
41             novoMeio.tipo = Carro;\par
42         \}\par
43         {\cf19 else} {\cf19 if} (strcmp(tipoMeio, {\cf22 "Trotinete"}) == 0) \{\par
44             novoMeio.tipo = Trotinete;\par
45         \}\par
46         {\cf19 else} {\cf19 if} (strcmp(tipoMeio, {\cf22 "Autocarro"}) == 0) \{\par
47             novoMeio.tipo = Autocarro;\par
48         \}\par
49         {\cf19 else} \{\par
50             novoMeio.tipo = Outro;\par
51         \}\par
52 \par
53         novoMeio.autonomia = calcularAutonomia(&novoMeio);\par
54 \par
55         *listaMeiosMobilidade = adicionarMeioListaOrdenado(*listaMeiosMobilidade, novoMeio);\par
56     \}\par
57     fclose(ficheiro);\par
58     {\cf19 return} 1;\par
59 \}\par
}
}
{\xe \v ListarMeiosPorLocalizacao\:FMeiosMobilidade.c}
{\xe \v FMeiosMobilidade.c\:ListarMeiosPorLocalizacao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ListarMeiosPorLocalizacao ({\b MeiosLista} *  {\i mlista}, char *  {\i geocodigo}, {\b MeiosLista} **  {\i listaMeios})}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o serve para listar os meios de mobilidade por localiza\'E7\'E3o geogr\'E1fica, atrav\'E9s de um c\'F3digo geogr\'E1fico (geocode) 1\'BA Percorre a lista encadeada e compara o c\'F3digo geogr\'E1fico do meio com o c\'F3digo inserido pelo usu\'E1rio 2\'BA Adiciona o meio \'E0 lista de meios de mobilidade por localiza\'E7\'E3o 3\'BA Retorna a lista de meios de mobilidade por localiza\'E7\'E3o\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mlista} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i geocodigo} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaMeios} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 303                                                                                              \{\par
304     MeiosLista* meio = mlista;\par
305 \par
306     {\cf19 while} (meio != NULL) \{\par
307         {\cf19 if} (strcmp(meio->m.localizacao, geocodigo) == 0) \{\par
308             {\cf20 // O meio de mobilidade est\'E1 na localiza\'E7\'E3o desejada, adicione as informa\'E7\'F5es \'E0 lista}\par
309             MeiosLista* novoMeio = (MeiosLista*)malloc({\cf17 sizeof}(MeiosLista));\par
310             novoMeio->m.id = meio->m.id;\par
311             novoMeio->m.tipo = meio->m.tipo;\par
312             strcpy(novoMeio->m.localizacao, meio->m.localizacao);\par
313             novoMeio->m.bateria = meio->m.bateria;\par
314             novoMeio->m.status = meio->m.status;\par
315             novoMeio->m.autonomia = meio->m.autonomia;\par
316             novoMeio->next = NULL;\par
317 \par
318             {\cf20 // Verifica se a lista de meios est\'E1 vazia}\par
319             {\cf19 if} (*listaMeios == NULL) \{\par
320                 *listaMeios = novoMeio;\par
321             \}\par
322             {\cf19 else} \{\par
323                 {\cf20 // Encontra o \'FAltimo elemento da lista e adiciona o novo meio no final}\par
324                 MeiosLista* ultimo = *listaMeios;\par
325                 {\cf19 while} (ultimo->next != NULL) \{\par
326                     ultimo = ultimo->next;\par
327                 \}\par
328                 ultimo->next = novoMeio;\par
329             \}\par
330         \}\par
331         meio = meio->next;\par
332     \}\par
333 \}\par
}
}
{\xe \v MeioRemovidoEcra\:FMeiosMobilidade.c}
{\xe \v FMeiosMobilidade.c\:MeioRemovidoEcra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MeioRemovidoEcra ({\b MeiosLista} **  {\i listaMeios})}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 410                                                \{\par
411     {\cf18 int} id;\par
412     printf({\cf22 "Introduza o ID do meio que pretende remover: "});\par
413     scanf({\cf22 "%d"}, &{\cf18 id});\par
414     {\cf19 if} (RemoverMeio(listaMeios, {\cf18 id})) \{\par
415         {\cf19 return} {\cf17 true};\par
416     \}\par
417     {\cf19 else} \{\par
418         {\cf19 return} {\cf17 false};\par
419     \}\par
420 \}\par
}
}
{\xe \v ModificarDadoMeioMobilidade\:FMeiosMobilidade.c}
{\xe \v FMeiosMobilidade.c\:ModificarDadoMeioMobilidade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ModificarDadoMeioMobilidade ({\b MeiosLista} *  {\i listaMeios}, int  {\i id}, int  {\i campo})}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 422                                                                             \{\par
423     Meios* meio = procurarMeioPorId(listaMeios, {\cf18 id});\par
424 \par
425     {\cf19 if} (meio == NULL) \{\par
426         {\cf19 return} {\cf17 false};\par
427     \}\par
428 \par
429     {\cf19 switch} (campo) \{\par
430     {\cf19 case} 1:\par
431         printf({\cf22 "Novo Tipo (0 - Bicicleta, 1 - Carro, 2 - Trotinete, 3 - Autocarro, 4 - Outro): "});\par
432         {\cf18 int} novoTipo;\par
433         scanf({\cf22 "%d"}, &novoTipo);\par
434         meio->tipo = novoTipo;\par
435         {\cf19 break};\par
436     {\cf19 case} 2:\par
437         printf({\cf22 "Nova Localizacao: "});\par
438         scanf({\cf22 "%s"}, meio->localizacao);\par
439         {\cf19 break};\par
440     {\cf19 case} 3:\par
441         printf({\cf22 "Nova Bateria: "});\par
442         scanf({\cf22 "%d"}, &meio->bateria);\par
443         {\cf19 break};\par
444     {\cf19 case} 4:\par
445         printf({\cf22 "Novo Status (0 - Inativo, 1 - Ativo): "});\par
446         {\cf18 int} novoStatus;\par
447         scanf({\cf22 "%d"}, &novoStatus);\par
448         meio->status = novoStatus;\par
449         {\cf19 break};\par
450     {\cf19 default}:\par
451         printf({\cf22 "Campo inv\'E1lido.\\n"});\par
452         {\cf19 break};\par
453     \}\par
454     {\cf19 return} {\cf17 true};\par
455 \}\par
}
}
{\xe \v ModificarMeioMobilidade\:FMeiosMobilidade.c}
{\xe \v FMeiosMobilidade.c\:ModificarMeioMobilidade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ModificarMeioMobilidade ({\b MeiosLista} *  {\i listaMeios}, int  {\i id}, int  {\i campo})}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o modifica um dado de um meio de mobilidade 1\'BA Procura o meio de mobilidade na lista de meios por id 2\'BA Modifica o dado do meio de mobilidade\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaMeios} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i id} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i campo} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 235                                                                         \{\par
236     {\cf18 bool} sucesso = {\cf17 false};\par
237 \par
238     sucesso = ModificarDadoMeioMobilidade(listaMeios, {\cf18 id}, campo);\par
239 \par
240     {\cf19 return} sucesso;\par
241 \}\par
}
}
{\xe \v mostrarMeios\:FMeiosMobilidade.c}
{\xe \v FMeiosMobilidade.c\:mostrarMeios}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mostrarMeios ({\b MeiosLista} *  {\i lista})}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 338                                      \{\par
339     printf({\cf22 "Lista de meios de mobilidade:\\n\\n"});\par
340     {\cf19 while} (lista != NULL) \{\par
341         printf({\cf22 "ID: %d\\n"}, lista->m.id);\par
342         printf({\cf22 "Tipo: "});\par
343         {\cf19 switch} (lista->m.tipo) \{\par
344         {\cf19 case} Bicicleta:\par
345             printf({\cf22 "Bicicleta\\n"});\par
346             {\cf19 break};\par
347         {\cf19 case} Carro:\par
348             printf({\cf22 "Carro\\n"});\par
349             {\cf19 break};\par
350         {\cf19 case} Trotinete:\par
351             printf({\cf22 "Trotinete\\n"});\par
352             {\cf19 break};\par
353         {\cf19 case} Autocarro:\par
354             printf({\cf22 "Autocarro\\n"});\par
355             {\cf19 break};\par
356         {\cf19 case} Outro:\par
357             printf({\cf22 "Outro\\n"});\par
358             {\cf19 break};\par
359         {\cf19 default}:\par
360             printf({\cf22 "Desconhecido\\n"});\par
361             {\cf19 break};\par
362         \}\par
363         printf({\cf22 "Localizacao: %s\\n"}, lista->m.localizacao);\par
364         printf({\cf22 "Bateria: %d\\n"}, lista->m.bateria);\par
365         printf({\cf22 "Autonomia: %d\\n"}, lista->m.autonomia);\par
366         printf({\cf22 "Status: %d\\n"}, lista->m.status);\par
367         printf({\cf22 "\\n"});\par
368         lista = lista->next;\par
369     \}\par
370 \}\par
}
}
{\xe \v obterDadosMeiosEcra\:FMeiosMobilidade.c}
{\xe \v FMeiosMobilidade.c\:obterDadosMeiosEcra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Meios} * obterDadosMeiosEcra ({\b Meios} *  {\i m})}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 372                                      \{\par
373     {\cf18 int} x = 0;\par
374     printf({\cf22 "ID: "});\par
375     scanf({\cf22 "%d"}, &m->id);\par
376     printf({\cf22 "Tipo (0 - Bicicleta, 1 - Carro, 2 - Trotinete, 3 - Autocarro, 4 - Outro): "});\par
377     scanf({\cf22 "%d"}, &x);\par
378     {\cf19 switch} (x) \{\par
379     {\cf19 case} 0:\par
380         m->tipo = Bicicleta;\par
381         {\cf19 break};\par
382     {\cf19 case} 1:\par
383         m->tipo = Carro;\par
384         {\cf19 break};\par
385     {\cf19 case} 2:\par
386         m->tipo = Trotinete;\par
387         {\cf19 break};\par
388     {\cf19 case} 3:\par
389         m->tipo = Autocarro;\par
390         {\cf19 break};\par
391     {\cf19 case} 4:\par
392         m->tipo = Outro;\par
393         {\cf19 break};\par
394     {\cf19 default}:\par
395         {\cf19 break};\par
396     \}\par
397 \par
398     m->autonomia = calcularAutonomia(m);\par
399 \par
400     printf({\cf22 "Localizacao: "});\par
401     scanf({\cf22 "%s"}, m->localizacao);\par
402     printf({\cf22 "Bateria: "});\par
403     scanf({\cf22 "%d"}, &m->bateria);\par
404     printf({\cf22 "Status (0 - Inativo, 1 - Ativo): "});\par
405     scanf({\cf22 "%d"}, &m->status);\par
406     {\cf19 return} m;\par
407 \}\par
}
}
{\xe \v procurarMeioPorId\:FMeiosMobilidade.c}
{\xe \v FMeiosMobilidade.c\:procurarMeioPorId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Meios} * procurarMeioPorId ({\b MeiosLista} *  {\i listaMeios}, int  {\i id})}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o procura um meio de mobilidade na lista de meios por id 1\'BA Percorre a lista encadeada e compara o id do meio com o id inserido pelo usu\'E1rio 2\'BA Retorna o meio se for encontrado\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaMeios} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i id} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 213                                                          \{\par
214     MeiosLista* current = listaMeios;\par
215     {\cf19 while} (current != NULL) \{\par
216         {\cf19 if} (current->m.id == {\cf18 id}) \{\par
217             {\cf19 return} &(current->m);\par
218         \}\par
219         current = current->next;\par
220     \}\par
221     {\cf19 return} NULL;  {\cf20 // Retorna NULL se o meio de mobilidade n\'E3o for encontrado}\par
222 \}\par
}
}
{\xe \v RemoverMeio\:FMeiosMobilidade.c}
{\xe \v FMeiosMobilidade.c\:RemoverMeio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool RemoverMeio ({\b MeiosLista} **  {\i listaMeios}, int  {\i id})}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o remove um meio da lista de gestores 1\'BA Procura pelo meio com o id correspondente na lista encadeada 2\'BA Remove o meio da lista encadeada 3\'BA Atualiza o arquivo bin\'E1rio com a lista atualizada chamando a fun\'E7\'E3o guardarGestoresbin. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i $PARAMS} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 171                                                   \{\par
172     {\cf19 if} (listaMeios == NULL) \{\par
173         {\cf19 return} {\cf17 false};\par
174     \}\par
175     MeiosLista* meioAtual = *listaMeios;\par
176     MeiosLista* meioAnterior = NULL;\par
177     {\cf18 bool} encontrado = {\cf17 false};\par
178     {\cf20 // Procura pelo cliente com o id correspondente na lista encadeada}\par
179     {\cf19 while} (meioAtual != NULL) \{\par
180         {\cf19 if} (meioAtual->m.id == {\cf18 id}) \{\par
181             encontrado = {\cf17 true};\par
182             {\cf19 break};\par
183         \}\par
184         meioAnterior = meioAtual;\par
185         meioAtual = meioAtual->next;\par
186     \}\par
187     {\cf19 if} (!encontrado) \{\par
188         {\cf19 return} {\cf17 false};\par
189     \}\par
190     {\cf20 // Remove o meio da lista encadeada}\par
191     {\cf19 if} (meioAnterior == NULL) \{\par
192         *listaMeios = meioAtual->next;\par
193     \}\par
194     {\cf19 else}\par
195     \{\par
196         meioAnterior->next = meioAtual->next;\par
197     \}\par
198     \par
199     {\cf19 return} {\cf17 true};\par
200 \par
201 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro EDA-Projeto/Gestores.h\par \pard\plain 
{\tc\tcl2 \v EDA-Projeto/Gestores.h}
{\xe \v EDA-Projeto/Gestores.h}
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ficheiro header dos gestores. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdbool.h>}\par
{\f2 #include <stdlib.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Gestores}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b GestoresLista}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b _CTR_SECURE_NO_WARNINGS}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Gestorsh}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es de tipos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Gestores} {\b Gestores}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b GestoresLista} {\b GestoresLista}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lerGestorestxt} ({\b GestoresLista} **listaGestores)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para ler os dados dos gestores do ficheiro txt 1\'BA L\'EA os dados de cada gestor e envia para a fun\'E7\'E3o adicionarGestorLista que insere na lista encadeada 2\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarGestoresbin. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GestoresLista} * {\b adicionarGestorLista} ({\b GestoresLista} *lista, {\b Gestores} c)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insere {\b Gestores} no incio de uma lista encadeada 1\'BA Cria um novo n\'F3 com os dados do gestor 2\'BA Insere o novo n\'F3 no inicio da lista 3\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarGestoresbin. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b guardarGestoresbin} ({\b GestoresLista} *lista)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o guarda a lista de gestores no ficheiro bin\'E1rio 1\'BA Abre o ficheiro bin\'E1rio para escrita 2\'BA Percorre a lista encadeada e guarda os dados de cada gestor no ficheiro 3\'BA Fecha o ficheiro. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GestoresLista} * {\b lerGestoresbin} ({\b GestoresLista} **listaGestores)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o l\'EA os dados dos gestores do ficheiro bin\'E1rio 1\'BA Abre o ficheiro bin\'E1rio para leitura 2\'BA Percorre o ficheiro e guarda os dados de cada gestor na lista encadeada 3\'BA Fecha o ficheiro. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b adicionarNovoGestor} ({\b GestoresLista} **listaGestor)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o adiciona um novo gestor \'E0 lista de gestores 1\'BA Cria um novo gestor com os dados inseridos pelo usu\'E1rio 2\'BA Adiciona o novo gestor \'E0 lista chamando a fun\'E7\'E3o adicionarGestorLista 3\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarGestorbin. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b RemoverGestor} ({\b GestoresLista} **listaGestor, int id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GestoresLista} * {\b procurarGestorPorId} ({\b GestoresLista} *listaGestores, int id)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o procura um gestor na lista de gestores 1\'BA Percorre a lista encadeada e procura pelo gestor com o ID correspondente 2\'BA Retorna o gestor encontrado 3\'BA Se n\'E3o encontrar o gestor retorna NULL. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ModificaGestor} ({\b GestoresLista} *listaGestores, int id, int campo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DestruirListaG} ({\b GestoresLista} *lista)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gestores} * {\b obterDadosGestorEcra} ({\b Gestores} *c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mostrarGestores} ({\b GestoresLista} *lista)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b gestorRemovidoEcra} ({\b GestoresLista} **listaGestor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ModificarDadoGestor} ({\b GestoresLista} *listaGestores, int id, int campo)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ficheiro header dos gestores. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
March 2023 \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das macros\par
\pard\plain 
{\xe \v _CTR_SECURE_NO_WARNINGS\:Gestores.h}
{\xe \v Gestores.h\:_CTR_SECURE_NO_WARNINGS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define _CTR_SECURE_NO_WARNINGS}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Gestorsh\:Gestores.h}
{\xe \v Gestores.h\:Gestorsh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Gestorsh}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos tipos\par
\pard\plain 
{\xe \v Gestores\:Gestores.h}
{\xe \v Gestores.h\:Gestores}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Gestores} {\b Gestores}}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GestoresLista\:Gestores.h}
{\xe \v Gestores.h\:GestoresLista}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b GestoresLista} {\b GestoresLista}}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v adicionarGestorLista\:Gestores.h}
{\xe \v Gestores.h\:adicionarGestorLista}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GestoresLista} * adicionarGestorLista ({\b GestoresLista} *  {\i lista}, {\b Gestores}  {\i g})}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insere {\b Gestores} no incio de uma lista encadeada 1\'BA Cria um novo n\'F3 com os dados do gestor 2\'BA Insere o novo n\'F3 no inicio da lista 3\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarGestoresbin. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i recebe} \cell }{uma lista e um gestor para o inserir na lista \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
retorna a lista atualizada \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 46                                                                       \{\par
47     GestoresLista* novo = (GestoresLista*)malloc({\cf17 sizeof}(GestoresLista));\par
48     {\cf19 if} (novo == NULL) {\cf19 return} NULL;\par
49     novo->g = g;\par
50     novo->next = NULL;\par
51 \par
52     {\cf20 // Verifica se a lista est\'E1 vazia ou se o novo gestor tem o menor ID}\par
53     {\cf19 if} (lista == NULL || g.id < lista->g.id) \{\par
54         novo->next = lista;\par
55         {\cf19 return} novo;\par
56     \}\par
57 \par
58     {\cf20 // Encontra a posi\'E7\'E3o correta para inserir o novo gestor na lista ordenada}\par
59     GestoresLista* anterior = lista;\par
60     GestoresLista* atual = lista->next;\par
61     {\cf19 while} (atual != NULL && atual->g.id < g.id) \{\par
62         anterior = atual;\par
63         atual = atual->next;\par
64     \}\par
65 \par
66     novo->next = atual;\par
67     anterior->next = novo;\par
68 \par
69     {\cf19 return} lista;\par
70 \}\par
}
}
{\xe \v adicionarNovoGestor\:Gestores.h}
{\xe \v Gestores.h\:adicionarNovoGestor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool adicionarNovoGestor ({\b GestoresLista} **  {\i listaGestor})}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o adiciona um novo gestor \'E0 lista de gestores 1\'BA Cria um novo gestor com os dados inseridos pelo usu\'E1rio 2\'BA Adiciona o novo gestor \'E0 lista chamando a fun\'E7\'E3o adicionarGestorLista 3\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarGestorbin. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i $PARAMS} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i $PARAMS} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 130                                                       \{\par
131     Gestores novoGestor;\par
132     obterDadosGestorEcra(&novoGestor);\par
133 \par
134     *listaGestor = adicionarGestorLista(*listaGestor, novoGestor);\par
135     \par
136     guardarGestoresbin(*listaGestor);\par
137     {\cf19 return} {\cf17 true};\par
138 \}\par
}
}
{\xe \v DestruirListaG\:Gestores.h}
{\xe \v Gestores.h\:DestruirListaG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DestruirListaG ({\b GestoresLista} *  {\i lista})}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o destroi a lista de gestores 1\'BA Percorre a lista encadeada e destroi cada n\'F3 2\'BA Liberta a mem\'F3ria alocada para a lista\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lista} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 242                                           \{\par
243     GestoresLista* atual = lista;\par
244     {\cf19 while} (atual != NULL) \{\par
245         GestoresLista* proximo = atual->next;\par
246         free(atual);\par
247         atual = proximo;\par
248     \}\par
249 \}\par
}
}
{\xe \v gestorRemovidoEcra\:Gestores.h}
{\xe \v Gestores.h\:gestorRemovidoEcra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool gestorRemovidoEcra ({\b GestoresLista} **  {\i listaGestor})}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 255                                                      \{\par
256     {\cf18 int} id;\par
257     printf({\cf22 "ID do gestor a remover: "});\par
258     scanf({\cf22 "%d"}, &{\cf18 id});\par
259     {\cf19 if} (RemoverGestor(listaGestor, {\cf18 id})) \{\par
260         printf({\cf22 "Gestor removido com sucesso.\\n"});\par
261     \}\par
262     {\cf19 else} \{\par
263         printf({\cf22 "N\'E3o foi encontrado nenhum gestor com o ID %d.\\n"}, {\cf18 id});\par
264     \}\par
265 \}\par
}
}
{\xe \v guardarGestoresbin\:Gestores.h}
{\xe \v Gestores.h\:guardarGestoresbin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool guardarGestoresbin ({\b GestoresLista} *  {\i lista})}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o guarda a lista de gestores no ficheiro bin\'E1rio 1\'BA Abre o ficheiro bin\'E1rio para escrita 2\'BA Percorre a lista encadeada e guarda os dados de cada gestor no ficheiro 3\'BA Fecha o ficheiro. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lista} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 82                                               \{\par
83     FILE* ficheiro = fopen({\cf22 "Gestores.bin"},{\cf22 "wb"});\par
84     {\cf19 if} (ficheiro == NULL) \{\par
85         {\cf19 return} {\cf17 false};\par
86     \}\par
87     {\cf19 while} (lista != NULL) \{\par
88         fwrite(&lista->g, {\cf17 sizeof}(Gestores), 1, ficheiro);\par
89         lista = lista->next;\par
90     \}\par
91     fclose(ficheiro);\par
92     {\cf19 return} {\cf17 true};\par
93 \par
94 \}\par
}
}
{\xe \v lerGestoresbin\:Gestores.h}
{\xe \v Gestores.h\:lerGestoresbin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GestoresLista} * lerGestoresbin ({\b GestoresLista} **  {\i listaGestores})}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o l\'EA os dados dos gestores do ficheiro bin\'E1rio 1\'BA Abre o ficheiro bin\'E1rio para leitura 2\'BA Percorre o ficheiro e guarda os dados de cada gestor na lista encadeada 3\'BA Fecha o ficheiro. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lista} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 106                                                              \{\par
107     FILE* ficheiro = fopen({\cf22 "Gestores.bin"}, {\cf22 "rb"});\par
108     {\cf19 if} (ficheiro == NULL) \{\par
109         {\cf19 return} 0;\par
110     \}\par
111     Gestores novoGestor;\par
112     {\cf19 while} (fread(&novoGestor, {\cf17 sizeof}(Gestores), 1, ficheiro) != 0) \{\par
113         *listaGestores = adicionarGestorLista(*listaGestores, novoGestor);\par
114     \}\par
115     fclose(ficheiro);\par
116     {\cf19 return} listaGestores;\par
117 \}\par
}
}
{\xe \v lerGestorestxt\:Gestores.h}
{\xe \v Gestores.h\:lerGestorestxt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int lerGestorestxt ({\b GestoresLista} **  {\i listaGestores})}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para ler os dados dos gestores do ficheiro txt 1\'BA L\'EA os dados de cada gestor e envia para a fun\'E7\'E3o adicionarGestorLista que insere na lista encadeada 2\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarGestoresbin. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaGestores} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 19                                                   \{\par
20     FILE* ficheiro = fopen({\cf22 "Gestores.txt"}, {\cf22 "r"});\par
21     {\cf19 if} (ficheiro == NULL) \{\par
22         {\cf19 return} 0;\par
23     \}\par
24     {\cf20 // L\'EA os dados de cada cliente e insere na lista encadeada}\par
25     {\cf18 char} linha[100];\par
26     {\cf19 while} (fgets(linha, 200, ficheiro) != NULL) \{\par
27         Gestores novoGestor;\par
28         sscanf(linha, {\cf22 "%d;%[^;];%[^;];%[^;]"}, &novoGestor.id, novoGestor.nome, novoGestor.email, novoGestor.password);\par
29         *listaGestores = adicionarGestorLista(*listaGestores, novoGestor);\par
30                 guardarGestoresbin(*listaGestores);\par
31         \}\par
32         fclose(ficheiro);\par
33     {\cf19 return} 1;\par
34 \}\par
}
}
{\xe \v ModificaGestor\:Gestores.h}
{\xe \v Gestores.h\:ModificaGestor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ModificaGestor ({\b GestoresLista} *  {\i listaGestores}, int  {\i id}, int  {\i campo})}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o modifica um dado de um gestor 1\'BA Procura pelo gestor com o ID correspondente na lista encadeada 2\'BA Modifica o dado do gestor\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaGestores} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i id} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i campo} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 224                                                                      \{\par
225     {\cf18 bool} sucesso = {\cf17 false};\par
226 \par
227     sucesso = ModificarDadoGestor(listaGestores, {\cf18 id}, campo);\par
228 \par
229     {\cf19 return} sucesso;\par
230 \}\par
}
}
{\xe \v ModificarDadoGestor\:Gestores.h}
{\xe \v Gestores.h\:ModificarDadoGestor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ModificarDadoGestor ({\b GestoresLista} *  {\i listaGestores}, int  {\i id}, int  {\i campo})}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 292                                                                           \{\par
293     GestoresLista* gestor = procurarGestorPorId(listaGestores, {\cf18 id});\par
294 \par
295     {\cf19 if} (gestor == NULL) \{\par
296         {\cf19 return} {\cf17 false};\par
297     \}\par
298 \par
299     {\cf19 switch} (campo) \{\par
300     {\cf19 case} 1:\par
301         printf({\cf22 "Novo Nome: "});\par
302         scanf({\cf22 "%s"}, gestor->g.nome);\par
303         {\cf19 break};\par
304     {\cf19 case} 2:\par
305         printf({\cf22 "Novo Email: "});\par
306         scanf({\cf22 "%s"}, gestor->g.email);\par
307         {\cf19 break};\par
308     {\cf19 case} 3:\par
309         printf({\cf22 "Nova Senha: "});\par
310         scanf({\cf22 "%s"}, gestor->g.password);\par
311         {\cf19 break};\par
312     {\cf19 default}:\par
313         printf({\cf22 "Campo inv\'E1lido.\\n"});\par
314         {\cf19 break};\par
315     \}\par
316     {\cf19 return} {\cf17 true};\par
317 \}\par
}
}
{\xe \v mostrarGestores\:Gestores.h}
{\xe \v Gestores.h\:mostrarGestores}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mostrarGestores ({\b GestoresLista} *  {\i lista})}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 281                                            \{\par
282     printf({\cf22 "Lista de Gestores:\\n\\n"});\par
283     {\cf19 while} (lista != NULL) \{\par
284         printf({\cf22 "ID: %d\\n"}, lista->g.id);\par
285         printf({\cf22 "Nome: %s\\n"}, lista->g.nome);\par
286         printf({\cf22 "Email: %s\\n"}, lista->g.email);\par
287         printf({\cf22 "\\n"});\par
288         lista = lista->next;\par
289     \}\par
290 \}\par
}
}
{\xe \v obterDadosGestorEcra\:Gestores.h}
{\xe \v Gestores.h\:obterDadosGestorEcra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gestores} * obterDadosGestorEcra ({\b Gestores} *  {\i c})}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 268                                             \{\par
269     printf({\cf22 "ID: "});\par
270     scanf({\cf22 "%d"}, &g->id);\par
271     printf({\cf22 "Nome: "});\par
272     scanf({\cf22 "%s"}, g->nome);\par
273     printf({\cf22 "Email: "});\par
274     scanf({\cf22 "%s"}, g->email);\par
275     printf({\cf22 "Password: "});\par
276     scanf({\cf22 "%s"}, g->password);\par
277     {\cf19 return} g;\par
278 \}\par
}
}
{\xe \v procurarGestorPorId\:Gestores.h}
{\xe \v Gestores.h\:procurarGestorPorId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GestoresLista} * procurarGestorPorId ({\b GestoresLista} *  {\i listaGestores}, int  {\i id})}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o procura um gestor na lista de gestores 1\'BA Percorre a lista encadeada e procura pelo gestor com o ID correspondente 2\'BA Retorna o gestor encontrado 3\'BA Se n\'E3o encontrar o gestor retorna NULL. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaGestores} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i id} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
GestoresLista* ou NULL \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaGestores} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i id} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
GestoresLista* ou NULL \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 194                                                                          \{\par
195     GestoresLista* atual = listaGestores;\par
196 \par
197     {\cf19 while} (atual != NULL) \{\par
198         {\cf19 if} (atual->g.id == {\cf18 id}) \{\par
199             {\cf19 return} atual;\par
200         \}\par
201         {\cf19 else} {\cf19 if} (atual->g.id > {\cf18 id}) \{\par
202             {\cf20 // O ID atual \'E9 maior que o ID procurado,}\par
203             {\cf20 // ent\'E3o n\'E3o h\'E1 necessidade de continuar a busca.}\par
204             {\cf19 return} NULL;\par
205         \}\par
206         atual = atual->next;\par
207     \}\par
208 \par
209     {\cf20 // O gestor com o ID procurado n\'E3o foi encontrado.}\par
210     {\cf19 return} NULL;\par
211 \}\par
}
}
{\xe \v RemoverGestor\:Gestores.h}
{\xe \v Gestores.h\:RemoverGestor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool RemoverGestor ({\b GestoresLista} **  {\i listaGestor}, int  {\i id})}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 152                                                         \{\par
153     GestoresLista* gestorAtual = *listaGestor;\par
154     GestoresLista* gestorAnterior = NULL;\par
155     {\cf18 bool} encontrado = {\cf17 false};\par
156     {\cf20 // Procura pelo gestor com o id correspondente na lista encadeada}\par
157     {\cf19 while} (gestorAtual != NULL) \{\par
158         {\cf19 if} (gestorAtual->g.id == {\cf18 id}) \{\par
159             encontrado = {\cf17 true};\par
160             {\cf19 break};\par
161         \}\par
162         gestorAnterior = gestorAtual;\par
163         gestorAtual = gestorAtual->next;\par
164     \}\par
165     {\cf19 if} (encontrado) \{\par
166         {\cf19 if} (gestorAnterior == NULL) \{\par
167             *listaGestor = gestorAtual->next;\par
168         \}\par
169         {\cf19 else} \{\par
170             gestorAnterior->next = gestorAtual->next;\par
171         \}\par
172         free(gestorAtual);\par
173         guardarGestoresbin(*listaGestor);\par
174         {\cf19 return} {\cf17 true};\par
175     \}\par
176     {\cf19 else} \{\par
177         {\cf19 return} {\cf17 false};\par
178     \}\par
179 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Gestores.h\par \pard\plain 
{\tc\tcl2 \v EDA-Projeto/Gestores.h}
{\xe \v EDA-Projeto/Gestores.h}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Ir para a documenta\'E7\'E3o deste ficheiro.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*****************************************************************/}\par
9 {\cf21 #pragma once}\par
10 {\cf21 #pragma warning (disable: 4996)}\par
11 {\cf21 #include <stdio.h>}\par
12 {\cf21 #include <stdbool.h>}\par
13 {\cf21 #include <stdlib.h>}\par
14 {\cf21 #define _CTR_SECURE_NO_WARNINGS}\par
15 \par
16 {\cf21 #ifndef Gestorsh}\par
17 {\cf21 #define Gestorsh}\par
18 \par
19 {\cf17 typedef} {\cf17 struct }Gestores \{\par
20     {\cf18 int} id;\par
21     {\cf18 char} nome[20];\par
22     {\cf18 char} email[50];\par
23     {\cf18 char} password[15];\par
24 \}Gestores;\par
25 \par
26 {\cf17 typedef} {\cf17 struct }GestoresLista \{\par
27     Gestores g;\par
28     {\cf17 struct }GestoresLista* next;\par
29 \}GestoresLista;\par
30 \par
39 {\cf18 int} lerGestorestxt(GestoresLista** listaGestores);\par
40 \par
51 GestoresLista* adicionarGestorLista(GestoresLista* lista, Gestores c);\par
52 \par
62 {\cf18 bool} guardarGestoresbin(GestoresLista* lista);\par
63 \par
73 GestoresLista* lerGestoresbin(GestoresLista** listaGestores);\par
74 \par
75 \par
86 {\cf18 bool} adicionarNovoGestor(GestoresLista** listaGestor);\par
87 \par
88 \par
89 {\cf20 /*}\par
90 {\cf20 * \\brief  Esta fun\'E7\'E3o remove um cliente da lista de clientes}\par
91 {\cf20 * 1\'BA Procura pelo cliente com o NIF correspondente na lista encadeada}\par
92 {\cf20 * 2\'BA Remove o cliente da lista encadeada}\par
93 {\cf20 * 3\'BA Atualiza o arquivo bin\'E1rio com a lista atualizada chamando a fun\'E7\'E3o guardarClientesbin}\par
94 {\cf20  *}\par
95 {\cf20  * \\param listaClientes}\par
96 {\cf20  * \\param nif}\par
97 {\cf20  * @author Alexandre Marques}\par
98 {\cf20  */}\par
99 \par
100 \par
101 {\cf18 bool} RemoverGestor(GestoresLista** listaGestor, {\cf18 int} {\cf18 id});\par
102 \par
116 GestoresLista* procurarGestorPorId(GestoresLista* listaGestores, {\cf18 int} {\cf18 id});\par
117 \par
129 {\cf18 bool} ModificaGestor(GestoresLista* listaGestores, {\cf18 int} {\cf18 id}, {\cf18 int} campo);\par
130 \par
140 {\cf18 void} DestruirListaG(GestoresLista* lista);\par
141 \par
142 {\cf21 #pragma region Ecra}\par
143 \par
144 \par
145 Gestores* obterDadosGestorEcra(Gestores* c);\par
146 \par
147 {\cf18 void} mostrarGestores(GestoresLista* lista);\par
148 \par
149 {\cf18 bool} gestorRemovidoEcra(GestoresLista** listaGestor);\par
150 \par
151 {\cf18 bool} ModificarDadoGestor(GestoresLista* listaGestores, {\cf18 int} {\cf18 id}, {\cf18 int} campo);\par
152 \par
153 {\cf21 #pragma endregion}\par
154 \par
155 \par
156 \par
157 {\cf21 #endif }{\cf20 // !Gestorsh}\par
158 \par
159 \par
160 \par
161 \par
162 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro EDA-Projeto/Grafos.c\par \pard\plain 
{\tc\tcl2 \v EDA-Projeto/Grafos.c}
{\xe \v EDA-Projeto/Grafos.c}
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desenvolvimento do grafo. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Grafos.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vertice} * {\b CriaGrafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vertice} * {\b CriaVertice} (char *cidade, int id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vertice} * {\b InsereVertice} ({\b Vertice} *g, {\b Vertice} *novo, bool *res)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Adj} * {\b CriaAdj} (int id, int dist)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Adj} * {\b InsereAdj} ({\b Adj} *g, {\b Adj} *novo, bool *res)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vertice} * {\b ProcuraVertice} ({\b Vertice} *g, int id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ConverterNomeParaID} ({\b Vertice} *g, char *nome)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vertice} * {\b AdicionaAdjacente} ({\b Vertice} *g, int idOrigem, int idDestino, int dist)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b GuardarGrafoBin} ({\b Vertice} *h, char *fileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b GuardarAdjBin} ({\b Adj} *h, char *fileName, int codVerticeOrigem)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vertice} * {\b LerGrafoBin} ({\b Vertice} *h, char *fileName, bool *res)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vertice} * {\b LerAdjBin} ({\b Vertice} *g, bool *res)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b DepthFirstSearchRecursivo} ({\b Vertice} *g, int origem, int dest)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b CalculaDistancia} ({\b Vertice} *g, int origem, int dest)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vertice} * {\b DestruirGrafo} ({\b Vertice} *g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Adj} * {\b DestruirAdjacencia} ({\b Adj} *h)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MostraAdjacencias} ({\b Adj} *h)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MostraGrafo} ({\b Vertice} *g)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desenvolvimento do grafo. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Utilizador Alexandre Marques \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
May 2023 \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v AdicionaAdjacente\:Grafos.c}
{\xe \v Grafos.c\:AdicionaAdjacente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vertice} * AdicionaAdjacente ({\b Vertice} *  {\i g}, int  {\i idOrigem}, int  {\i idDestino}, int  {\i dist})}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o serve para adicionar um adjacente 1\'BA passo: procurar o vertice de origem 2\'BA passo: procurar o vertice de destino 3\'BA passo: criar um novo adjacente 4\'BA passo: inserir o novo adjacente na lista de adjacente 5\'BA passo: retornar o grafo\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i g} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i idOrigem} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i idDestino} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dist} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 198                                                                               \{\par
199     Vertice* origem = ProcuraVertice(g, idOrigem);\par
200     Vertice* destino = ProcuraVertice(g, idDestino);\par
201     {\cf19 if} (origem == NULL || destino == NULL) {\cf19 return} g;\par
202     {\cf18 bool} res = {\cf17 false};\par
203     Adj* novo = CriaAdj(idDestino, dist);\par
204     origem->adjacentes = InsereAdj(origem->adjacentes, novo, &res);\par
205     {\cf19 return} g;\par
206 \}\par
}
}
{\xe \v CalculaDistancia\:Grafos.c}
{\xe \v Grafos.c\:CalculaDistancia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CalculaDistancia ({\b Vertice} *  {\i g}, int  {\i origem}, int  {\i dest})}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o calcula a dist\'E2ncia entre dois v\'E9rtices em um grafo. 1\'BA passo: verificar se o grafo est\'E1 vazio 2\'BA passo: verificar se o v\'E9rtice de origem e o v\'E9rtice s\'E3o iguais 3\'BA passo: marcar o v\'E9rtice de origem como visitado 4\'BA passo: inicializar um array para armazenar as dist\'E2ncias 5\'BA passo: percorrer a lista de adjacentes do v\'E9rtice de origem 6\'BA passo: Uma fila \'E9 inicializada para armazenar os v\'E9rtices a serem visitados 7\'BA passo: enquanto a fila n\'E3o estiver vazia, o primeiro elemento da fila \'E9 removido 8\'BA passo: percorrer a lista de adjacentes do v\'E9rtice removido 9\'BA passo: verificar se o v\'E9rtice adjacente j\'E1 foi visitado 10\'BA passo: se o v\'E9rtice adjacente n\'E3o foi visitado, marcar o v\'E9rtice adjacente como visitado 11\'BA passo: adicionar o v\'E9rtice adjacente \'E0 fila 12\'BA passo: se o v\'E9rtice adjacente for igual ao v\'E9rtice de destino, retornar a dist\'E2ncia 13\'BA passo: se o v\'E9rtice adjacente for diferente do v\'E9rtice de destino, adicionar a dist\'E2ncia ao array 14\'BA passo: se o array n\'E3o estiver vazio, retornar a menor dist\'E2ncia 15\'BA passo: se o array estiver vazio, retornar -1\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i g} \cell }{Ponteiro para o primeiro v\'E9rtice do grafo \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i origem} \cell }{Valor do v\'E9rtice de origem \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dest} \cell }{Valor do v\'E9rtice de destino \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna a dist\'E2ncia entre os v\'E9rtices origem e destino. Se n\'E3o houver um caminho, retorna -1. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 411                                                        \{\par
412     {\cf20 // Verifica se o grafo est\'E1 vazio}\par
413     {\cf19 if} (g == NULL)\par
414         {\cf19 return} -1;\par
415 \par
416     {\cf20 // Verifica se o v\'E9rtice de origem e o v\'E9rtice de destino s\'E3o iguais}\par
417     {\cf19 if} (origem == dest)\par
418         {\cf19 return} 0;\par
419 \par
420     {\cf20 // Marca o v\'E9rtice de origem como visitado}\par
421     Vertice* verticeAtual = ProcuraVertice(g, origem);\par
422     verticeAtual->visitado = {\cf17 true};\par
423 \par
424     {\cf20 // Inicializa um array para armazenar as dist\'E2ncias}\par
425     {\cf18 int}* distancias = ({\cf18 int}*)malloc({\cf17 sizeof}({\cf18 int}) * 100); {\cf20 // Tamanho m\'E1ximo do array}\par
426     {\cf19 for} ({\cf18 int} i = 0; i < 100; i++) \{\par
427         distancias[i] = INT_MAX;\par
428     \}\par
429     distancias[verticeAtual->id] = 0;\par
430 \par
431     {\cf20 // Fila para armazenar os v\'E9rtices a serem visitados}\par
432     Vertice** fila = (Vertice**)malloc({\cf17 sizeof}(Vertice*) * 100); {\cf20 // Tamanho m\'E1ximo da fila}\par
433     {\cf18 int} frente = 0;\par
434     {\cf18 int} tras = 0;\par
435     fila[tras++] = verticeAtual;\par
436 \par
437     {\cf20 // Executa o algoritmo de busca em largura}\par
438     {\cf19 while} (frente != tras) \{\par
439         {\cf20 // Remove o v\'E9rtice da frente da fila e considera como v\'E9rtice atual}\par
440         Vertice* v = fila[frente++];\par
441         Adj* adjacente = v->adjacentes;\par
442 \par
443         {\cf20 // Explora os v\'E9rtices adjacentes do v\'E9rtice atual}\par
444         {\cf19 while} (adjacente != NULL) \{\par
445             Vertice* adjacenteVertice = ProcuraVertice(g, adjacente->id);\par
446 \par
447             {\cf20 // Verifica se o v\'E9rtice adjacente j\'E1 foi visitado}\par
448             {\cf19 if} (adjacenteVertice->visitado == {\cf17 false}) \{\par
449                 {\cf20 // Marca o v\'E9rtice adjacente como visitado}\par
450                 adjacenteVertice->visitado = {\cf17 true};\par
451 \par
452                 {\cf20 // Atualiza a dist\'E2ncia do v\'E9rtice adjacente}\par
453                 distancias[adjacenteVertice->id] = distancias[v->id] + adjacente->dist;\par
454 \par
455                 {\cf20 // Verifica se o v\'E9rtice adjacente \'E9 o destino procurado}\par
456                 {\cf19 if} (adjacenteVertice->id == dest) \{\par
457                     {\cf20 // Retorna a dist\'E2ncia encontrada}\par
458                     {\cf18 int} distancia = distancias[adjacenteVertice->id];\par
459 \par
460                     {\cf20 // Reseta os v\'E9rtices para n\'E3o visitados}\par
461                     {\cf19 for} ({\cf18 int} i = 0; i < tras; i++) \{\par
462                         fila[i]->visitado = {\cf17 false};\par
463                     \}\par
464                     free(distancias);\par
465                     free(fila);\par
466 \par
467                     {\cf19 return} distancia;\par
468                 \}\par
469 \par
470                 {\cf20 // Adiciona o v\'E9rtice adjacente \'E0 fila}\par
471                 fila[tras++] = adjacenteVertice;\par
472             \}\par
473             adjacente = adjacente->next;\par
474         \}\par
475     \}\par
476 \par
477     {\cf20 // Reseta os v\'E9rtices para n\'E3o visitados}\par
478     {\cf19 for} ({\cf18 int} i = 0; i < tras; i++) \{\par
479         fila[i]->visitado = {\cf17 false};\par
480     \}\par
481     free(distancias);\par
482     free(fila);\par
483 \par
484     {\cf20 // Retorna -1 se n\'E3o foi poss\'EDvel encontrar um caminho entre os v\'E9rtices}\par
485     {\cf19 return} -1;\par
486 \}\par
}
}
{\xe \v ConverterNomeParaID\:Grafos.c}
{\xe \v Grafos.c\:ConverterNomeParaID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ConverterNomeParaID ({\b Vertice} *  {\i g}, char *  {\i nome})}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o serve para converter o nome da cidade para o id 1\'BA passo: percorrer a lista de vertices at\'E9 encontrar o vertice 2\'BA passo: retornar o id 3\'BA passo: se n\'E3o encontrar o vertice, retornar NULL\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i g} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nome} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 171                                                 \{\par
172     Vertice* aux = g;\par
173     {\cf19 while} (aux != NULL) \{\par
174         {\cf19 if} (strcmp(aux->cidade, nome) == 0) \{\par
175             {\cf19 return} aux->id;\par
176         \}\par
177         aux = aux->next;\par
178     \}\par
179     {\cf19 return} NULL;\par
180 \}\par
}
}
{\xe \v CriaAdj\:Grafos.c}
{\xe \v Grafos.c\:CriaAdj}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Adj} * CriaAdj (int  {\i id}, int  {\i dist})}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o serve para criar um novo adjacente 1\'BA passo: criar um novo adjacente 2\'BA passo: retornar o adjacente\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i id} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dist} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 90                                \{\par
91     Adj* novo = (Adj*)calloc(1, {\cf17 sizeof}(Adj));\par
92     {\cf19 if} (novo == NULL) {\cf19 return} NULL;\par
93     novo->id = id;\par
94     novo->dist = dist;\par
95     novo->next = NULL;\par
96     {\cf19 return} novo;\par
97 \}\par
}
}
{\xe \v CriaGrafo\:Grafos.c}
{\xe \v Grafos.c\:CriaGrafo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vertice} * CriaGrafo ()}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o serve para criar um novo grafo\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i $PARAMS} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
$RETURN \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 18                      \{\par
19     {\cf19 return} NULL;\par
20 \}\par
}
}
{\xe \v CriaVertice\:Grafos.c}
{\xe \v Grafos.c\:CriaVertice}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vertice} * CriaVertice (char *  {\i cidade}, int  {\i id})}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
.Esta fun\'E7\'E3o serve na criar um novo vertice 1\'BA passo: criar um novo vertice 2\'BA passo: inserir o novo vertice na lista de vertices 3\'BA passo: retornar o grafo\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i $PARAMS} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
$RETURN \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 31                                            \{\par
32     Vertice* novo = (Vertice*)calloc(1, {\cf17 sizeof}(Vertice));\par
33     {\cf19 if} (novo == NULL) {\cf19 return} NULL;\par
34     novo->id = id;\par
35     strcpy(novo->cidade, cidade);\par
36     novo->next = NULL;\par
37     novo->adjacentes = NULL;\par
38     {\cf19 return} novo;\par
39 \}\par
}
}
{\xe \v DepthFirstSearchRecursivo\:Grafos.c}
{\xe \v Grafos.c\:DepthFirstSearchRecursivo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool DepthFirstSearchRecursivo ({\b Vertice} *  {\i g}, int  {\i origem}, int  {\i dest})}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o realiza uma busca em profundidade recursiva em um grafo a partir de um v\'E9rtice de origem, ela verifica se existe um caminho entre a origem e o destino no grafo. 1\'BA passo: verificar se o grafo est\'E1 vazio 2\'BA passo: verificar se o v\'E9rtice de origem e o v\'E9rtice de destino existem no grafo 3\'BA passo: marcar o v\'E9rtice de origem como visitado 4\'BA passo: percorrer a lista de adjacentes do v\'E9rtice de origem 5\'BA passo: verificar se o v\'E9rtice adjacente j\'E1 foi visitado 6\'BA passo: se o v\'E9rtice adjacente n\'E3o foi visitado, chamar a fun\'E7\'E3o recursivamente\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i g} \cell }{Ponteiro para o primeiro v\'E9rtice do grafo \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i origem} \cell }{Valor do v\'E9rtice de origem \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dest} \cell }{Valor do v\'E9rtice de destino \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna true se existe um caminho entre a origem e o destino, caso contr\'E1rio, retorna false. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 367                                                                  \{\par
368     {\cf19 if} (origem == dest)\par
369         {\cf19 return} {\cf17 true};\par
370 \par
371     Vertice* aux = ProcuraVertice(g, origem);\par
372     aux->visitado = {\cf17 true};\par
373 \par
374     Adj* adj = aux->adjacentes;\par
375     {\cf19 while} (adj) \{\par
376         Vertice* adjacente = ProcuraVertice(g, adj->id);\par
377         {\cf19 if} (adjacente->visitado == {\cf17 false}) \{\par
378             {\cf18 bool} existe = DepthFirstSearchRecursivo(g, adj->id, dest);\par
379             {\cf19 if} (existe)\par
380                 {\cf19 return} {\cf17 true};\par
381         \}\par
382         adj = adj->next;\par
383     \}\par
384     {\cf19 return} {\cf17 false};\par
385 \}\par
}
}
{\xe \v DestruirAdjacencia\:Grafos.c}
{\xe \v Grafos.c\:DestruirAdjacencia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Adj} * DestruirAdjacencia ({\b Adj} *  {\i h})}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o serve para destruir a lista de adjacencias 1\'BA passo: verificar se a lista de adjacencias est\'E1 vazia 2\'BA passo: se n\'E3o estiver vazia, percorrer a lista de adjacencias e destruir os adjacentes\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i h} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 524                                 \{\par
525     {\cf19 if} (h == NULL) {\cf19 return} NULL;\par
526     Adj* aux = NULL;\par
527     {\cf19 while} (h) \{\par
528         {\cf19 if} (h->next != NULL)\par
529             aux = h->next;\par
530         free(h);\par
531         h = aux;\par
532         aux = NULL;\par
533     \}\par
534     {\cf19 return} h;\par
535 \}\par
}
}
{\xe \v DestruirGrafo\:Grafos.c}
{\xe \v Grafos.c\:DestruirGrafo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vertice} * DestruirGrafo ({\b Vertice} *  {\i g})}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o serve para destruir o grafo 1\'BA passo: verificar se o grafo est\'E1 vazio 2\'BA passo: se n\'E3o estiver vazio, percorrer a lista de vertices e destruir os adjacentes 3\'BA passo: destruir o vertice\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i g} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 501                                    \{\par
502     {\cf19 if} (g == NULL) {\cf19 return} NULL;\par
503     Vertice* aux = NULL;\par
504     {\cf19 while} (g) \{\par
505         {\cf19 if} (g->next)\par
506             aux = g->next;\par
507         g->adjacentes = DestruirAdjacencia(g->adjacentes);\par
508         free(g);\par
509         g = aux;\par
510         aux = NULL;\par
511     \}\par
512     {\cf19 return} g;\par
513 \}\par
}
}
{\xe \v GuardarAdjBin\:Grafos.c}
{\xe \v Grafos.c\:GuardarAdjBin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int GuardarAdjBin ({\b Adj} *  {\i h}, char *  {\i fileName}, int  {\i codVerticeOrigem})}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o serve para guardar os adjacentes num ficheiro bin\'E1rio 1\'BA passo: verificar se o adjacente est\'E1 vazio 2\'BA passo: abrir o ficheiro 3\'BA passo: percorrer a lista de adjacente e guardar os adjacentes no ficheiro 4\'BA passo: fechar o ficheiro\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i h} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fileName} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i codVerticeOrigem} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 263                                                                 \{\par
264     FILE* fp;\par
265 \par
266     {\cf19 if} (h == NULL) {\cf19 return} -2;\par
267 \par
268     fp = fopen(fileName, {\cf22 "ab"});\par
269 \par
270     {\cf19 if} (fp == NULL) \{\par
271         {\cf19 return} -1;\par
272     \}\par
273     Adj* aux = h;\par
274     AdjFile auxFile;\par
275 \par
276     {\cf19 while} (aux) \{\par
277         auxFile.codDestino = aux->id;\par
278         auxFile.codOrigem = codVerticeOrigem;\par
279         auxFile.dist = aux->dist;\par
280         fwrite(&auxFile, 1, {\cf17 sizeof}(AdjFile), fp);\par
281         aux = aux->next;\par
282     \}\par
283 \par
284     fclose(fp);\par
285     {\cf19 return} 1;\par
286 \}\par
}
}
{\xe \v GuardarGrafoBin\:Grafos.c}
{\xe \v Grafos.c\:GuardarGrafoBin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int GuardarGrafoBin ({\b Vertice} *  {\i h}, char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o serve para guardar um grafo num ficheiro bin\'E1rio 1\'BA passo: verificar se o grafo est\'E1 vazio 2\'BA passo: abrir o ficheiro 3\'BA passo: percorrer a lista de vertices e guardar os vertices no ficheiro 4\'BA passo: percorrer a lista de adjacente e guardar os adjacentes no ficheiro 5\'BA passo: fechar o ficheiro\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i h} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fileName} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 222                                                 \{\par
223     {\cf19 if} (h == NULL) {\cf19 return} -1;\par
224     FILE* fp;\par
225     {\cf18 int} r;\par
226 \par
227     fp = fopen(fileName, {\cf22 "wb"});\par
228 \par
229     {\cf19 if} (fp == NULL) {\cf19 return} -2;\par
230 \par
231     Vertice* aux = h;\par
232     VerticeFile auxFicheiro;\par
233 \par
234     {\cf19 while} (aux != NULL) \{\par
235         auxFicheiro.id = aux->id;\par
236         strcpy(auxFicheiro.cidade, aux->cidade);\par
237         fwrite(&auxFicheiro, 1, {\cf17 sizeof}(VerticeFile), fp);\par
238 \par
239         {\cf19 if} (aux->adjacentes) \{\par
240             r = GuardarAdjBin(aux->adjacentes, aux->cidade, aux->id);\par
241 \par
242         \}\par
243         aux = aux->next;\par
244     \}\par
245 \par
246     fclose(fp);\par
247     {\cf19 return} 1;\par
248 \}\par
}
}
{\xe \v InsereAdj\:Grafos.c}
{\xe \v Grafos.c\:InsereAdj}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Adj} * InsereAdj ({\b Adj} *  {\i g}, {\b Adj} *  {\i novo}, bool *  {\i res})}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o serve para inserir um novo adjacente 1\'BA passo: verificar se o adjacente est\'E1 vazio 2\'BA passo: se estiver vazio, inserir o novo adjacente 3\'BA passo: se n\'E3o estiver vazio, percorrer a lista de adjacente at\'E9 encontrar a posi\'E7\'E3o correta 4\'BA passo: inserir o novo adjacente na posi\'E7\'E3o correta\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i g} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i novo} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i res} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 112                                              \{\par
113     {\cf19 if} (g == NULL) \{\par
114         g = novo;\par
115         *res = {\cf17 true};\par
116         {\cf19 return} g;\par
117     \}\par
118     {\cf19 else} \{\par
119         Adj* aux = g;\par
120         Adj* ant = NULL;\par
121         {\cf19 while} (aux && aux->id < novo->id) \{\par
122             ant = aux;\par
123             aux = aux->next;\par
124         \}\par
125         {\cf19 if} (ant == NULL) \{\par
126             novo->next = g;\par
127             g = novo;\par
128         \}\par
129         {\cf19 else} \{\par
130             novo->next = aux;\par
131             ant->next = novo;\par
132         \}\par
133         *res = {\cf17 true};\par
134     \}\par
135     {\cf19 return} g;\par
136 \}\par
}
}
{\xe \v InsereVertice\:Grafos.c}
{\xe \v Grafos.c\:InsereVertice}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vertice} * InsereVertice ({\b Vertice} *  {\i g}, {\b Vertice} *  {\i novo}, bool *  {\i res})}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
.Esta fun\'E7\'E3o serve para inserir um novo vertice 1\'BA passo: verificar se o grafo est\'E1 vazio 2\'BA passo: se estiver vazio, inserir o novo vertice 3\'BA passo: se n\'E3o estiver vazio, percorrer a lista de vertices at\'E9 encontrar a posi\'E7\'E3o correta 3\'BA passo: inserir o novo vertice na posi\'E7\'E3o correta 4\'BA passo: retornar o grafo\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i $PARAMS} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
$RETURN \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 52                                                              \{\par
53     {\cf19 if} (g == NULL) \{\par
54         g = novo;\par
55         *res = {\cf17 true};\par
56         {\cf19 return} g;\par
57     \}\par
58     {\cf19 else}\par
59     \{\par
60         Vertice* aux = g;\par
61         Vertice* ant = aux;\par
62         {\cf19 while} (aux && aux->id < novo->id) \{\par
63             ant = aux;\par
64             aux = aux->next;\par
65         \}\par
66         {\cf19 if} (aux == g) \{\par
67             novo->next = g;\par
68             g = novo;\par
69         \}\par
70         {\cf19 else}\par
71         \{\par
72             novo->next = aux;\par
73             ant->next = novo;\par
74         \}\par
75         *res = {\cf17 true};\par
76     \}\par
77     {\cf19 return} g;\par
78 \}\par
}
}
{\xe \v LerAdjBin\:Grafos.c}
{\xe \v Grafos.c\:LerAdjBin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vertice} * LerAdjBin ({\b Vertice} *  {\i g}, bool *  {\i res})}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o serve para ler os adjacentes de um ficheiro bin\'E1rio 1\'BA passo: verificar se o ficheiro existe 2\'BA passo: abrir o ficheiro 3\'BA passo: ler o ficheiro e guardar os adjacentes no grafo 4\'BA passo: fechar o ficheiro\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i h} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fileName} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i res} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 332                                           \{\par
333     *res = {\cf17 false};\par
334     FILE* fp;\par
335 \par
336     AdjFile aux;\par
337     Vertice* auxGraph = g;\par
338     {\cf19 while} (auxGraph) \{\par
339         fp = fopen(auxGraph->cidade, {\cf22 "rb"});\par
340         {\cf19 if} (fp != NULL) \{\par
341             {\cf19 while} (fread(&aux, 1, {\cf17 sizeof}(AdjFile), fp)) \{\par
342                 g = AdicionaAdjacente(g, aux.codOrigem, aux.codDestino, aux.dist, res);\par
343             \}\par
344             fclose(fp);\par
345         \}\par
346         auxGraph = auxGraph->next;\par
347     \}\par
348     {\cf19 return} g;\par
349 \}\par
}
}
{\xe \v LerGrafoBin\:Grafos.c}
{\xe \v Grafos.c\:LerGrafoBin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vertice} * LerGrafoBin ({\b Vertice} *  {\i h}, char *  {\i fileName}, bool *  {\i res})}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o serve para ler um grafo de um ficheiro bin\'E1rio 1\'BA passo: verificar se o ficheiro existe 2\'BA passo: abrir o ficheiro 3\'BA passo: ler o ficheiro e guardar os vertices no grafo 4\'BA passo: fechar o ficheiro\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i h} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fileName} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i res} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 301                                                             \{\par
302     *res = {\cf17 false};\par
303 \par
304     FILE* fp = fopen(fileName, {\cf22 "rb"});\par
305     {\cf19 if} (fp == NULL) {\cf19 return} NULL;\par
306 \par
307     VerticeFile aux;\par
308     Vertice* novo;\par
309 \par
310     {\cf19 while} (fread(&aux, 1, {\cf17 sizeof}(VerticeFile), fp))\par
311     \{\par
312         novo = CriaVertice(aux.cidade, aux.id);\par
313         h = InsereVertice(h, novo, res);\par
314     \}\par
315     fclose(fp);\par
316     {\cf19 return} h;\par
317 \}\par
}
}
{\xe \v MostraAdjacencias\:Grafos.c}
{\xe \v Grafos.c\:MostraAdjacencias}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MostraAdjacencias ({\b Adj} *  {\i h})}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 541                                \{\par
542     {\cf19 if} (h == NULL) {\cf19 return};\par
543     printf({\cf22 " -> %s (%d) Distancia: %d\\n"}, h->cidade, h->id, h->dist);\par
544     MostraAdjacencias(h->next);\par
545 \}\par
}
}
{\xe \v MostraGrafo\:Grafos.c}
{\xe \v Grafos.c\:MostraGrafo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MostraGrafo ({\b Vertice} *  {\i g})}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 547                              \{\par
548     {\cf19 if} (g == NULL) {\cf19 return};\par
549     printf({\cf22 "V: %d - %s\\n"}, g->id, g->cidade);\par
550     MostraAdjacencias(g->adjacentes);\par
551     printf({\cf22 "\\n"}); {\cf20 // imprime uma linha em branco para separar os v\'E9rtices}\par
552     MostraGrafo(g->next);\par
553 \}\par
}
}
{\xe \v ProcuraVertice\:Grafos.c}
{\xe \v Grafos.c\:ProcuraVertice}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vertice} * ProcuraVertice ({\b Vertice} *  {\i g}, int  {\i id})}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o serve para procurar um vertice 1\'BA passo: percorrer a lista de vertices at\'E9 encontrar o vertice 2\'BA passo: retornar o vertice 3\'BA passo: se n\'E3o encontrar o vertice, retornar NULL\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i g} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i id} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 149                                             \{\par
150     Vertice* aux = g;\par
151     {\cf19 while} (aux != NULL) \{\par
152         {\cf19 if} (aux->id == {\cf18 id}) \{\par
153             {\cf19 return} aux;\par
154         \}\par
155         aux = aux->next;\par
156     \}\par
157     {\cf19 return} NULL;\par
158 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro EDA-Projeto/Grafos.h\par \pard\plain 
{\tc\tcl2 \v EDA-Projeto/Grafos.h}
{\xe \v EDA-Projeto/Grafos.h}
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ficheiro header para a estrutura de dados grafos. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdbool.h>}\par
{\f2 #include <stdlib.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Adjacencia}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Vertice}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b AdjacenciaParaFicheiro}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b VerticeParaFicheiro}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b _CTR_SECURE_NO_WARNINGS}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Grafosh}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b M}\~ 20\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es de tipos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Adjacencia} {\b Adj}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Vertice} {\b Vertice}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b AdjacenciaParaFicheiro} {\b AdjFile}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b VerticeParaFicheiro} {\b VerticeFile}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vertice} * {\b CriaGrafo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vertice} * {\b InsereVertice} ({\b Vertice} *g, {\b Vertice} *novo, bool *res)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vertice} * {\b CriaVertice} (char *cidade, int tot)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Adj} * {\b CriaAdj} (int id, int dist)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Adj} * {\b InsereAdj} ({\b Adj} *g, {\b Adj} *novo, bool *res)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vertice} * {\b ProcuraVertice} ({\b Vertice} *g, int id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ConverterNomeParaID} ({\b Vertice} *g, char *nome)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vertice} * {\b AdicionaAdjacente} ({\b Vertice} *g, int idOrigem, int idDestino, int dist)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vertice} * {\b LerGrafoBin} ({\b Vertice} *h, char *fileName, bool *res)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vertice} * {\b LerAdjBin} ({\b Vertice} *g, bool *res)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Vertice} * {\b DestruirGrafo} ({\b Vertice} *g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Adj} * {\b DestruirAdjacencia} ({\b Adj} *h)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b DepthFirstSearchRecursivo} ({\b Vertice} *g, int origem, int dest)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b CalculaDistancia} ({\b Vertice} *g, int origem, int dest)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MostraGrafo} ({\b Vertice} *g)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ficheiro header para a estrutura de dados grafos. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Utilizador Alexandre Marques \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
May 2023 \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das macros\par
\pard\plain 
{\xe \v _CTR_SECURE_NO_WARNINGS\:Grafos.h}
{\xe \v Grafos.h\:_CTR_SECURE_NO_WARNINGS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define _CTR_SECURE_NO_WARNINGS}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Grafosh\:Grafos.h}
{\xe \v Grafos.h\:Grafosh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Grafosh}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v M\:Grafos.h}
{\xe \v Grafos.h\:M}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define M\~ 20}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos tipos\par
\pard\plain 
{\xe \v Adj\:Grafos.h}
{\xe \v Grafos.h\:Adj}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Adjacencia} {\b Adj}}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AdjFile\:Grafos.h}
{\xe \v Grafos.h\:AdjFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b AdjacenciaParaFicheiro} {\b AdjFile}}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Vertice\:Grafos.h}
{\xe \v Grafos.h\:Vertice}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Vertice} {\b Vertice}}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v VerticeFile\:Grafos.h}
{\xe \v Grafos.h\:VerticeFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b VerticeParaFicheiro} {\b VerticeFile}}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v AdicionaAdjacente\:Grafos.h}
{\xe \v Grafos.h\:AdicionaAdjacente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vertice} * AdicionaAdjacente ({\b Vertice} *  {\i g}, int  {\i idOrigem}, int  {\i idDestino}, int  {\i dist})}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o serve para adicionar um adjacente 1\'BA passo: procurar o vertice de origem 2\'BA passo: procurar o vertice de destino 3\'BA passo: criar um novo adjacente 4\'BA passo: inserir o novo adjacente na lista de adjacente 5\'BA passo: retornar o grafo\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i g} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i idOrigem} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i idDestino} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dist} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 198                                                                               \{\par
199     Vertice* origem = ProcuraVertice(g, idOrigem);\par
200     Vertice* destino = ProcuraVertice(g, idDestino);\par
201     {\cf19 if} (origem == NULL || destino == NULL) {\cf19 return} g;\par
202     {\cf18 bool} res = {\cf17 false};\par
203     Adj* novo = CriaAdj(idDestino, dist);\par
204     origem->adjacentes = InsereAdj(origem->adjacentes, novo, &res);\par
205     {\cf19 return} g;\par
206 \}\par
}
}
{\xe \v CalculaDistancia\:Grafos.h}
{\xe \v Grafos.h\:CalculaDistancia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CalculaDistancia ({\b Vertice} *  {\i g}, int  {\i origem}, int  {\i dest})}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o calcula a dist\'E2ncia entre dois v\'E9rtices em um grafo. 1\'BA passo: verificar se o grafo est\'E1 vazio 2\'BA passo: verificar se o v\'E9rtice de origem e o v\'E9rtice s\'E3o iguais 3\'BA passo: marcar o v\'E9rtice de origem como visitado 4\'BA passo: inicializar um array para armazenar as dist\'E2ncias 5\'BA passo: percorrer a lista de adjacentes do v\'E9rtice de origem 6\'BA passo: Uma fila \'E9 inicializada para armazenar os v\'E9rtices a serem visitados 7\'BA passo: enquanto a fila n\'E3o estiver vazia, o primeiro elemento da fila \'E9 removido 8\'BA passo: percorrer a lista de adjacentes do v\'E9rtice removido 9\'BA passo: verificar se o v\'E9rtice adjacente j\'E1 foi visitado 10\'BA passo: se o v\'E9rtice adjacente n\'E3o foi visitado, marcar o v\'E9rtice adjacente como visitado 11\'BA passo: adicionar o v\'E9rtice adjacente \'E0 fila 12\'BA passo: se o v\'E9rtice adjacente for igual ao v\'E9rtice de destino, retornar a dist\'E2ncia 13\'BA passo: se o v\'E9rtice adjacente for diferente do v\'E9rtice de destino, adicionar a dist\'E2ncia ao array 14\'BA passo: se o array n\'E3o estiver vazio, retornar a menor dist\'E2ncia 15\'BA passo: se o array estiver vazio, retornar -1\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i g} \cell }{Ponteiro para o primeiro v\'E9rtice do grafo \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i origem} \cell }{Valor do v\'E9rtice de origem \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dest} \cell }{Valor do v\'E9rtice de destino \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna a dist\'E2ncia entre os v\'E9rtices origem e destino. Se n\'E3o houver um caminho, retorna -1. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 411                                                        \{\par
412     {\cf20 // Verifica se o grafo est\'E1 vazio}\par
413     {\cf19 if} (g == NULL)\par
414         {\cf19 return} -1;\par
415 \par
416     {\cf20 // Verifica se o v\'E9rtice de origem e o v\'E9rtice de destino s\'E3o iguais}\par
417     {\cf19 if} (origem == dest)\par
418         {\cf19 return} 0;\par
419 \par
420     {\cf20 // Marca o v\'E9rtice de origem como visitado}\par
421     Vertice* verticeAtual = ProcuraVertice(g, origem);\par
422     verticeAtual->visitado = {\cf17 true};\par
423 \par
424     {\cf20 // Inicializa um array para armazenar as dist\'E2ncias}\par
425     {\cf18 int}* distancias = ({\cf18 int}*)malloc({\cf17 sizeof}({\cf18 int}) * 100); {\cf20 // Tamanho m\'E1ximo do array}\par
426     {\cf19 for} ({\cf18 int} i = 0; i < 100; i++) \{\par
427         distancias[i] = INT_MAX;\par
428     \}\par
429     distancias[verticeAtual->id] = 0;\par
430 \par
431     {\cf20 // Fila para armazenar os v\'E9rtices a serem visitados}\par
432     Vertice** fila = (Vertice**)malloc({\cf17 sizeof}(Vertice*) * 100); {\cf20 // Tamanho m\'E1ximo da fila}\par
433     {\cf18 int} frente = 0;\par
434     {\cf18 int} tras = 0;\par
435     fila[tras++] = verticeAtual;\par
436 \par
437     {\cf20 // Executa o algoritmo de busca em largura}\par
438     {\cf19 while} (frente != tras) \{\par
439         {\cf20 // Remove o v\'E9rtice da frente da fila e considera como v\'E9rtice atual}\par
440         Vertice* v = fila[frente++];\par
441         Adj* adjacente = v->adjacentes;\par
442 \par
443         {\cf20 // Explora os v\'E9rtices adjacentes do v\'E9rtice atual}\par
444         {\cf19 while} (adjacente != NULL) \{\par
445             Vertice* adjacenteVertice = ProcuraVertice(g, adjacente->id);\par
446 \par
447             {\cf20 // Verifica se o v\'E9rtice adjacente j\'E1 foi visitado}\par
448             {\cf19 if} (adjacenteVertice->visitado == {\cf17 false}) \{\par
449                 {\cf20 // Marca o v\'E9rtice adjacente como visitado}\par
450                 adjacenteVertice->visitado = {\cf17 true};\par
451 \par
452                 {\cf20 // Atualiza a dist\'E2ncia do v\'E9rtice adjacente}\par
453                 distancias[adjacenteVertice->id] = distancias[v->id] + adjacente->dist;\par
454 \par
455                 {\cf20 // Verifica se o v\'E9rtice adjacente \'E9 o destino procurado}\par
456                 {\cf19 if} (adjacenteVertice->id == dest) \{\par
457                     {\cf20 // Retorna a dist\'E2ncia encontrada}\par
458                     {\cf18 int} distancia = distancias[adjacenteVertice->id];\par
459 \par
460                     {\cf20 // Reseta os v\'E9rtices para n\'E3o visitados}\par
461                     {\cf19 for} ({\cf18 int} i = 0; i < tras; i++) \{\par
462                         fila[i]->visitado = {\cf17 false};\par
463                     \}\par
464                     free(distancias);\par
465                     free(fila);\par
466 \par
467                     {\cf19 return} distancia;\par
468                 \}\par
469 \par
470                 {\cf20 // Adiciona o v\'E9rtice adjacente \'E0 fila}\par
471                 fila[tras++] = adjacenteVertice;\par
472             \}\par
473             adjacente = adjacente->next;\par
474         \}\par
475     \}\par
476 \par
477     {\cf20 // Reseta os v\'E9rtices para n\'E3o visitados}\par
478     {\cf19 for} ({\cf18 int} i = 0; i < tras; i++) \{\par
479         fila[i]->visitado = {\cf17 false};\par
480     \}\par
481     free(distancias);\par
482     free(fila);\par
483 \par
484     {\cf20 // Retorna -1 se n\'E3o foi poss\'EDvel encontrar um caminho entre os v\'E9rtices}\par
485     {\cf19 return} -1;\par
486 \}\par
}
}
{\xe \v ConverterNomeParaID\:Grafos.h}
{\xe \v Grafos.h\:ConverterNomeParaID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ConverterNomeParaID ({\b Vertice} *  {\i g}, char *  {\i nome})}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o serve para converter o nome da cidade para o id 1\'BA passo: percorrer a lista de vertices at\'E9 encontrar o vertice 2\'BA passo: retornar o id 3\'BA passo: se n\'E3o encontrar o vertice, retornar NULL\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i g} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nome} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 171                                                 \{\par
172     Vertice* aux = g;\par
173     {\cf19 while} (aux != NULL) \{\par
174         {\cf19 if} (strcmp(aux->cidade, nome) == 0) \{\par
175             {\cf19 return} aux->id;\par
176         \}\par
177         aux = aux->next;\par
178     \}\par
179     {\cf19 return} NULL;\par
180 \}\par
}
}
{\xe \v CriaAdj\:Grafos.h}
{\xe \v Grafos.h\:CriaAdj}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Adj} * CriaAdj (int  {\i id}, int  {\i dist})}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o serve para criar um novo adjacente 1\'BA passo: criar um novo adjacente 2\'BA passo: retornar o adjacente\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i id} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dist} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 90                                \{\par
91     Adj* novo = (Adj*)calloc(1, {\cf17 sizeof}(Adj));\par
92     {\cf19 if} (novo == NULL) {\cf19 return} NULL;\par
93     novo->id = id;\par
94     novo->dist = dist;\par
95     novo->next = NULL;\par
96     {\cf19 return} novo;\par
97 \}\par
}
}
{\xe \v CriaGrafo\:Grafos.h}
{\xe \v Grafos.h\:CriaGrafo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vertice} * CriaGrafo ()}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o serve para criar um novo grafo\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i $PARAMS} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
$RETURN \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 18                      \{\par
19     {\cf19 return} NULL;\par
20 \}\par
}
}
{\xe \v CriaVertice\:Grafos.h}
{\xe \v Grafos.h\:CriaVertice}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vertice} * CriaVertice (char *  {\i cidade}, int  {\i id})}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
.Esta fun\'E7\'E3o serve na criar um novo vertice 1\'BA passo: criar um novo vertice 2\'BA passo: inserir o novo vertice na lista de vertices 3\'BA passo: retornar o grafo\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i $PARAMS} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
$RETURN \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 31                                            \{\par
32     Vertice* novo = (Vertice*)calloc(1, {\cf17 sizeof}(Vertice));\par
33     {\cf19 if} (novo == NULL) {\cf19 return} NULL;\par
34     novo->id = id;\par
35     strcpy(novo->cidade, cidade);\par
36     novo->next = NULL;\par
37     novo->adjacentes = NULL;\par
38     {\cf19 return} novo;\par
39 \}\par
}
}
{\xe \v DepthFirstSearchRecursivo\:Grafos.h}
{\xe \v Grafos.h\:DepthFirstSearchRecursivo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool DepthFirstSearchRecursivo ({\b Vertice} *  {\i g}, int  {\i origem}, int  {\i dest})}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o realiza uma busca em profundidade recursiva em um grafo a partir de um v\'E9rtice de origem, ela verifica se existe um caminho entre a origem e o destino no grafo. 1\'BA passo: verificar se o grafo est\'E1 vazio 2\'BA passo: verificar se o v\'E9rtice de origem e o v\'E9rtice de destino existem no grafo 3\'BA passo: marcar o v\'E9rtice de origem como visitado 4\'BA passo: percorrer a lista de adjacentes do v\'E9rtice de origem 5\'BA passo: verificar se o v\'E9rtice adjacente j\'E1 foi visitado 6\'BA passo: se o v\'E9rtice adjacente n\'E3o foi visitado, chamar a fun\'E7\'E3o recursivamente\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i g} \cell }{Ponteiro para o primeiro v\'E9rtice do grafo \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i origem} \cell }{Valor do v\'E9rtice de origem \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dest} \cell }{Valor do v\'E9rtice de destino \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna true se existe um caminho entre a origem e o destino, caso contr\'E1rio, retorna false. \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 367                                                                  \{\par
368     {\cf19 if} (origem == dest)\par
369         {\cf19 return} {\cf17 true};\par
370 \par
371     Vertice* aux = ProcuraVertice(g, origem);\par
372     aux->visitado = {\cf17 true};\par
373 \par
374     Adj* adj = aux->adjacentes;\par
375     {\cf19 while} (adj) \{\par
376         Vertice* adjacente = ProcuraVertice(g, adj->id);\par
377         {\cf19 if} (adjacente->visitado == {\cf17 false}) \{\par
378             {\cf18 bool} existe = DepthFirstSearchRecursivo(g, adj->id, dest);\par
379             {\cf19 if} (existe)\par
380                 {\cf19 return} {\cf17 true};\par
381         \}\par
382         adj = adj->next;\par
383     \}\par
384     {\cf19 return} {\cf17 false};\par
385 \}\par
}
}
{\xe \v DestruirAdjacencia\:Grafos.h}
{\xe \v Grafos.h\:DestruirAdjacencia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Adj} * DestruirAdjacencia ({\b Adj} *  {\i h})}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o serve para destruir a lista de adjacencias 1\'BA passo: verificar se a lista de adjacencias est\'E1 vazia 2\'BA passo: se n\'E3o estiver vazia, percorrer a lista de adjacencias e destruir os adjacentes\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i h} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 524                                 \{\par
525     {\cf19 if} (h == NULL) {\cf19 return} NULL;\par
526     Adj* aux = NULL;\par
527     {\cf19 while} (h) \{\par
528         {\cf19 if} (h->next != NULL)\par
529             aux = h->next;\par
530         free(h);\par
531         h = aux;\par
532         aux = NULL;\par
533     \}\par
534     {\cf19 return} h;\par
535 \}\par
}
}
{\xe \v DestruirGrafo\:Grafos.h}
{\xe \v Grafos.h\:DestruirGrafo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vertice} * DestruirGrafo ({\b Vertice} *  {\i g})}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o serve para destruir o grafo 1\'BA passo: verificar se o grafo est\'E1 vazio 2\'BA passo: se n\'E3o estiver vazio, percorrer a lista de vertices e destruir os adjacentes 3\'BA passo: destruir o vertice\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i g} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 501                                    \{\par
502     {\cf19 if} (g == NULL) {\cf19 return} NULL;\par
503     Vertice* aux = NULL;\par
504     {\cf19 while} (g) \{\par
505         {\cf19 if} (g->next)\par
506             aux = g->next;\par
507         g->adjacentes = DestruirAdjacencia(g->adjacentes);\par
508         free(g);\par
509         g = aux;\par
510         aux = NULL;\par
511     \}\par
512     {\cf19 return} g;\par
513 \}\par
}
}
{\xe \v InsereAdj\:Grafos.h}
{\xe \v Grafos.h\:InsereAdj}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Adj} * InsereAdj ({\b Adj} *  {\i g}, {\b Adj} *  {\i novo}, bool *  {\i res})}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o serve para inserir um novo adjacente 1\'BA passo: verificar se o adjacente est\'E1 vazio 2\'BA passo: se estiver vazio, inserir o novo adjacente 3\'BA passo: se n\'E3o estiver vazio, percorrer a lista de adjacente at\'E9 encontrar a posi\'E7\'E3o correta 4\'BA passo: inserir o novo adjacente na posi\'E7\'E3o correta\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i g} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i novo} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i res} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 112                                              \{\par
113     {\cf19 if} (g == NULL) \{\par
114         g = novo;\par
115         *res = {\cf17 true};\par
116         {\cf19 return} g;\par
117     \}\par
118     {\cf19 else} \{\par
119         Adj* aux = g;\par
120         Adj* ant = NULL;\par
121         {\cf19 while} (aux && aux->id < novo->id) \{\par
122             ant = aux;\par
123             aux = aux->next;\par
124         \}\par
125         {\cf19 if} (ant == NULL) \{\par
126             novo->next = g;\par
127             g = novo;\par
128         \}\par
129         {\cf19 else} \{\par
130             novo->next = aux;\par
131             ant->next = novo;\par
132         \}\par
133         *res = {\cf17 true};\par
134     \}\par
135     {\cf19 return} g;\par
136 \}\par
}
}
{\xe \v InsereVertice\:Grafos.h}
{\xe \v Grafos.h\:InsereVertice}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vertice} * InsereVertice ({\b Vertice} *  {\i g}, {\b Vertice} *  {\i novo}, bool *  {\i res})}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
.Esta fun\'E7\'E3o serve para inserir um novo vertice 1\'BA passo: verificar se o grafo est\'E1 vazio 2\'BA passo: se estiver vazio, inserir o novo vertice 3\'BA passo: se n\'E3o estiver vazio, percorrer a lista de vertices at\'E9 encontrar a posi\'E7\'E3o correta 3\'BA passo: inserir o novo vertice na posi\'E7\'E3o correta 4\'BA passo: retornar o grafo\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i $PARAMS} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
$RETURN \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 52                                                              \{\par
53     {\cf19 if} (g == NULL) \{\par
54         g = novo;\par
55         *res = {\cf17 true};\par
56         {\cf19 return} g;\par
57     \}\par
58     {\cf19 else}\par
59     \{\par
60         Vertice* aux = g;\par
61         Vertice* ant = aux;\par
62         {\cf19 while} (aux && aux->id < novo->id) \{\par
63             ant = aux;\par
64             aux = aux->next;\par
65         \}\par
66         {\cf19 if} (aux == g) \{\par
67             novo->next = g;\par
68             g = novo;\par
69         \}\par
70         {\cf19 else}\par
71         \{\par
72             novo->next = aux;\par
73             ant->next = novo;\par
74         \}\par
75         *res = {\cf17 true};\par
76     \}\par
77     {\cf19 return} g;\par
78 \}\par
}
}
{\xe \v LerAdjBin\:Grafos.h}
{\xe \v Grafos.h\:LerAdjBin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vertice} * LerAdjBin ({\b Vertice} *  {\i g}, bool *  {\i res})}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o serve para ler os adjacentes de um ficheiro bin\'E1rio 1\'BA passo: verificar se o ficheiro existe 2\'BA passo: abrir o ficheiro 3\'BA passo: ler o ficheiro e guardar os adjacentes no grafo 4\'BA passo: fechar o ficheiro\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i h} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fileName} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i res} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 332                                           \{\par
333     *res = {\cf17 false};\par
334     FILE* fp;\par
335 \par
336     AdjFile aux;\par
337     Vertice* auxGraph = g;\par
338     {\cf19 while} (auxGraph) \{\par
339         fp = fopen(auxGraph->cidade, {\cf22 "rb"});\par
340         {\cf19 if} (fp != NULL) \{\par
341             {\cf19 while} (fread(&aux, 1, {\cf17 sizeof}(AdjFile), fp)) \{\par
342                 g = AdicionaAdjacente(g, aux.codOrigem, aux.codDestino, aux.dist, res);\par
343             \}\par
344             fclose(fp);\par
345         \}\par
346         auxGraph = auxGraph->next;\par
347     \}\par
348     {\cf19 return} g;\par
349 \}\par
}
}
{\xe \v LerGrafoBin\:Grafos.h}
{\xe \v Grafos.h\:LerGrafoBin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vertice} * LerGrafoBin ({\b Vertice} *  {\i h}, char *  {\i fileName}, bool *  {\i res})}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
.Esta mostra o grafo\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i $PARAMS} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
$RETURN Esta fun\'E7\'E3o serve para ler um grafo de um ficheiro bin\'E1rio 1\'BA passo: verificar se o ficheiro existe 2\'BA passo: abrir o ficheiro 3\'BA passo: ler o ficheiro e guardar os vertices no grafo 4\'BA passo: fechar o ficheiro\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i h} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fileName} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i res} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}Esta fun\'E7\'E3o serve para ler um grafo de um ficheiro bin\'E1rio 1\'BA passo: verificar se o ficheiro existe 2\'BA passo: abrir o ficheiro 3\'BA passo: ler o ficheiro e guardar os vertices no grafo 4\'BA passo: fechar o ficheiro\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i h} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fileName} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i res} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 301                                                             \{\par
302     *res = {\cf17 false};\par
303 \par
304     FILE* fp = fopen(fileName, {\cf22 "rb"});\par
305     {\cf19 if} (fp == NULL) {\cf19 return} NULL;\par
306 \par
307     VerticeFile aux;\par
308     Vertice* novo;\par
309 \par
310     {\cf19 while} (fread(&aux, 1, {\cf17 sizeof}(VerticeFile), fp))\par
311     \{\par
312         novo = CriaVertice(aux.cidade, aux.id);\par
313         h = InsereVertice(h, novo, res);\par
314     \}\par
315     fclose(fp);\par
316     {\cf19 return} h;\par
317 \}\par
}
}
{\xe \v MostraGrafo\:Grafos.h}
{\xe \v Grafos.h\:MostraGrafo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MostraGrafo ({\b Vertice} *  {\i g})}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 547                              \{\par
548     {\cf19 if} (g == NULL) {\cf19 return};\par
549     printf({\cf22 "V: %d - %s\\n"}, g->id, g->cidade);\par
550     MostraAdjacencias(g->adjacentes);\par
551     printf({\cf22 "\\n"}); {\cf20 // imprime uma linha em branco para separar os v\'E9rtices}\par
552     MostraGrafo(g->next);\par
553 \}\par
}
}
{\xe \v ProcuraVertice\:Grafos.h}
{\xe \v Grafos.h\:ProcuraVertice}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vertice} * ProcuraVertice ({\b Vertice} *  {\i g}, int  {\i id})}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o serve para procurar um vertice 1\'BA passo: percorrer a lista de vertices at\'E9 encontrar o vertice 2\'BA passo: retornar o vertice 3\'BA passo: se n\'E3o encontrar o vertice, retornar NULL\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i g} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i id} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 149                                             \{\par
150     Vertice* aux = g;\par
151     {\cf19 while} (aux != NULL) \{\par
152         {\cf19 if} (aux->id == {\cf18 id}) \{\par
153             {\cf19 return} aux;\par
154         \}\par
155         aux = aux->next;\par
156     \}\par
157     {\cf19 return} NULL;\par
158 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Grafos.h\par \pard\plain 
{\tc\tcl2 \v EDA-Projeto/Grafos.h}
{\xe \v EDA-Projeto/Grafos.h}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Ir para a documenta\'E7\'E3o deste ficheiro.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*****************************************************************/}\par
9 {\cf21 #pragma once}\par
10 \par
11 {\cf21 #pragma warning (disable: 4996)}\par
12 {\cf21 #include <stdio.h>}\par
13 {\cf21 #include <stdbool.h>}\par
14 {\cf21 #include <stdlib.h>}\par
15 {\cf21 #define _CTR_SECURE_NO_WARNINGS}\par
16 \par
17 {\cf21 #ifndef Grafosh}\par
18 {\cf21 #define Grafosh}\par
19 {\cf21 #define M 20}\par
20 \par
21 {\cf17 typedef} {\cf17 struct }Adjacencia \{\par
22     {\cf18 int} id;\par
23     {\cf18 char} cidade[M];\par
24     {\cf18 int} dist;\par
25     {\cf17 struct }Adj* next;\par
26 \}Adj;\par
27 \par
28 {\cf17 typedef} {\cf17 struct }Vertice \{\par
29     {\cf18 int} id;\par
30     {\cf18 char} cidade[M];\par
31     {\cf18 bool} visitado;\par
32     {\cf17 struct }Vertice* next;\par
33     {\cf17 struct }Adj* adjacentes;\par
34 \} Vertice;\par
35 \par
36 \par
37 {\cf17 typedef} {\cf17 struct }AdjacenciaParaFicheiro \{\par
38     {\cf18 int} codOrigem;\par
39     {\cf18 int} codDestino;\par
40     {\cf18 int} dist;\par
41 \}AdjFile;\par
42 \par
43 {\cf17 typedef} {\cf17 struct }VerticeParaFicheiro \{\par
44     {\cf18 int} id;\par
45     {\cf18 char} cidade[M];\par
46 \} VerticeFile;\par
47 \par
48 \par
55 Vertice* CriaGrafo();\par
56 \par
68 Vertice* InsereVertice(Vertice* g, Vertice* novo, {\cf18 bool}* res);\par
69 \par
79 Vertice* CriaVertice({\cf18 char}* cidade, {\cf18 int} tot);\par
80 \par
91 Adj* CriaAdj({\cf18 int} {\cf18 id}, {\cf18 int} dist);\par
92 \par
106 Adj* InsereAdj(Adj* g, Adj* novo, {\cf18 bool}* res);\par
107 \par
119 Vertice* ProcuraVertice(Vertice* g, {\cf18 int} {\cf18 id});\par
120 \par
132 {\cf18 int} ConverterNomeParaID(Vertice* g, {\cf18 char}* nome);\par
133 \par
149 Vertice* AdicionaAdjacente(Vertice* g, {\cf18 int} idOrigem, {\cf18 int} idDestino, {\cf18 int} dist);\par
150 \par
171 Vertice* LerGrafoBin(Vertice* h, {\cf18 char}* fileName, {\cf18 bool}* res);\par
172 \par
186 Vertice* LerAdjBin(Vertice* g, {\cf18 bool}* res);\par
187 \par
198 Vertice* DestruirGrafo(Vertice* g);\par
199 \par
209 Adj* DestruirAdjacencia(Adj* h);\par
210 \par
227 {\cf18 bool} DepthFirstSearchRecursivo(Vertice* g, {\cf18 int} origem, {\cf18 int} dest);\par
228 \par
229 {\cf18 int} CalculaDistancia(Vertice* g, {\cf18 int} origem, {\cf18 int} dest);\par
230 \par
231 \par
232 {\cf21 #pragma region Ecra}\par
233 \par
234 {\cf18 void} MostraGrafo(Vertice* g);\par
235 \par
236 \par
237 {\cf21 #pragma endregion}\par
238 \par
239 {\cf21 #endif }{\cf20 // !Grafosh}\par
240 \par
241 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro EDA-Projeto/main.c\par \pard\plain 
{\tc\tcl2 \v EDA-Projeto/main.c}
{\xe \v EDA-Projeto/main.c}
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Clientes.h"}\par
{\f2 #include "Gestores.h"}\par
{\f2 #include "MeiosMobilidade.h"}\par
{\f2 #include "Grafos.h"}\par
{\f2 #include "Aluguer.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
March 2023 \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v main\:main.c}
{\xe \v main.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main ()}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 16            \{\par
17 \par
18 {\cf21 #pragma region Clientes}\par
19     {\cf18 bool} aux;\par
20     {\cf18 int} x;\par
21 \par
22     ClientesLista* listaClientes = NULL;\par
23     {\cf20 //x=lerClientestxt(&listaClientes);}\par
24     lerClientesbin(&listaClientes, {\cf22 "Clientes.bin"});\par
25     {\cf20 //adicionarNovoCliente(&listaClientes);}\par
26     {\cf20 //clienteRemovidoEcra(listaClientes);}\par
27     {\cf20 //aux = ModificarCliente(listaClientes,"112233445", 2);}\par
28     {\cf20 //mostrarClientes(listaClientes);}\par
29 \par
30 {\cf21 #pragma endregion}\par
31 \par
32 {\cf21 #pragma region Gestores}\par
33     GestoresLista* listaGestores = NULL;\par
34     {\cf20 //x=lerGestorestxt(&listaGestores);}\par
35     x=lerGestoresbin(&listaGestores);\par
36     {\cf20 //adicionarNovoGestor(&listaGestores);}\par
37     {\cf20 //gestorRemovidoEcra(listaGestores);}\par
38     {\cf20 //mostrarGestores(listaGestores);}\par
39     {\cf20 //aux = guardarGestoresbin(listaGestores);}\par
40 \par
41 {\cf21 #pragma endregion}\par
42 \par
43 {\cf21 #pragma region Meios}\par
44 \par
45     MeiosLista* listaMeios = NULL;\par
46     {\cf20 //lerMeiostxt(&listaMeios);}\par
47     lerMeiosbin(&listaMeios);\par
48     {\cf20 //adicionarNovoMeio(&listaMeios);}\par
49     {\cf20 //MeioRemovidoEcra(&listaMeios);}\par
50 \par
51     {\cf20 //mostrarMeios(listaMeios);}\par
52 \par
53     {\cf20 //aux= ModificarMeioMobilidade(listaMeios, 1, 2);}\par
54 \par
55     {\cf20 //aux = guardarMeiosMobilidadebin(listaMeios);}\par
56 \par
57 \par
58     {\cf20 /*Meios* meioEncontrado = procurarMeioPorId(listaMeios, 1);}\par
59 {\cf20 }\par
60 {\cf20     if (meioEncontrado != NULL) \{}\par
61 {\cf20         printf("ID: %d\\n", meioEncontrado->id);}\par
62 {\cf20         printf("Localizacao: %s\\n", meioEncontrado->localizacao);}\par
63 {\cf20         printf("Bateria: %d\\n", meioEncontrado->bateria);}\par
64 {\cf20         printf("Custo: %.2f\\n", meioEncontrado->custo);}\par
65 {\cf20         printf("Autonomia: %d\\n", meioEncontrado->autonomia);}\par
66 {\cf20         printf("Status: %d\\n", meioEncontrado->status);}\par
67 {\cf20         printf("\\n");}\par
68 {\cf20     \}}\par
69 {\cf20     */}\par
70     {\cf20 //DestruirListaM(listaMeios);}\par
71 \par
72 {\cf21 #pragma endregion}\par
73 \par
74 {\cf21 #pragma region Grafos}\par
75 \par
76 \par
77     {\cf17 static} {\cf18 int} total = 0; \par
78     {\cf18 bool} res;\par
79     {\cf18 int} y = 0;\par
80 \par
81     Vertice* grafo = CriaGrafo();\par
82 \par
83     grafo = LerGrafoBin(grafo, {\cf22 "Vertices.bin"}, &res);\par
84     grafo = LerAdjBin(grafo, &res);\par
85 \par
86     {\cf20 //GuardarGrafoBin(grafo, "Vertices.bin");}\par
87 \par
88     MostraGrafo(grafo);\par
89 \par
90 {\cf21 #pragma endregion}\par
91 \par
92 {\cf21 #pragma region Alugueres}\par
93 \par
94     AluguerLista* listaAlugueres = NULL;\par
95 \par
96 \par
97     {\cf20 //x = lerAluguerestxt(&listaAlugueres, "Alugueres.txt", grafo, listaMeios);}\par
98 \par
99     x=carregarAlugueresBinario(&listaAlugueres, {\cf22 "Alugueres.bin"}, grafo, listaMeios);\par
100 \par
101     {\cf20 //imprimirAluguerLista(listaAlugueres);}\par
102 \par
103 {\cf21 #pragma endregion}\par
104 \par
105 {\cf21 #pragma region Grava\'E7\'F5es e destrui\'E7\'F5es}\par
106 \par
107     x=guardarAlugueresBinario(listaAlugueres, {\cf22 "Alugueres.bin"});\par
108     aux = guardarMeiosMobilidadebin(listaMeios);\par
109     aux = guardarClientesbin(listaClientes);\par
110     aux = guardarGestoresbin(listaGestores);\par
111 \par
112 \par
113     DestruirListaG(listaGestores);\par
114     DestruirListaC(listaClientes);\par
115     destruirAluguerLista(listaAlugueres);\par
116     DestruirListaM(listaMeios);\par
117     grafo = DestruirGrafo(grafo);\par
118 \par
119 {\cf21 #pragma endregion}\par
120 \par
121 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia ao ficheiro EDA-Projeto/MeiosMobilidade.h\par \pard\plain 
{\tc\tcl2 \v EDA-Projeto/MeiosMobilidade.h}
{\xe \v EDA-Projeto/MeiosMobilidade.h}
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ficheiro header dos meios de mobilidade. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdbool.h>}\par
{\f2 #include <stdlib.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b MeiosMobilidade}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b MeiosMobilidadeLista}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b _CTR_SECURE_NO_WARNINGS}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MeiosMobilidadeh}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b L}\~ 20\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es de tipos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b MeiosMobilidade} {\b Meios}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b MeiosMobilidadeLista} {\b MeiosLista}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b TipoMeio} \{ {\b Bicicleta}
, {\b Carro}
, {\b Trotinete}
, {\b Autocarro}
, {\b Outro}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lerMeiostxt} ({\b MeiosLista} **listaMeios)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para ler os dados dos meios de mobilidade do ficheiro txt 1\'BA L\'EA os dados de cada meio de mobilidade e envia para a fun\'E7\'E3o adicionarMeioLista que insere na lista encadeada 2\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarMeiosbin. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MeiosLista} * {\b adicionarMeioListaOrdenado} ({\b MeiosLista} *listaMeiosMobilidade, {\b Meios} novoMeio)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insere Meios no incio de uma lista encadeada 1\'BA Cria um novo n\'F3 com os dados do meio de mobilidade 2\'BA Insere o novo n\'F3 no inicio da lista 3\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarMeiosbin. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b guardarMeiosMobilidadebin} ({\b MeiosLista} *lista)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o guarda a lista de meios de mobilidade no ficheiro bin\'E1rio 1\'BA Abre o ficheiro bin\'E1rio para escrita 2\'BA Percorre a lista encadeada e guarda os dados de cada meio de mobilidade no ficheiro 3\'BA Fecha o ficheiro. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MeiosLista} * {\b lerMeiosbin} ({\b MeiosLista} **lista)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o l\'EA os dados dos meios de mobilidade do ficheiro bin\'E1rio 1\'BA Abre o ficheiro bin\'E1rio para leitura 2\'BA Percorre o ficheiro e guarda os dados de cada meio de mobilidade na lista encadeada 3\'BA Fecha o ficheiro. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b adicionarNovoMeio} ({\b MeiosLista} **listaMeios)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b RemoverMeio} ({\b MeiosLista} **listaMeio, int id)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o remove um meio da lista de gestores 1\'BA Procura pelo meio com o id correspondente na lista encadeada 2\'BA Remove o meio da lista encadeada 3\'BA Atualiza o arquivo bin\'E1rio com a lista atualizada chamando a fun\'E7\'E3o guardarGestoresbin. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Meios} * {\b procurarMeioPorId} ({\b MeiosLista} *listaMeios, int id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ModificarMeioMobilidade} ({\b MeiosLista} *listaMeios, int id, int campo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DestruirListaM} ({\b MeiosLista} *lista)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b calcularAutonomia} ({\b Meios} *meio)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ListarMeiosPorLocalizacao} ({\b MeiosLista} *mlista, char *geocodigo, {\b MeiosLista} **listaMeios)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mostrarMeios} ({\b MeiosLista} *lista)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Meios} * {\b obterDadosMeiosEcra} ({\b Meios} *m)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b MeioRemovidoEcra} ({\b MeiosLista} **listaMeios)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ModificarDadoMeioMobilidade} ({\b MeiosLista} *listaMeios, int id, int campo)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b TipoMeio} {\b TipoMeio}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ficheiro header dos meios de mobilidade. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
March 2023 \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das macros\par
\pard\plain 
{\xe \v _CTR_SECURE_NO_WARNINGS\:MeiosMobilidade.h}
{\xe \v MeiosMobilidade.h\:_CTR_SECURE_NO_WARNINGS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define _CTR_SECURE_NO_WARNINGS}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v L\:MeiosMobilidade.h}
{\xe \v MeiosMobilidade.h\:L}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define L\~ 20}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MeiosMobilidadeh\:MeiosMobilidade.h}
{\xe \v MeiosMobilidade.h\:MeiosMobilidadeh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MeiosMobilidadeh}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos tipos\par
\pard\plain 
{\xe \v Meios\:MeiosMobilidade.h}
{\xe \v MeiosMobilidade.h\:Meios}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b MeiosMobilidade} {\b Meios}}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MeiosLista\:MeiosMobilidade.h}
{\xe \v MeiosMobilidade.h\:MeiosLista}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b MeiosMobilidadeLista} {\b MeiosLista}}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos valores da enumera\'E7\'E3o\par
\pard\plain 
{\xe \v TipoMeio\:MeiosMobilidade.h}
{\xe \v MeiosMobilidade.h\:TipoMeio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b TipoMeio}}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Valores de enumera\'E7\'F5es:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v Bicicleta\:MeiosMobilidade.h}
{\xe \v MeiosMobilidade.h\:Bicicleta}
{\qr Bicicleta{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
\cell }{\cell }{\row }
{\xe \v Carro\:MeiosMobilidade.h}
{\xe \v MeiosMobilidade.h\:Carro}
{\qr Carro{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
\cell }{\cell }{\row }
{\xe \v Trotinete\:MeiosMobilidade.h}
{\xe \v MeiosMobilidade.h\:Trotinete}
{\qr Trotinete{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
\cell }{\cell }{\row }
{\xe \v Autocarro\:MeiosMobilidade.h}
{\xe \v MeiosMobilidade.h\:Autocarro}
{\qr Autocarro{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
\cell }{\cell }{\row }
{\xe \v Outro\:MeiosMobilidade.h}
{\xe \v MeiosMobilidade.h\:Outro}
{\qr Outro{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
\cell }{\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 19               \{\par
20     Bicicleta,\par
21     Carro,\par
22     Trotinete,\par
23     Autocarro,\par
24     Outro\par
25 \}TipoMeio;\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v adicionarMeioListaOrdenado\:MeiosMobilidade.h}
{\xe \v MeiosMobilidade.h\:adicionarMeioListaOrdenado}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MeiosLista} * adicionarMeioListaOrdenado ({\b MeiosLista} *  {\i listaMeiosMobilidade}, {\b Meios}  {\i novoMeio})}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insere Meios no incio de uma lista encadeada 1\'BA Cria um novo n\'F3 com os dados do meio de mobilidade 2\'BA Insere o novo n\'F3 no inicio da lista 3\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarMeiosbin. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i recebe} \cell }{uma lista e um meio de mobilidade para o inserir na lista \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
retorna a lista atualizada \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques\par
}}Insere Meios no incio de uma lista encadeada 1\'BA Cria um novo n\'F3 com os dados do meio de mobilidade 2\'BA Insere o novo n\'F3 no inicio da lista 3\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarMeiosbin.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaMeiosMobilidade} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i novoMeio} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
listaMeiosMobilidade \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 74                                                                                          \{\par
75     MeiosLista* novoNo = (MeiosLista*)malloc({\cf17 sizeof}(MeiosLista));\par
76     novoNo->m = novoMeio;\par
77     novoNo->next = NULL;\par
78 \par
79     {\cf19 if} (listaMeiosMobilidade == NULL) \{\par
80         {\cf19 return} novoNo;\par
81     \}\par
82     {\cf19 else} {\cf19 if} (listaMeiosMobilidade->m.autonomia < novoMeio.autonomia) \{\par
83         novoNo->next = listaMeiosMobilidade;\par
84         {\cf19 return} novoNo;\par
85     \}\par
86     {\cf19 else} \{\par
87         MeiosLista* atual = listaMeiosMobilidade;\par
88         {\cf19 while} (atual->next != NULL && atual->next->m.autonomia > novoMeio.autonomia) \{\par
89             atual = atual->next;\par
90         \}\par
91         novoNo->next = atual->next;\par
92         atual->next = novoNo;\par
93         {\cf19 return} listaMeiosMobilidade;\par
94     \}\par
95 \}\par
}
}
{\xe \v adicionarNovoMeio\:MeiosMobilidade.h}
{\xe \v MeiosMobilidade.h\:adicionarNovoMeio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool adicionarNovoMeio ({\b MeiosLista} **  {\i listaMeios})}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 152                                                 \{\par
153     {\cf20 // Cria um novo meio com os dados inseridos pelo usu\'E1rio}\par
154     Meios novoMeio;\par
155     obterDadosMeiosEcra(&novoMeio);\par
156     {\cf20 // Adiciona o novo meio \'E0 lista}\par
157     *listaMeios = adicionarMeioListaOrdenado(*listaMeios, novoMeio);\par
158     \par
159     {\cf19 return} {\cf17 true};\par
160 \}\par
}
}
{\xe \v calcularAutonomia\:MeiosMobilidade.h}
{\xe \v MeiosMobilidade.h\:calcularAutonomia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int calcularAutonomia ({\b Meios} *  {\i m})}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o calcula a autonomia de um meio de mobilidade 1\'BA Calcula a autonomia de acordo com o tipo de meio de mobilidade 2\'BA Retorna a autonomia\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i meio} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 270                                 \{\par
271     {\cf19 switch} (m->tipo) \{\par
272     {\cf19 case} Bicicleta:\par
273         m->autonomia = m->bateria / 6;\par
274         {\cf19 break};\par
275     {\cf19 case} Carro:\par
276         m->autonomia = m->bateria / 3;\par
277         {\cf19 break};\par
278     {\cf19 case} Trotinete:\par
279         m->autonomia = m->bateria / 5;\par
280         {\cf19 break};\par
281     {\cf19 case} Autocarro:\par
282         m->autonomia = m->bateria / 4;\par
283         {\cf19 break};\par
284     {\cf19 default}:\par
285         {\cf20 // Defina um valor de autonomia padr\'E3o para outros tipos de meios de mobilidade, se necess\'E1rio}\par
286         {\cf19 break};\par
287     \}\par
288 \par
289     {\cf19 return} m->autonomia;\par
290 \}\par
}
}
{\xe \v DestruirListaM\:MeiosMobilidade.h}
{\xe \v MeiosMobilidade.h\:DestruirListaM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DestruirListaM ({\b MeiosLista} *  {\i lista})}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o destroi a lista de meios de mobilidade 1\'BA Percorre a lista encadeada e destroi cada n\'F3 2\'BA Atribui NULL \'E0 lista\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lista} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 252                                        \{\par
253     MeiosLista* atual = lista;\par
254     {\cf19 while} (atual != NULL) \{\par
255         MeiosLista* proximo = atual->next;\par
256         free(atual);\par
257         atual = proximo;\par
258     \}\par
259 \}\par
}
}
{\xe \v guardarMeiosMobilidadebin\:MeiosMobilidade.h}
{\xe \v MeiosMobilidade.h\:guardarMeiosMobilidadebin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool guardarMeiosMobilidadebin ({\b MeiosLista} *  {\i lista})}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o guarda a lista de meios de mobilidade no ficheiro bin\'E1rio 1\'BA Abre o ficheiro bin\'E1rio para escrita 2\'BA Percorre a lista encadeada e guarda os dados de cada meio de mobilidade no ficheiro 3\'BA Fecha o ficheiro. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lista} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 107                                                   \{\par
108     FILE* ficheiro = fopen({\cf22 "MeiosMobilidade.bin"}, {\cf22 "wb"});\par
109     {\cf19 if} (ficheiro == NULL) \{\par
110         {\cf19 return} {\cf17 false};\par
111     \}\par
112     {\cf19 while} (lista != NULL) \{\par
113         fwrite(&lista->m, {\cf17 sizeof}(Meios), 1, ficheiro);\par
114         lista = lista->next;\par
115     \}\par
116     fclose(ficheiro);\par
117     {\cf19 return} {\cf17 true};\par
118 \}\par
}
}
{\xe \v lerMeiosbin\:MeiosMobilidade.h}
{\xe \v MeiosMobilidade.h\:lerMeiosbin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MeiosLista} * lerMeiosbin ({\b MeiosLista} **  {\i listaMeios})}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o l\'EA os dados dos meios de mobilidade do ficheiro bin\'E1rio 1\'BA Abre o ficheiro bin\'E1rio para leitura 2\'BA Percorre o ficheiro e guarda os dados de cada meio de mobilidade na lista encadeada 3\'BA Fecha o ficheiro. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lista} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques\par
}}Esta fun\'E7\'E3o l\'EA os dados dos meios de mobilidade do ficheiro bin\'E1rio 1\'BA Abre o ficheiro bin\'E1rio para leitura 2\'BA Percorre o ficheiro e guarda os dados de cada meio de mobilidade na lista encadeada 3\'BA Fecha o ficheiro.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lista} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 129                                                  \{\par
130     FILE* ficheiro = fopen({\cf22 "MeiosMobilidade.bin"}, {\cf22 "rb"});\par
131     {\cf19 if} (ficheiro == NULL) \{\par
132         {\cf19 return} 0;\par
133     \}\par
134     Meios novoMeio;\par
135     {\cf19 while} (fread(&novoMeio, {\cf17 sizeof}(Meios), 1, ficheiro) != 0) \{\par
136         *listaMeios = adicionarMeioListaOrdenado(*listaMeios, novoMeio);\par
137         \}\par
138     fclose(ficheiro);\par
139     {\cf19 return} listaMeios;\par
140 \}\par
}
}
{\xe \v lerMeiostxt\:MeiosMobilidade.h}
{\xe \v MeiosMobilidade.h\:lerMeiostxt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int lerMeiostxt ({\b MeiosLista} **  {\i listaMeiosMobilidade})}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para ler os dados dos meios de mobilidade do ficheiro txt 1\'BA L\'EA os dados de cada meio de mobilidade e envia para a fun\'E7\'E3o adicionarMeioLista que insere na lista encadeada 2\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarMeiosbin. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaMeios} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques\par
}}Fun\'E7\'E3o para ler os dados dos meios de mobilidade do ficheiro txt 1\'BA L\'EA os dados de cada meio de mobilidade e envia para a fun\'E7\'E3o adicionarMeioLista que insere na lista encadeada 2\'BA Guarda a lista atualizada no ficheiro bin\'E1rio chamando a fun\'E7\'E3o guardarMeiosbin.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaMeiosMobilidade} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 25                                                    \{\par
26     FILE* ficheiro = fopen({\cf22 "MeiosMobilidade.txt"}, {\cf22 "r"});\par
27     {\cf19 if} (ficheiro == NULL) \{\par
28         {\cf19 return} 0;\par
29     \}\par
30     {\cf20 // L\'EA os dados de cada cliente e insere na lista encadeada}\par
31     {\cf18 char} linha[200];\par
32     {\cf19 while} (fgets(linha, 200, ficheiro) != NULL) \{\par
33         Meios novoMeio;\par
34         {\cf18 char} tipoMeio[20];\par
35         sscanf(linha, {\cf22 "%d;%[^;];%[^;];%d;%d"}, &novoMeio.id, tipoMeio, novoMeio.localizacao, &novoMeio.bateria, &novoMeio.status);\par
36 \par
37         {\cf19 if} (strcmp(tipoMeio, {\cf22 "Bicicleta"}) == 0) \{\par
38             novoMeio.tipo = Bicicleta;\par
39         \}\par
40         {\cf19 else} {\cf19 if} (strcmp(tipoMeio, {\cf22 "Carro"}) == 0) \{\par
41             novoMeio.tipo = Carro;\par
42         \}\par
43         {\cf19 else} {\cf19 if} (strcmp(tipoMeio, {\cf22 "Trotinete"}) == 0) \{\par
44             novoMeio.tipo = Trotinete;\par
45         \}\par
46         {\cf19 else} {\cf19 if} (strcmp(tipoMeio, {\cf22 "Autocarro"}) == 0) \{\par
47             novoMeio.tipo = Autocarro;\par
48         \}\par
49         {\cf19 else} \{\par
50             novoMeio.tipo = Outro;\par
51         \}\par
52 \par
53         novoMeio.autonomia = calcularAutonomia(&novoMeio);\par
54 \par
55         *listaMeiosMobilidade = adicionarMeioListaOrdenado(*listaMeiosMobilidade, novoMeio);\par
56     \}\par
57     fclose(ficheiro);\par
58     {\cf19 return} 1;\par
59 \}\par
}
}
{\xe \v ListarMeiosPorLocalizacao\:MeiosMobilidade.h}
{\xe \v MeiosMobilidade.h\:ListarMeiosPorLocalizacao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ListarMeiosPorLocalizacao ({\b MeiosLista} *  {\i mlista}, char *  {\i geocodigo}, {\b MeiosLista} **  {\i listaMeios})}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o serve para listar os meios de mobilidade por localiza\'E7\'E3o geogr\'E1fica, atrav\'E9s de um c\'F3digo geogr\'E1fico (geocode) 1\'BA Percorre a lista encadeada e compara o c\'F3digo geogr\'E1fico do meio com o c\'F3digo inserido pelo usu\'E1rio 2\'BA Adiciona o meio \'E0 lista de meios de mobilidade por localiza\'E7\'E3o 3\'BA Retorna a lista de meios de mobilidade por localiza\'E7\'E3o\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i $PARAMS} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
$RETURN\par
}}Esta fun\'E7\'E3o serve para listar os meios de mobilidade por localiza\'E7\'E3o geogr\'E1fica, atrav\'E9s de um c\'F3digo geogr\'E1fico (geocode) 1\'BA Percorre a lista encadeada e compara o c\'F3digo geogr\'E1fico do meio com o c\'F3digo inserido pelo usu\'E1rio 2\'BA Adiciona o meio \'E0 lista de meios de mobilidade por localiza\'E7\'E3o 3\'BA Retorna a lista de meios de mobilidade por localiza\'E7\'E3o\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mlista} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i geocodigo} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaMeios} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 303                                                                                              \{\par
304     MeiosLista* meio = mlista;\par
305 \par
306     {\cf19 while} (meio != NULL) \{\par
307         {\cf19 if} (strcmp(meio->m.localizacao, geocodigo) == 0) \{\par
308             {\cf20 // O meio de mobilidade est\'E1 na localiza\'E7\'E3o desejada, adicione as informa\'E7\'F5es \'E0 lista}\par
309             MeiosLista* novoMeio = (MeiosLista*)malloc({\cf17 sizeof}(MeiosLista));\par
310             novoMeio->m.id = meio->m.id;\par
311             novoMeio->m.tipo = meio->m.tipo;\par
312             strcpy(novoMeio->m.localizacao, meio->m.localizacao);\par
313             novoMeio->m.bateria = meio->m.bateria;\par
314             novoMeio->m.status = meio->m.status;\par
315             novoMeio->m.autonomia = meio->m.autonomia;\par
316             novoMeio->next = NULL;\par
317 \par
318             {\cf20 // Verifica se a lista de meios est\'E1 vazia}\par
319             {\cf19 if} (*listaMeios == NULL) \{\par
320                 *listaMeios = novoMeio;\par
321             \}\par
322             {\cf19 else} \{\par
323                 {\cf20 // Encontra o \'FAltimo elemento da lista e adiciona o novo meio no final}\par
324                 MeiosLista* ultimo = *listaMeios;\par
325                 {\cf19 while} (ultimo->next != NULL) \{\par
326                     ultimo = ultimo->next;\par
327                 \}\par
328                 ultimo->next = novoMeio;\par
329             \}\par
330         \}\par
331         meio = meio->next;\par
332     \}\par
333 \}\par
}
}
{\xe \v MeioRemovidoEcra\:MeiosMobilidade.h}
{\xe \v MeiosMobilidade.h\:MeioRemovidoEcra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MeioRemovidoEcra ({\b MeiosLista} **  {\i listaMeios})}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 410                                                \{\par
411     {\cf18 int} id;\par
412     printf({\cf22 "Introduza o ID do meio que pretende remover: "});\par
413     scanf({\cf22 "%d"}, &{\cf18 id});\par
414     {\cf19 if} (RemoverMeio(listaMeios, {\cf18 id})) \{\par
415         {\cf19 return} {\cf17 true};\par
416     \}\par
417     {\cf19 else} \{\par
418         {\cf19 return} {\cf17 false};\par
419     \}\par
420 \}\par
}
}
{\xe \v ModificarDadoMeioMobilidade\:MeiosMobilidade.h}
{\xe \v MeiosMobilidade.h\:ModificarDadoMeioMobilidade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ModificarDadoMeioMobilidade ({\b MeiosLista} *  {\i listaMeios}, int  {\i id}, int  {\i campo})}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 422                                                                             \{\par
423     Meios* meio = procurarMeioPorId(listaMeios, {\cf18 id});\par
424 \par
425     {\cf19 if} (meio == NULL) \{\par
426         {\cf19 return} {\cf17 false};\par
427     \}\par
428 \par
429     {\cf19 switch} (campo) \{\par
430     {\cf19 case} 1:\par
431         printf({\cf22 "Novo Tipo (0 - Bicicleta, 1 - Carro, 2 - Trotinete, 3 - Autocarro, 4 - Outro): "});\par
432         {\cf18 int} novoTipo;\par
433         scanf({\cf22 "%d"}, &novoTipo);\par
434         meio->tipo = novoTipo;\par
435         {\cf19 break};\par
436     {\cf19 case} 2:\par
437         printf({\cf22 "Nova Localizacao: "});\par
438         scanf({\cf22 "%s"}, meio->localizacao);\par
439         {\cf19 break};\par
440     {\cf19 case} 3:\par
441         printf({\cf22 "Nova Bateria: "});\par
442         scanf({\cf22 "%d"}, &meio->bateria);\par
443         {\cf19 break};\par
444     {\cf19 case} 4:\par
445         printf({\cf22 "Novo Status (0 - Inativo, 1 - Ativo): "});\par
446         {\cf18 int} novoStatus;\par
447         scanf({\cf22 "%d"}, &novoStatus);\par
448         meio->status = novoStatus;\par
449         {\cf19 break};\par
450     {\cf19 default}:\par
451         printf({\cf22 "Campo inv\'E1lido.\\n"});\par
452         {\cf19 break};\par
453     \}\par
454     {\cf19 return} {\cf17 true};\par
455 \}\par
}
}
{\xe \v ModificarMeioMobilidade\:MeiosMobilidade.h}
{\xe \v MeiosMobilidade.h\:ModificarMeioMobilidade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ModificarMeioMobilidade ({\b MeiosLista} *  {\i listaMeios}, int  {\i id}, int  {\i campo})}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o modifica um dado de um meio de mobilidade 1\'BA Procura o meio de mobilidade na lista de meios por id 2\'BA Modifica o dado do meio de mobilidade\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaMeios} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i id} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i campo} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 235                                                                         \{\par
236     {\cf18 bool} sucesso = {\cf17 false};\par
237 \par
238     sucesso = ModificarDadoMeioMobilidade(listaMeios, {\cf18 id}, campo);\par
239 \par
240     {\cf19 return} sucesso;\par
241 \}\par
}
}
{\xe \v mostrarMeios\:MeiosMobilidade.h}
{\xe \v MeiosMobilidade.h\:mostrarMeios}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mostrarMeios ({\b MeiosLista} *  {\i lista})}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 338                                      \{\par
339     printf({\cf22 "Lista de meios de mobilidade:\\n\\n"});\par
340     {\cf19 while} (lista != NULL) \{\par
341         printf({\cf22 "ID: %d\\n"}, lista->m.id);\par
342         printf({\cf22 "Tipo: "});\par
343         {\cf19 switch} (lista->m.tipo) \{\par
344         {\cf19 case} Bicicleta:\par
345             printf({\cf22 "Bicicleta\\n"});\par
346             {\cf19 break};\par
347         {\cf19 case} Carro:\par
348             printf({\cf22 "Carro\\n"});\par
349             {\cf19 break};\par
350         {\cf19 case} Trotinete:\par
351             printf({\cf22 "Trotinete\\n"});\par
352             {\cf19 break};\par
353         {\cf19 case} Autocarro:\par
354             printf({\cf22 "Autocarro\\n"});\par
355             {\cf19 break};\par
356         {\cf19 case} Outro:\par
357             printf({\cf22 "Outro\\n"});\par
358             {\cf19 break};\par
359         {\cf19 default}:\par
360             printf({\cf22 "Desconhecido\\n"});\par
361             {\cf19 break};\par
362         \}\par
363         printf({\cf22 "Localizacao: %s\\n"}, lista->m.localizacao);\par
364         printf({\cf22 "Bateria: %d\\n"}, lista->m.bateria);\par
365         printf({\cf22 "Autonomia: %d\\n"}, lista->m.autonomia);\par
366         printf({\cf22 "Status: %d\\n"}, lista->m.status);\par
367         printf({\cf22 "\\n"});\par
368         lista = lista->next;\par
369     \}\par
370 \}\par
}
}
{\xe \v obterDadosMeiosEcra\:MeiosMobilidade.h}
{\xe \v MeiosMobilidade.h\:obterDadosMeiosEcra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Meios} * obterDadosMeiosEcra ({\b Meios} *  {\i m})}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 372                                      \{\par
373     {\cf18 int} x = 0;\par
374     printf({\cf22 "ID: "});\par
375     scanf({\cf22 "%d"}, &m->id);\par
376     printf({\cf22 "Tipo (0 - Bicicleta, 1 - Carro, 2 - Trotinete, 3 - Autocarro, 4 - Outro): "});\par
377     scanf({\cf22 "%d"}, &x);\par
378     {\cf19 switch} (x) \{\par
379     {\cf19 case} 0:\par
380         m->tipo = Bicicleta;\par
381         {\cf19 break};\par
382     {\cf19 case} 1:\par
383         m->tipo = Carro;\par
384         {\cf19 break};\par
385     {\cf19 case} 2:\par
386         m->tipo = Trotinete;\par
387         {\cf19 break};\par
388     {\cf19 case} 3:\par
389         m->tipo = Autocarro;\par
390         {\cf19 break};\par
391     {\cf19 case} 4:\par
392         m->tipo = Outro;\par
393         {\cf19 break};\par
394     {\cf19 default}:\par
395         {\cf19 break};\par
396     \}\par
397 \par
398     m->autonomia = calcularAutonomia(m);\par
399 \par
400     printf({\cf22 "Localizacao: "});\par
401     scanf({\cf22 "%s"}, m->localizacao);\par
402     printf({\cf22 "Bateria: "});\par
403     scanf({\cf22 "%d"}, &m->bateria);\par
404     printf({\cf22 "Status (0 - Inativo, 1 - Ativo): "});\par
405     scanf({\cf22 "%d"}, &m->status);\par
406     {\cf19 return} m;\par
407 \}\par
}
}
{\xe \v procurarMeioPorId\:MeiosMobilidade.h}
{\xe \v MeiosMobilidade.h\:procurarMeioPorId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Meios} * procurarMeioPorId ({\b MeiosLista} *  {\i listaMeios}, int  {\i id})}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o procura um meio de mobilidade na lista de meios por id 1\'BA Percorre a lista encadeada e compara o id do meio com o id inserido pelo usu\'E1rio 2\'BA Retorna o meio se for encontrado\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i listaMeios} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i id} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 213                                                          \{\par
214     MeiosLista* current = listaMeios;\par
215     {\cf19 while} (current != NULL) \{\par
216         {\cf19 if} (current->m.id == {\cf18 id}) \{\par
217             {\cf19 return} &(current->m);\par
218         \}\par
219         current = current->next;\par
220     \}\par
221     {\cf19 return} NULL;  {\cf20 // Retorna NULL se o meio de mobilidade n\'E3o for encontrado}\par
222 \}\par
}
}
{\xe \v RemoverMeio\:MeiosMobilidade.h}
{\xe \v MeiosMobilidade.h\:RemoverMeio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool RemoverMeio ({\b MeiosLista} **  {\i listaMeios}, int  {\i id})}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o remove um meio da lista de gestores 1\'BA Procura pelo meio com o id correspondente na lista encadeada 2\'BA Remove o meio da lista encadeada 3\'BA Atualiza o arquivo bin\'E1rio com a lista atualizada chamando a fun\'E7\'E3o guardarGestoresbin. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i $PARAMS} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Alexandre Marques \par
}}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 171                                                   \{\par
172     {\cf19 if} (listaMeios == NULL) \{\par
173         {\cf19 return} {\cf17 false};\par
174     \}\par
175     MeiosLista* meioAtual = *listaMeios;\par
176     MeiosLista* meioAnterior = NULL;\par
177     {\cf18 bool} encontrado = {\cf17 false};\par
178     {\cf20 // Procura pelo cliente com o id correspondente na lista encadeada}\par
179     {\cf19 while} (meioAtual != NULL) \{\par
180         {\cf19 if} (meioAtual->m.id == {\cf18 id}) \{\par
181             encontrado = {\cf17 true};\par
182             {\cf19 break};\par
183         \}\par
184         meioAnterior = meioAtual;\par
185         meioAtual = meioAtual->next;\par
186     \}\par
187     {\cf19 if} (!encontrado) \{\par
188         {\cf19 return} {\cf17 false};\par
189     \}\par
190     {\cf20 // Remove o meio da lista encadeada}\par
191     {\cf19 if} (meioAnterior == NULL) \{\par
192         *listaMeios = meioAtual->next;\par
193     \}\par
194     {\cf19 else}\par
195     \{\par
196         meioAnterior->next = meioAtual->next;\par
197     \}\par
198     \par
199     {\cf19 return} {\cf17 true};\par
200 \par
201 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das vari\'E1veis\par
\pard\plain 
{\xe \v TipoMeio\:MeiosMobilidade.h}
{\xe \v MeiosMobilidade.h\:TipoMeio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b TipoMeio} {\b TipoMeio}}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MeiosMobilidade.h\par \pard\plain 
{\tc\tcl2 \v EDA-Projeto/MeiosMobilidade.h}
{\xe \v EDA-Projeto/MeiosMobilidade.h}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Ir para a documenta\'E7\'E3o deste ficheiro.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*****************************************************************/}\par
8 {\cf21 #pragma once}\par
9 {\cf21 #pragma warning (disable: 4996)}\par
10 {\cf21 #include <stdio.h>}\par
11 {\cf21 #include <stdbool.h>}\par
12 {\cf21 #include <stdlib.h>}\par
13 {\cf21 #define _CTR_SECURE_NO_WARNINGS}\par
14 \par
15 {\cf21 #ifndef MeiosMobilidadeh}\par
16 {\cf21 #define MeiosMobilidadeh}\par
17 {\cf21 #define L 20}\par
18 \par
19 {\cf17 enum} TipoMeio \{\par
20     Bicicleta,\par
21     Carro,\par
22     Trotinete,\par
23     Autocarro,\par
24     Outro\par
25 \}TipoMeio;\par
26 \par
27 {\cf17 typedef} {\cf17 struct }MeiosMobilidade \{\par
28     {\cf18 int} id;\par
29     {\cf17 enum} TipoMeio tipo;\par
30     {\cf18 char} localizacao[L];\par
31     {\cf18 int} bateria;\par
32     {\cf18 int} status;\par
33     {\cf18 int} autonomia;\par
34 \}Meios;\par
35 \par
36 {\cf17 typedef} {\cf17 struct }MeiosMobilidadeLista \{\par
37     Meios m;\par
38     {\cf17 struct }MeiosMobilidadeLista* next;\par
39 \}MeiosLista;\par
40 \par
49 {\cf18 int} lerMeiostxt(MeiosLista** listaMeios);\par
50 \par
61 MeiosLista* adicionarMeioListaOrdenado(MeiosLista* listaMeiosMobilidade, Meios novoMeio);\par
62 \par
72 {\cf18 bool} guardarMeiosMobilidadebin(MeiosLista* lista);\par
73 \par
83 MeiosLista* lerMeiosbin(MeiosLista** lista);\par
84 \par
85 {\cf20 /*}\par
96 {\cf20 bool adicionarNovoMeio(MeiosLista** listaMeios);}\par
97 {\cf20 }\par
107 {\cf20 bool RemoverMeio(MeiosLista** listaMeio, int id);}\par
108 {\cf20 }\par
119 {\cf20 Meios* procurarMeioPorId(MeiosLista* listaMeios, int id);}\par
120 {\cf20 }\par
132 {\cf20 bool ModificarMeioMobilidade(MeiosLista* listaMeios, int id, int campo);}\par
133 {\cf20 }\par
134 {\cf20 }\par
143 {\cf20 void DestruirListaM(MeiosLista* lista);}\par
144 {\cf20 }\par
154 {\cf20 int calcularAutonomia(Meios* meio);}\par
155 {\cf20 }\par
166 {\cf20 void ListarMeiosPorLocalizacao(MeiosLista* mlista, char* geocodigo, MeiosLista** listaMeios);}\par
167 {\cf20 }\par
168 {\cf20 }\par
169 {\cf20 #pragma region Ecra}\par
170 {\cf20 }\par
171 {\cf20 void mostrarMeios(MeiosLista* lista);}\par
172 {\cf20 }\par
173 {\cf20 Meios* obterDadosMeiosEcra(Meios* m);}\par
174 {\cf20 }\par
175 {\cf20 bool MeioRemovidoEcra(MeiosLista** listaMeios);}\par
176 {\cf20 }\par
177 {\cf20 bool ModificarDadoMeioMobilidade(MeiosLista* listaMeios, int id, int campo);}\par
178 {\cf20 }\par
179 {\cf20 #pragma endregion}\par
180 {\cf20 }\par
181 {\cf20 #endif // !MeiosMobilidadeh}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \'CDndice\par 
\pard\plain 
{\tc \v \'CDndice}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
